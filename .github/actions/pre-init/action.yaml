name: pre-init
description: Set up Nix and Bolt

# TODO: Composite actions don't support defaults
# defaults:
#   run:
#     # Enable fail-fast behavior
#     shell: bash -e {0}

inputs:
  OP_SERVICE_ACCOUNT_TOKEN:
    required: true

runs:
  using: composite

  steps:
    # MARK: Cache
    - name: Nix Cache
      uses: actions/cache@v3.3.1
      with:
        key: ${{ runner.os }}-nix-${{ hashfiles('./shell.nix', './nix/**/*.nix') }}
        path: ${{ env.store }}
        restore-keys: |
          ${{ runner.os }}-nix-${{ hashfiles('./shell.nix', './nix/**/*.nix') }}
          ${{ runner.os }}-nix-

    # MARK: Nix
    - uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixos-23.05
        extra_nix_config: "store = ${{ env.store }}\n"

    # Build initial shell, all future calls to nix-shell will be fast
    - name: Build Shell
      shell: bash -e {0}
      run: nix-shell --pure --run "echo 'Built shell'"

    # MARK: Bolt
    - name: Pull Config
      shell: bash -e {0}
      env:
        OP_SERVICE_ACCOUNT_TOKEN: ${{ inputs.OP_SERVICE_ACCOUNT_TOKEN }}
      # Cannot use --pure `https://github.com/NixOS/nixpkgs/issues/66716`
      run: |
        nix-shell --run "bolt config pull -y ci --op-namespace-path 'op://Engineering/ice6g6zdnag4lxl5d3dcs7jj64/config' --op-secrets-path 'op://Engineering/ice6g6zdnag4lxl5d3dcs7jj64/secrets'"

    # Delete old Bolt binaries in order to fall back to the Nix-built binary
    - name: Remove Old Bolt Builds
      shell: bash -e {0}
      run: rm -f target/debug/bolt target/release/bolt
