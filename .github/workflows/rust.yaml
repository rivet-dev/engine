name: rust

on:
  pull_request:
    paths-ignore:
      - 'frontend/**'
  push:
    branches:
      - main

concurrency:
  group: rust-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

defaults:
  run:
    # Enable fail-fast behavior
    shell: bash -e {0}

env:
  # Disable incremental compilation for faster from-scratch builds
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "--cfg tokio_unstable"

jobs:
  cargo-fmt:
    runs-on: ubuntu-20.04
    container:
      image: rust:1.82.0
    steps:
      - uses: actions/checkout@v4
      - run: rustup component add rustfmt
      - run: cargo fmt --check

  cargo-check-main:
    runs-on: [self-hosted, Linux, X64]
    container:
      image: rust:1.82.0
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        # TODO(RVT-4168): Compile libfdb from scratch for ARM
        # The FDB version should match `cluster::workflows::server::install::install_scripts::components::fdb::FDB_VERSION`
        run: |
          apt-get update
          apt-get install -y protobuf-compiler libpq-dev curl libclang-dev
          curl -Lf -o /lib/libfdb_c.so "https://github.com/apple/foundationdb/releases/download/7.1.60/libfdb_c.x86_64.so"
      - run: RUSTFLAGS="--cfg tokio_unstable" cargo check --release
        env:
          # Expose token for pulling GH artifacts
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cargo-deny:
    runs-on: ubuntu-20.04
    container:
      image: rust:1.82.0
    steps:
      - uses: actions/checkout@v4
      - name: cargo deny
        uses: EmbarkStudios/cargo-deny-action@v1

