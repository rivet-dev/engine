/**
 * This file was auto-generated by Fern from our API Definition.
 */

import type * as Rivet from "../../api/index";
import * as core from "../../core";
import type * as serializers from "../index";
import { HealthResponse } from "./HealthResponse";
import { HealthStatus } from "./HealthStatus";

export const DatacenterHealth: core.serialization.ObjectSchema<
	serializers.DatacenterHealth.Raw,
	Rivet.DatacenterHealth
> = core.serialization.object({
	datacenterLabel: core.serialization.property(
		"datacenter_label",
		core.serialization.number(),
	),
	datacenterName: core.serialization.property(
		"datacenter_name",
		core.serialization.string(),
	),
	error: core.serialization.string().optional(),
	response: HealthResponse.optional(),
	rttMs: core.serialization.property(
		"rtt_ms",
		core.serialization.number().optional(),
	),
	status: HealthStatus,
});

export declare namespace DatacenterHealth {
	export interface Raw {
		datacenter_label: number;
		datacenter_name: string;
		error?: string | null;
		response?: HealthResponse.Raw | null;
		rtt_ms?: number | null;
		status: HealthStatus.Raw;
	}
}
