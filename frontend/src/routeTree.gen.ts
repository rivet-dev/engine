/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SsoCallbackRouteImport } from './routes/sso-callback'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as LoginRouteImport } from './routes/login'
import { Route as JoinRouteImport } from './routes/join'
import { Route as ContextRouteImport } from './routes/_context'
import { Route as ContextIndexRouteImport } from './routes/_context/index'
import { Route as OnboardingChooseOrganizationRouteImport } from './routes/onboarding/choose-organization'
import { Route as ContextEngineRouteImport } from './routes/_context/_engine'
import { Route as ContextCloudRouteImport } from './routes/_context/_cloud'
import { Route as ContextEngineNsNamespaceRouteImport } from './routes/_context/_engine/ns.$namespace'
import { Route as ContextCloudOrgsOrganizationRouteImport } from './routes/_context/_cloud/orgs.$organization'
import { Route as ContextEngineNsNamespaceIndexRouteImport } from './routes/_context/_engine/ns.$namespace/index'
import { Route as ContextCloudOrgsOrganizationIndexRouteImport } from './routes/_context/_cloud/orgs.$organization/index'
import { Route as ContextEngineNsNamespaceConnectRouteImport } from './routes/_context/_engine/ns.$namespace/connect'
import { Route as ContextCloudOrgsOrganizationProjectsIndexRouteImport } from './routes/_context/_cloud/orgs.$organization/projects.index'
import { Route as ContextCloudOrgsOrganizationProjectsProjectRouteImport } from './routes/_context/_cloud/orgs.$organization/projects.$project'
import { Route as ContextCloudOrgsOrganizationProjectsProjectIndexRouteImport } from './routes/_context/_cloud/orgs.$organization/projects.$project/index'
import { Route as ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteImport } from './routes/_context/_cloud/orgs.$organization/projects.$project/ns.$namespace'
import { Route as ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRouteImport } from './routes/_context/_cloud/orgs.$organization/projects.$project/ns.$namespace/index'
import { Route as ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRouteImport } from './routes/_context/_cloud/orgs.$organization/projects.$project/ns.$namespace/connect'

const SsoCallbackRoute = SsoCallbackRouteImport.update({
  id: '/sso-callback',
  path: '/sso-callback',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinRoute = JoinRouteImport.update({
  id: '/join',
  path: '/join',
  getParentRoute: () => rootRouteImport,
} as any)
const ContextRoute = ContextRouteImport.update({
  id: '/_context',
  getParentRoute: () => rootRouteImport,
} as any)
const ContextIndexRoute = ContextIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContextRoute,
} as any)
const OnboardingChooseOrganizationRoute =
  OnboardingChooseOrganizationRouteImport.update({
    id: '/choose-organization',
    path: '/choose-organization',
    getParentRoute: () => OnboardingRoute,
  } as any)
const ContextEngineRoute = ContextEngineRouteImport.update({
  id: '/_engine',
  getParentRoute: () => ContextRoute,
} as any)
const ContextCloudRoute = ContextCloudRouteImport.update({
  id: '/_cloud',
  getParentRoute: () => ContextRoute,
} as any)
const ContextEngineNsNamespaceRoute =
  ContextEngineNsNamespaceRouteImport.update({
    id: '/ns/$namespace',
    path: '/ns/$namespace',
    getParentRoute: () => ContextEngineRoute,
  } as any)
const ContextCloudOrgsOrganizationRoute =
  ContextCloudOrgsOrganizationRouteImport.update({
    id: '/orgs/$organization',
    path: '/orgs/$organization',
    getParentRoute: () => ContextCloudRoute,
  } as any)
const ContextEngineNsNamespaceIndexRoute =
  ContextEngineNsNamespaceIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ContextEngineNsNamespaceRoute,
  } as any)
const ContextCloudOrgsOrganizationIndexRoute =
  ContextCloudOrgsOrganizationIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ContextCloudOrgsOrganizationRoute,
  } as any)
const ContextEngineNsNamespaceConnectRoute =
  ContextEngineNsNamespaceConnectRouteImport.update({
    id: '/connect',
    path: '/connect',
    getParentRoute: () => ContextEngineNsNamespaceRoute,
  } as any)
const ContextCloudOrgsOrganizationProjectsIndexRoute =
  ContextCloudOrgsOrganizationProjectsIndexRouteImport.update({
    id: '/projects/',
    path: '/projects/',
    getParentRoute: () => ContextCloudOrgsOrganizationRoute,
  } as any)
const ContextCloudOrgsOrganizationProjectsProjectRoute =
  ContextCloudOrgsOrganizationProjectsProjectRouteImport.update({
    id: '/projects/$project',
    path: '/projects/$project',
    getParentRoute: () => ContextCloudOrgsOrganizationRoute,
  } as any)
const ContextCloudOrgsOrganizationProjectsProjectIndexRoute =
  ContextCloudOrgsOrganizationProjectsProjectIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ContextCloudOrgsOrganizationProjectsProjectRoute,
  } as any)
const ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRoute =
  ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteImport.update({
    id: '/ns/$namespace',
    path: '/ns/$namespace',
    getParentRoute: () => ContextCloudOrgsOrganizationProjectsProjectRoute,
  } as any)
const ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRoute =
  ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRouteImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRoute,
    } as any,
  )
const ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRoute =
  ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRouteImport.update(
    {
      id: '/connect',
      path: '/connect',
      getParentRoute: () =>
        ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/join': typeof JoinRoute
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRouteWithChildren
  '/sso-callback': typeof SsoCallbackRoute
  '/onboarding/choose-organization': typeof OnboardingChooseOrganizationRoute
  '/': typeof ContextIndexRoute
  '/orgs/$organization': typeof ContextCloudOrgsOrganizationRouteWithChildren
  '/ns/$namespace': typeof ContextEngineNsNamespaceRouteWithChildren
  '/ns/$namespace/connect': typeof ContextEngineNsNamespaceConnectRoute
  '/orgs/$organization/': typeof ContextCloudOrgsOrganizationIndexRoute
  '/ns/$namespace/': typeof ContextEngineNsNamespaceIndexRoute
  '/orgs/$organization/projects/$project': typeof ContextCloudOrgsOrganizationProjectsProjectRouteWithChildren
  '/orgs/$organization/projects': typeof ContextCloudOrgsOrganizationProjectsIndexRoute
  '/orgs/$organization/projects/$project/': typeof ContextCloudOrgsOrganizationProjectsProjectIndexRoute
  '/orgs/$organization/projects/$project/ns/$namespace': typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteWithChildren
  '/orgs/$organization/projects/$project/ns/$namespace/connect': typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRoute
  '/orgs/$organization/projects/$project/ns/$namespace/': typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRoute
}
export interface FileRoutesByTo {
  '/join': typeof JoinRoute
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRouteWithChildren
  '/sso-callback': typeof SsoCallbackRoute
  '/onboarding/choose-organization': typeof OnboardingChooseOrganizationRoute
  '/': typeof ContextIndexRoute
  '/ns/$namespace/connect': typeof ContextEngineNsNamespaceConnectRoute
  '/orgs/$organization': typeof ContextCloudOrgsOrganizationIndexRoute
  '/ns/$namespace': typeof ContextEngineNsNamespaceIndexRoute
  '/orgs/$organization/projects': typeof ContextCloudOrgsOrganizationProjectsIndexRoute
  '/orgs/$organization/projects/$project': typeof ContextCloudOrgsOrganizationProjectsProjectIndexRoute
  '/orgs/$organization/projects/$project/ns/$namespace/connect': typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRoute
  '/orgs/$organization/projects/$project/ns/$namespace': typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_context': typeof ContextRouteWithChildren
  '/join': typeof JoinRoute
  '/login': typeof LoginRoute
  '/onboarding': typeof OnboardingRouteWithChildren
  '/sso-callback': typeof SsoCallbackRoute
  '/_context/_cloud': typeof ContextCloudRouteWithChildren
  '/_context/_engine': typeof ContextEngineRouteWithChildren
  '/onboarding/choose-organization': typeof OnboardingChooseOrganizationRoute
  '/_context/': typeof ContextIndexRoute
  '/_context/_cloud/orgs/$organization': typeof ContextCloudOrgsOrganizationRouteWithChildren
  '/_context/_engine/ns/$namespace': typeof ContextEngineNsNamespaceRouteWithChildren
  '/_context/_engine/ns/$namespace/connect': typeof ContextEngineNsNamespaceConnectRoute
  '/_context/_cloud/orgs/$organization/': typeof ContextCloudOrgsOrganizationIndexRoute
  '/_context/_engine/ns/$namespace/': typeof ContextEngineNsNamespaceIndexRoute
  '/_context/_cloud/orgs/$organization/projects/$project': typeof ContextCloudOrgsOrganizationProjectsProjectRouteWithChildren
  '/_context/_cloud/orgs/$organization/projects/': typeof ContextCloudOrgsOrganizationProjectsIndexRoute
  '/_context/_cloud/orgs/$organization/projects/$project/': typeof ContextCloudOrgsOrganizationProjectsProjectIndexRoute
  '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace': typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteWithChildren
  '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace/connect': typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRoute
  '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace/': typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/join'
    | '/login'
    | '/onboarding'
    | '/sso-callback'
    | '/onboarding/choose-organization'
    | '/'
    | '/orgs/$organization'
    | '/ns/$namespace'
    | '/ns/$namespace/connect'
    | '/orgs/$organization/'
    | '/ns/$namespace/'
    | '/orgs/$organization/projects/$project'
    | '/orgs/$organization/projects'
    | '/orgs/$organization/projects/$project/'
    | '/orgs/$organization/projects/$project/ns/$namespace'
    | '/orgs/$organization/projects/$project/ns/$namespace/connect'
    | '/orgs/$organization/projects/$project/ns/$namespace/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/join'
    | '/login'
    | '/onboarding'
    | '/sso-callback'
    | '/onboarding/choose-organization'
    | '/'
    | '/ns/$namespace/connect'
    | '/orgs/$organization'
    | '/ns/$namespace'
    | '/orgs/$organization/projects'
    | '/orgs/$organization/projects/$project'
    | '/orgs/$organization/projects/$project/ns/$namespace/connect'
    | '/orgs/$organization/projects/$project/ns/$namespace'
  id:
    | '__root__'
    | '/_context'
    | '/join'
    | '/login'
    | '/onboarding'
    | '/sso-callback'
    | '/_context/_cloud'
    | '/_context/_engine'
    | '/onboarding/choose-organization'
    | '/_context/'
    | '/_context/_cloud/orgs/$organization'
    | '/_context/_engine/ns/$namespace'
    | '/_context/_engine/ns/$namespace/connect'
    | '/_context/_cloud/orgs/$organization/'
    | '/_context/_engine/ns/$namespace/'
    | '/_context/_cloud/orgs/$organization/projects/$project'
    | '/_context/_cloud/orgs/$organization/projects/'
    | '/_context/_cloud/orgs/$organization/projects/$project/'
    | '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace'
    | '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace/connect'
    | '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ContextRoute: typeof ContextRouteWithChildren
  JoinRoute: typeof JoinRoute
  LoginRoute: typeof LoginRoute
  OnboardingRoute: typeof OnboardingRouteWithChildren
  SsoCallbackRoute: typeof SsoCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sso-callback': {
      id: '/sso-callback'
      path: '/sso-callback'
      fullPath: '/sso-callback'
      preLoaderRoute: typeof SsoCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/join': {
      id: '/join'
      path: '/join'
      fullPath: '/join'
      preLoaderRoute: typeof JoinRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_context': {
      id: '/_context'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ContextRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_context/': {
      id: '/_context/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ContextIndexRouteImport
      parentRoute: typeof ContextRoute
    }
    '/onboarding/choose-organization': {
      id: '/onboarding/choose-organization'
      path: '/choose-organization'
      fullPath: '/onboarding/choose-organization'
      preLoaderRoute: typeof OnboardingChooseOrganizationRouteImport
      parentRoute: typeof OnboardingRoute
    }
    '/_context/_engine': {
      id: '/_context/_engine'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ContextEngineRouteImport
      parentRoute: typeof ContextRoute
    }
    '/_context/_cloud': {
      id: '/_context/_cloud'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ContextCloudRouteImport
      parentRoute: typeof ContextRoute
    }
    '/_context/_engine/ns/$namespace': {
      id: '/_context/_engine/ns/$namespace'
      path: '/ns/$namespace'
      fullPath: '/ns/$namespace'
      preLoaderRoute: typeof ContextEngineNsNamespaceRouteImport
      parentRoute: typeof ContextEngineRoute
    }
    '/_context/_cloud/orgs/$organization': {
      id: '/_context/_cloud/orgs/$organization'
      path: '/orgs/$organization'
      fullPath: '/orgs/$organization'
      preLoaderRoute: typeof ContextCloudOrgsOrganizationRouteImport
      parentRoute: typeof ContextCloudRoute
    }
    '/_context/_engine/ns/$namespace/': {
      id: '/_context/_engine/ns/$namespace/'
      path: '/'
      fullPath: '/ns/$namespace/'
      preLoaderRoute: typeof ContextEngineNsNamespaceIndexRouteImport
      parentRoute: typeof ContextEngineNsNamespaceRoute
    }
    '/_context/_cloud/orgs/$organization/': {
      id: '/_context/_cloud/orgs/$organization/'
      path: '/'
      fullPath: '/orgs/$organization/'
      preLoaderRoute: typeof ContextCloudOrgsOrganizationIndexRouteImport
      parentRoute: typeof ContextCloudOrgsOrganizationRoute
    }
    '/_context/_engine/ns/$namespace/connect': {
      id: '/_context/_engine/ns/$namespace/connect'
      path: '/connect'
      fullPath: '/ns/$namespace/connect'
      preLoaderRoute: typeof ContextEngineNsNamespaceConnectRouteImport
      parentRoute: typeof ContextEngineNsNamespaceRoute
    }
    '/_context/_cloud/orgs/$organization/projects/': {
      id: '/_context/_cloud/orgs/$organization/projects/'
      path: '/projects'
      fullPath: '/orgs/$organization/projects'
      preLoaderRoute: typeof ContextCloudOrgsOrganizationProjectsIndexRouteImport
      parentRoute: typeof ContextCloudOrgsOrganizationRoute
    }
    '/_context/_cloud/orgs/$organization/projects/$project': {
      id: '/_context/_cloud/orgs/$organization/projects/$project'
      path: '/projects/$project'
      fullPath: '/orgs/$organization/projects/$project'
      preLoaderRoute: typeof ContextCloudOrgsOrganizationProjectsProjectRouteImport
      parentRoute: typeof ContextCloudOrgsOrganizationRoute
    }
    '/_context/_cloud/orgs/$organization/projects/$project/': {
      id: '/_context/_cloud/orgs/$organization/projects/$project/'
      path: '/'
      fullPath: '/orgs/$organization/projects/$project/'
      preLoaderRoute: typeof ContextCloudOrgsOrganizationProjectsProjectIndexRouteImport
      parentRoute: typeof ContextCloudOrgsOrganizationProjectsProjectRoute
    }
    '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace': {
      id: '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace'
      path: '/ns/$namespace'
      fullPath: '/orgs/$organization/projects/$project/ns/$namespace'
      preLoaderRoute: typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteImport
      parentRoute: typeof ContextCloudOrgsOrganizationProjectsProjectRoute
    }
    '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace/': {
      id: '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace/'
      path: '/'
      fullPath: '/orgs/$organization/projects/$project/ns/$namespace/'
      preLoaderRoute: typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRouteImport
      parentRoute: typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRoute
    }
    '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace/connect': {
      id: '/_context/_cloud/orgs/$organization/projects/$project/ns/$namespace/connect'
      path: '/connect'
      fullPath: '/orgs/$organization/projects/$project/ns/$namespace/connect'
      preLoaderRoute: typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRouteImport
      parentRoute: typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRoute
    }
  }
}

interface ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteChildren {
  ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRoute: typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRoute
  ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRoute: typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRoute
}

const ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteChildren: ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteChildren =
  {
    ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRoute:
      ContextCloudOrgsOrganizationProjectsProjectNsNamespaceConnectRoute,
    ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRoute:
      ContextCloudOrgsOrganizationProjectsProjectNsNamespaceIndexRoute,
  }

const ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteWithChildren =
  ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRoute._addFileChildren(
    ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteChildren,
  )

interface ContextCloudOrgsOrganizationProjectsProjectRouteChildren {
  ContextCloudOrgsOrganizationProjectsProjectIndexRoute: typeof ContextCloudOrgsOrganizationProjectsProjectIndexRoute
  ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRoute: typeof ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteWithChildren
}

const ContextCloudOrgsOrganizationProjectsProjectRouteChildren: ContextCloudOrgsOrganizationProjectsProjectRouteChildren =
  {
    ContextCloudOrgsOrganizationProjectsProjectIndexRoute:
      ContextCloudOrgsOrganizationProjectsProjectIndexRoute,
    ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRoute:
      ContextCloudOrgsOrganizationProjectsProjectNsNamespaceRouteWithChildren,
  }

const ContextCloudOrgsOrganizationProjectsProjectRouteWithChildren =
  ContextCloudOrgsOrganizationProjectsProjectRoute._addFileChildren(
    ContextCloudOrgsOrganizationProjectsProjectRouteChildren,
  )

interface ContextCloudOrgsOrganizationRouteChildren {
  ContextCloudOrgsOrganizationIndexRoute: typeof ContextCloudOrgsOrganizationIndexRoute
  ContextCloudOrgsOrganizationProjectsProjectRoute: typeof ContextCloudOrgsOrganizationProjectsProjectRouteWithChildren
  ContextCloudOrgsOrganizationProjectsIndexRoute: typeof ContextCloudOrgsOrganizationProjectsIndexRoute
}

const ContextCloudOrgsOrganizationRouteChildren: ContextCloudOrgsOrganizationRouteChildren =
  {
    ContextCloudOrgsOrganizationIndexRoute:
      ContextCloudOrgsOrganizationIndexRoute,
    ContextCloudOrgsOrganizationProjectsProjectRoute:
      ContextCloudOrgsOrganizationProjectsProjectRouteWithChildren,
    ContextCloudOrgsOrganizationProjectsIndexRoute:
      ContextCloudOrgsOrganizationProjectsIndexRoute,
  }

const ContextCloudOrgsOrganizationRouteWithChildren =
  ContextCloudOrgsOrganizationRoute._addFileChildren(
    ContextCloudOrgsOrganizationRouteChildren,
  )

interface ContextCloudRouteChildren {
  ContextCloudOrgsOrganizationRoute: typeof ContextCloudOrgsOrganizationRouteWithChildren
}

const ContextCloudRouteChildren: ContextCloudRouteChildren = {
  ContextCloudOrgsOrganizationRoute:
    ContextCloudOrgsOrganizationRouteWithChildren,
}

const ContextCloudRouteWithChildren = ContextCloudRoute._addFileChildren(
  ContextCloudRouteChildren,
)

interface ContextEngineNsNamespaceRouteChildren {
  ContextEngineNsNamespaceConnectRoute: typeof ContextEngineNsNamespaceConnectRoute
  ContextEngineNsNamespaceIndexRoute: typeof ContextEngineNsNamespaceIndexRoute
}

const ContextEngineNsNamespaceRouteChildren: ContextEngineNsNamespaceRouteChildren =
  {
    ContextEngineNsNamespaceConnectRoute: ContextEngineNsNamespaceConnectRoute,
    ContextEngineNsNamespaceIndexRoute: ContextEngineNsNamespaceIndexRoute,
  }

const ContextEngineNsNamespaceRouteWithChildren =
  ContextEngineNsNamespaceRoute._addFileChildren(
    ContextEngineNsNamespaceRouteChildren,
  )

interface ContextEngineRouteChildren {
  ContextEngineNsNamespaceRoute: typeof ContextEngineNsNamespaceRouteWithChildren
}

const ContextEngineRouteChildren: ContextEngineRouteChildren = {
  ContextEngineNsNamespaceRoute: ContextEngineNsNamespaceRouteWithChildren,
}

const ContextEngineRouteWithChildren = ContextEngineRoute._addFileChildren(
  ContextEngineRouteChildren,
)

interface ContextRouteChildren {
  ContextCloudRoute: typeof ContextCloudRouteWithChildren
  ContextEngineRoute: typeof ContextEngineRouteWithChildren
  ContextIndexRoute: typeof ContextIndexRoute
}

const ContextRouteChildren: ContextRouteChildren = {
  ContextCloudRoute: ContextCloudRouteWithChildren,
  ContextEngineRoute: ContextEngineRouteWithChildren,
  ContextIndexRoute: ContextIndexRoute,
}

const ContextRouteWithChildren =
  ContextRoute._addFileChildren(ContextRouteChildren)

interface OnboardingRouteChildren {
  OnboardingChooseOrganizationRoute: typeof OnboardingChooseOrganizationRoute
}

const OnboardingRouteChildren: OnboardingRouteChildren = {
  OnboardingChooseOrganizationRoute: OnboardingChooseOrganizationRoute,
}

const OnboardingRouteWithChildren = OnboardingRoute._addFileChildren(
  OnboardingRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ContextRoute: ContextRouteWithChildren,
  JoinRoute: JoinRoute,
  LoginRoute: LoginRoute,
  OnboardingRoute: OnboardingRouteWithChildren,
  SsoCallbackRoute: SsoCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
