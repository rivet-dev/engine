/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Rivet from "../../api/index";
import * as core from "../../core";

export const RunnerConfigsUpsertRequestBodyValueServerless: core.serialization.ObjectSchema<
    serializers.RunnerConfigsUpsertRequestBodyValueServerless.Raw,
    Rivet.RunnerConfigsUpsertRequestBodyValueServerless
> = core.serialization.object({
    headers: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    maxRunners: core.serialization.property("max_runners", core.serialization.number()),
    minRunners: core.serialization.property("min_runners", core.serialization.number().optional()),
    requestLifespan: core.serialization.property("request_lifespan", core.serialization.number()),
    runnersMargin: core.serialization.property("runners_margin", core.serialization.number().optional()),
    slotsPerRunner: core.serialization.property("slots_per_runner", core.serialization.number()),
    url: core.serialization.string(),
});

export declare namespace RunnerConfigsUpsertRequestBodyValueServerless {
    export interface Raw {
        headers?: Record<string, string> | null;
        max_runners: number;
        min_runners?: number | null;
        request_lifespan: number;
        runners_margin?: number | null;
        slots_per_runner: number;
        url: string;
    }
}
