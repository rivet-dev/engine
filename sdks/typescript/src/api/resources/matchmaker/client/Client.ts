/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Lobbies } from "../resources/lobbies/client/Client";
import { Players } from "../resources/players/client/Client";
import { Regions } from "../resources/regions/client/Client";

export declare namespace Matchmaker {
    interface Options {
        environment?: core.Supplier<environments.RivetEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class Matchmaker {
    constructor(protected readonly _options: Matchmaker.Options = {}) {}

    protected _lobbies: Lobbies | undefined;

    public get lobbies(): Lobbies {
        return (this._lobbies ??= new Lobbies(this._options));
    }

    protected _players: Players | undefined;

    public get players(): Players {
        return (this._players ??= new Players(this._options));
    }

    protected _regions: Regions | undefined;

    public get regions(): Regions {
        return (this._regions ??= new Regions(this._options));
    }
}
