/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Run } from "../resources/run/client/Client";

export declare namespace Job {
    interface Options {
        environment?: core.Supplier<environments.RivetEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class Job {
    constructor(protected readonly _options: Job.Options = {}) {}

    protected _run: Run | undefined;

    public get run(): Run {
        return (this._run ??= new Run(this._options));
    }
}
