/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Rivet from "../../../../api";
import * as core from "../../../../core";

export const PutRequest: core.serialization.ObjectSchema<serializers.kv.PutRequest.Raw, Rivet.kv.PutRequest> =
    core.serialization.object({
        namespaceId: core.serialization.property("namespace_id", core.serialization.string().optional()),
        key: core.serialization.lazy(async () => (await import("../../..")).kv.Key),
        value: core.serialization.lazy(async () => (await import("../../..")).kv.Value),
    });

export declare namespace PutRequest {
    interface Raw {
        namespace_id?: string | null;
        key: serializers.kv.Key.Raw;
        value?: serializers.kv.Value.Raw;
    }
}
