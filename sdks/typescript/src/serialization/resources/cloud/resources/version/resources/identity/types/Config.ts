/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../..";
import * as Rivet from "../../../../../../../../api";
import * as core from "../../../../../../../../core";

export const Config: core.serialization.ObjectSchema<
    serializers.cloud.version.identity.Config.Raw,
    Rivet.cloud.version.identity.Config
> = core.serialization.object({
    displayNames: core.serialization.property(
        "display_names",
        core.serialization.list(core.serialization.string()).optional()
    ),
    avatars: core.serialization.list(core.serialization.string()).optional(),
    customDisplayNames: core.serialization.property(
        "custom_display_names",
        core.serialization
            .list(
                core.serialization.lazyObject(
                    async () => (await import("../../../../../../..")).cloud.version.identity.CustomDisplayName
                )
            )
            .optional()
    ),
    customAvatars: core.serialization.property(
        "custom_avatars",
        core.serialization
            .list(
                core.serialization.lazyObject(
                    async () => (await import("../../../../../../..")).cloud.version.identity.CustomAvatar
                )
            )
            .optional()
    ),
});

export declare namespace Config {
    interface Raw {
        display_names?: string[] | null;
        avatars?: string[] | null;
        custom_display_names?: serializers.cloud.version.identity.CustomDisplayName.Raw[] | null;
        custom_avatars?: serializers.cloud.version.identity.CustomAvatar.Raw[] | null;
    }
}
