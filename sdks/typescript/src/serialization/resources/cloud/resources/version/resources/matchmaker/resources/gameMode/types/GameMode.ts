/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../..";
import * as Rivet from "../../../../../../../../../../api";
import * as core from "../../../../../../../../../../core";

export const GameMode: core.serialization.ObjectSchema<
    serializers.cloud.version.matchmaker.GameMode.Raw,
    Rivet.cloud.version.matchmaker.GameMode
> = core.serialization.object({
    regions: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.lazyObject(
                async () => (await import("../../../../../../../../..")).cloud.version.matchmaker.GameModeRegion
            )
        )
        .optional(),
    maxPlayers: core.serialization.property("max_players", core.serialization.number().optional()),
    maxPlayersDirect: core.serialization.property("max_players_direct", core.serialization.number().optional()),
    maxPlayersParty: core.serialization.property("max_players_party", core.serialization.number().optional()),
    docker: core.serialization
        .lazyObject(
            async () => (await import("../../../../../../../../..")).cloud.version.matchmaker.GameModeRuntimeDocker
        )
        .optional(),
    listable: core.serialization.boolean().optional(),
    taggable: core.serialization.boolean().optional(),
    allowDynamicMaxPlayers: core.serialization.property(
        "allow_dynamic_max_players",
        core.serialization.boolean().optional()
    ),
    actions: core.serialization
        .lazyObject(async () => (await import("../../../../../../../../..")).cloud.version.matchmaker.GameModeActions)
        .optional(),
    tier: core.serialization.string().optional(),
    idleLobbies: core.serialization.property(
        "idle_lobbies",
        core.serialization
            .lazyObject(
                async () =>
                    (await import("../../../../../../../../..")).cloud.version.matchmaker.GameModeIdleLobbiesConfig
            )
            .optional()
    ),
});

export declare namespace GameMode {
    interface Raw {
        regions?: Record<string, serializers.cloud.version.matchmaker.GameModeRegion.Raw> | null;
        max_players?: number | null;
        max_players_direct?: number | null;
        max_players_party?: number | null;
        docker?: serializers.cloud.version.matchmaker.GameModeRuntimeDocker.Raw | null;
        listable?: boolean | null;
        taggable?: boolean | null;
        allow_dynamic_max_players?: boolean | null;
        actions?: serializers.cloud.version.matchmaker.GameModeActions.Raw | null;
        tier?: string | null;
        idle_lobbies?: serializers.cloud.version.matchmaker.GameModeIdleLobbiesConfig.Raw | null;
    }
}
