/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../..";
import * as Rivet from "../../../../../../../../api";
import * as core from "../../../../../../../../core";

export const Route: core.serialization.ObjectSchema<
    serializers.cloud.version.cdn.Route.Raw,
    Rivet.cloud.version.cdn.Route
> = core.serialization.object({
    glob: core.serialization.string(),
    priority: core.serialization.number(),
    middlewares: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../../../..")).cloud.version.cdn.Middleware)
    ),
});

export declare namespace Route {
    interface Raw {
        glob: string;
        priority: number;
        middlewares: serializers.cloud.version.cdn.Middleware.Raw[];
    }
}
