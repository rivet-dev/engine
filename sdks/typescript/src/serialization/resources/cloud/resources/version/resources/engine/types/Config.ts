/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../..";
import * as Rivet from "../../../../../../../../api";
import * as core from "../../../../../../../../core";

export const Config: core.serialization.ObjectSchema<
    serializers.cloud.version.engine.Config.Raw,
    Rivet.cloud.version.engine.Config
> = core.serialization.object({
    unity: core.serialization
        .lazyObject(async () => (await import("../../../../../../..")).cloud.version.engine.UnityConfig)
        .optional(),
    unreal: core.serialization
        .lazyObject(async () => (await import("../../../../../../..")).cloud.version.engine.UnrealConfig)
        .optional(),
    godot: core.serialization
        .lazyObject(async () => (await import("../../../../../../..")).cloud.version.engine.GodotConfig)
        .optional(),
    html5: core.serialization
        .lazyObject(async () => (await import("../../../../../../..")).cloud.version.engine.Html5Config)
        .optional(),
    custom: core.serialization
        .lazyObject(async () => (await import("../../../../../../..")).cloud.version.engine.CustomConfig)
        .optional(),
});

export declare namespace Config {
    interface Raw {
        unity?: serializers.cloud.version.engine.UnityConfig.Raw | null;
        unreal?: serializers.cloud.version.engine.UnrealConfig.Raw | null;
        godot?: serializers.cloud.version.engine.GodotConfig.Raw | null;
        html5?: serializers.cloud.version.engine.Html5Config.Raw | null;
        custom?: serializers.cloud.version.engine.CustomConfig.Raw | null;
    }
}
