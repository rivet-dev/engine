/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../..";
import * as Rivet from "../../../../../../../../api";
import * as core from "../../../../../../../../core";

export const CreateGameNamespaceTokenDevelopmentRequest: core.serialization.ObjectSchema<
    serializers.cloud.games.namespaces.CreateGameNamespaceTokenDevelopmentRequest.Raw,
    Rivet.cloud.games.namespaces.CreateGameNamespaceTokenDevelopmentRequest
> = core.serialization.object({
    hostname: core.serialization.string(),
    ports: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.lazyObject(
                async () => (await import("../../../../../../..")).cloud.MatchmakerDevelopmentPort
            )
        )
        .optional(),
    lobbyPorts: core.serialization.property(
        "lobby_ports",
        core.serialization
            .list(
                core.serialization.lazyObject(
                    async () =>
                        (await import("../../../../../../..")).cloud.version.matchmaker.LobbyGroupRuntimeDockerPort
                )
            )
            .optional()
    ),
});

export declare namespace CreateGameNamespaceTokenDevelopmentRequest {
    interface Raw {
        hostname: string;
        ports?: Record<string, serializers.cloud.MatchmakerDevelopmentPort.Raw> | null;
        lobby_ports?: serializers.cloud.version.matchmaker.LobbyGroupRuntimeDockerPort.Raw[] | null;
    }
}
