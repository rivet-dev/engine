/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const GameFull: core.serialization.ObjectSchema<serializers.cloud.GameFull.Raw, Rivet.cloud.GameFull> =
    core.serialization.object({
        gameId: core.serialization.property("game_id", core.serialization.string()),
        createTs: core.serialization.property("create_ts", core.serialization.date()),
        nameId: core.serialization.property("name_id", core.serialization.string()),
        displayName: core.serialization.property("display_name", core.serialization.string()),
        developerGroupId: core.serialization.property("developer_group_id", core.serialization.string()),
        totalPlayerCount: core.serialization.property("total_player_count", core.serialization.number()),
        logoUrl: core.serialization.property("logo_url", core.serialization.string().optional()),
        bannerUrl: core.serialization.property("banner_url", core.serialization.string().optional()),
        namespaces: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.NamespaceSummary)
        ),
        versions: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.version.Summary)
        ),
        availableRegions: core.serialization.property(
            "available_regions",
            core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.RegionSummary)
            )
        ),
    });

export declare namespace GameFull {
    interface Raw {
        game_id: string;
        create_ts: string;
        name_id: string;
        display_name: string;
        developer_group_id: string;
        total_player_count: number;
        logo_url?: string | null;
        banner_url?: string | null;
        namespaces: serializers.cloud.NamespaceSummary.Raw[];
        versions: serializers.cloud.version.Summary.Raw[];
        available_regions: serializers.cloud.RegionSummary.Raw[];
    }
}
