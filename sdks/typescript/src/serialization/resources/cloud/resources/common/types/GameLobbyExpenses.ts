/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const GameLobbyExpenses: core.serialization.ObjectSchema<
    serializers.cloud.GameLobbyExpenses.Raw,
    Rivet.cloud.GameLobbyExpenses
> = core.serialization.object({
    game: core.serialization.lazyObject(async () => (await import("../../../../..")).game.Handle),
    namespaces: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.NamespaceSummary)
    ),
    expenses: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.RegionTierExpenses)
    ),
});

export declare namespace GameLobbyExpenses {
    interface Raw {
        game: serializers.game.Handle.Raw;
        namespaces: serializers.cloud.NamespaceSummary.Raw[];
        expenses: serializers.cloud.RegionTierExpenses.Raw[];
    }
}
