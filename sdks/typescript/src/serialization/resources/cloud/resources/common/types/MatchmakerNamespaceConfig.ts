/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const MatchmakerNamespaceConfig: core.serialization.ObjectSchema<
    serializers.cloud.MatchmakerNamespaceConfig.Raw,
    Rivet.cloud.MatchmakerNamespaceConfig
> = core.serialization.object({
    lobbyCountMax: core.serialization.property("lobby_count_max", core.serialization.number()),
    maxPlayersPerClient: core.serialization.property("max_players_per_client", core.serialization.number()),
    maxPlayersPerClientVpn: core.serialization.property("max_players_per_client_vpn", core.serialization.number()),
    maxPlayersPerClientProxy: core.serialization.property("max_players_per_client_proxy", core.serialization.number()),
    maxPlayersPerClientTor: core.serialization.property("max_players_per_client_tor", core.serialization.number()),
    maxPlayersPerClientHosting: core.serialization.property(
        "max_players_per_client_hosting",
        core.serialization.number()
    ),
});

export declare namespace MatchmakerNamespaceConfig {
    interface Raw {
        lobby_count_max: number;
        max_players_per_client: number;
        max_players_per_client_vpn: number;
        max_players_per_client_proxy: number;
        max_players_per_client_tor: number;
        max_players_per_client_hosting: number;
    }
}
