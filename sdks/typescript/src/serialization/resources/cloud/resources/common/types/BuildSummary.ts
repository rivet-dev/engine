/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const BuildSummary: core.serialization.ObjectSchema<
    serializers.cloud.BuildSummary.Raw,
    Rivet.cloud.BuildSummary
> = core.serialization.object({
    buildId: core.serialization.property("build_id", core.serialization.string()),
    uploadId: core.serialization.property("upload_id", core.serialization.string()),
    displayName: core.serialization.property("display_name", core.serialization.string()),
    createTs: core.serialization.property("create_ts", core.serialization.date()),
    contentLength: core.serialization.property("content_length", core.serialization.number()),
    complete: core.serialization.boolean(),
});

export declare namespace BuildSummary {
    interface Raw {
        build_id: string;
        upload_id: string;
        display_name: string;
        create_ts: string;
        content_length: number;
        complete: boolean;
    }
}
