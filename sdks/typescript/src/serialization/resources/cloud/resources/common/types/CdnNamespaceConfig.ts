/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const CdnNamespaceConfig: core.serialization.ObjectSchema<
    serializers.cloud.CdnNamespaceConfig.Raw,
    Rivet.cloud.CdnNamespaceConfig
> = core.serialization.object({
    enableDomainPublicAuth: core.serialization.property("enable_domain_public_auth", core.serialization.boolean()),
    domains: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.CdnNamespaceDomain)
    ),
    authType: core.serialization.property(
        "auth_type",
        core.serialization.lazy(async () => (await import("../../../../..")).cloud.CdnAuthType)
    ),
    authUserList: core.serialization.property(
        "auth_user_list",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.CdnNamespaceAuthUser)
        )
    ),
});

export declare namespace CdnNamespaceConfig {
    interface Raw {
        enable_domain_public_auth: boolean;
        domains: serializers.cloud.CdnNamespaceDomain.Raw[];
        auth_type: serializers.cloud.CdnAuthType.Raw;
        auth_user_list: serializers.cloud.CdnNamespaceAuthUser.Raw[];
    }
}
