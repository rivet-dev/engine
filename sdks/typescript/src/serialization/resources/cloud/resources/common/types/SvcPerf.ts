/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const SvcPerf: core.serialization.ObjectSchema<serializers.cloud.SvcPerf.Raw, Rivet.cloud.SvcPerf> =
    core.serialization.object({
        svcName: core.serialization.property("svc_name", core.serialization.string()),
        ts: core.serialization.date(),
        duration: core.serialization.number(),
        reqId: core.serialization.property("req_id", core.serialization.string().optional()),
        spans: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.LogsPerfSpan)
        ),
        marks: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.LogsPerfMark)
        ),
    });

export declare namespace SvcPerf {
    interface Raw {
        svc_name: string;
        ts: string;
        duration: number;
        req_id?: string | null;
        spans: serializers.cloud.LogsPerfSpan.Raw[];
        marks: serializers.cloud.LogsPerfMark.Raw[];
    }
}
