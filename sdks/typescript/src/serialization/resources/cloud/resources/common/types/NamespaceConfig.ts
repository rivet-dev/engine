/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const NamespaceConfig: core.serialization.ObjectSchema<
    serializers.cloud.NamespaceConfig.Raw,
    Rivet.cloud.NamespaceConfig
> = core.serialization.object({
    cdn: core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.CdnNamespaceConfig),
    matchmaker: core.serialization.lazyObject(
        async () => (await import("../../../../..")).cloud.MatchmakerNamespaceConfig
    ),
    kv: core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.KvNamespaceConfig),
    identity: core.serialization.lazyObject(async () => (await import("../../../../..")).cloud.IdentityNamespaceConfig),
});

export declare namespace NamespaceConfig {
    interface Raw {
        cdn: serializers.cloud.CdnNamespaceConfig.Raw;
        matchmaker: serializers.cloud.MatchmakerNamespaceConfig.Raw;
        kv: serializers.cloud.KvNamespaceConfig.Raw;
        identity: serializers.cloud.IdentityNamespaceConfig.Raw;
    }
}
