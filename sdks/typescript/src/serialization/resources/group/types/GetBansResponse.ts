/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Rivet from "../../../../api";
import * as core from "../../../../core";

export const GetBansResponse: core.serialization.ObjectSchema<
    serializers.group.GetBansResponse.Raw,
    Rivet.group.GetBansResponse
> = core.serialization.object({
    bannedIdentities: core.serialization.property(
        "banned_identities",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).group.BannedIdentity)
        )
    ),
    anchor: core.serialization.string().optional(),
    watch: core.serialization.lazyObject(async () => (await import("../../..")).WatchResponse),
});

export declare namespace GetBansResponse {
    interface Raw {
        banned_identities: serializers.group.BannedIdentity.Raw[];
        anchor?: string | null;
        watch: serializers.WatchResponse.Raw;
    }
}
