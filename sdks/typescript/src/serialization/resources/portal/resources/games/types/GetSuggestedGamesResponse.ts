/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const GetSuggestedGamesResponse: core.serialization.ObjectSchema<
    serializers.portal.GetSuggestedGamesResponse.Raw,
    Rivet.portal.GetSuggestedGamesResponse
> = core.serialization.object({
    games: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../../..")).game.Summary)
    ),
    watch: core.serialization.lazyObject(async () => (await import("../../../../..")).WatchResponse),
});

export declare namespace GetSuggestedGamesResponse {
    interface Raw {
        games: serializers.game.Summary.Raw[];
        watch: serializers.WatchResponse.Raw;
    }
}
