/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const Summary: core.serialization.ObjectSchema<serializers.game.Summary.Raw, Rivet.game.Summary> =
    core.serialization.object({
        gameId: core.serialization.property("game_id", core.serialization.string()),
        nameId: core.serialization.property(
            "name_id",
            core.serialization.lazy(async () => (await import("../../../../..")).Identifier)
        ),
        displayName: core.serialization.property(
            "display_name",
            core.serialization.lazy(async () => (await import("../../../../..")).DisplayName)
        ),
        logoUrl: core.serialization.property("logo_url", core.serialization.string().optional()),
        bannerUrl: core.serialization.property("banner_url", core.serialization.string().optional()),
        url: core.serialization.string(),
        developer: core.serialization.lazyObject(async () => (await import("../../../../..")).group.Handle),
        totalPlayerCount: core.serialization.property("total_player_count", core.serialization.number()),
    });

export declare namespace Summary {
    interface Raw {
        game_id: string;
        name_id: serializers.Identifier.Raw;
        display_name: serializers.DisplayName.Raw;
        logo_url?: string | null;
        banner_url?: string | null;
        url: string;
        developer: serializers.group.Handle.Raw;
        total_player_count: number;
    }
}
