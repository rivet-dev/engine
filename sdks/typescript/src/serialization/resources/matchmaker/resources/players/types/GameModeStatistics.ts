/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const GameModeStatistics: core.serialization.ObjectSchema<
    serializers.matchmaker.GameModeStatistics.Raw,
    Rivet.matchmaker.GameModeStatistics
> = core.serialization.object({
    playerCount: core.serialization.property("player_count", core.serialization.number()),
    regions: core.serialization.record(
        core.serialization.lazy(async () => (await import("../../../../..")).Identifier),
        core.serialization.lazyObject(async () => (await import("../../../../..")).matchmaker.RegionStatistics)
    ),
});

export declare namespace GameModeStatistics {
    interface Raw {
        player_count: number;
        regions: Record<serializers.Identifier.Raw, serializers.matchmaker.RegionStatistics.Raw>;
    }
}
