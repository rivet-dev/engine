/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const Presence: core.serialization.ObjectSchema<serializers.identity.Presence.Raw, Rivet.identity.Presence> =
    core.serialization.object({
        updateTs: core.serialization.property("update_ts", core.serialization.date()),
        status: core.serialization.lazy(async () => (await import("../../../../..")).identity.Status),
        gameActivity: core.serialization.property(
            "game_activity",
            core.serialization.lazyObject(async () => (await import("../../../../..")).identity.GameActivity).optional()
        ),
    });

export declare namespace Presence {
    interface Raw {
        update_ts: string;
        status: serializers.identity.Status.Raw;
        game_activity?: serializers.identity.GameActivity.Raw | null;
    }
}
