/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Rivet from "../../..";
import { Games } from "../resources/games/client/Client";
import { Auth } from "../resources/auth/client/Client";
import { Devices } from "../resources/devices/client/Client";
import { Groups } from "../resources/groups/client/Client";
import { Logs } from "../resources/logs/client/Client";
import { Tiers } from "../resources/tiers/client/Client";
import { Uploads } from "../resources/uploads/client/Client";
export declare namespace Cloud {
    interface Options {
        environment?: core.Supplier<environments.RivetEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Cloud {
    protected readonly _options: Cloud.Options;
    constructor(_options?: Cloud.Options);
    /**
     * Returns the basic information required to use the cloud APIs.
     * @throws {@link Rivet.InternalError}
     * @throws {@link Rivet.RateLimitError}
     * @throws {@link Rivet.ForbiddenError}
     * @throws {@link Rivet.UnauthorizedError}
     * @throws {@link Rivet.NotFoundError}
     * @throws {@link Rivet.BadRequestError}
     */
    bootstrap(requestOptions?: Cloud.RequestOptions): Promise<Rivet.cloud.BootstrapResponse>;
    protected _games: Games | undefined;
    get games(): Games;
    protected _auth: Auth | undefined;
    get auth(): Auth;
    protected _devices: Devices | undefined;
    get devices(): Devices;
    protected _groups: Groups | undefined;
    get groups(): Groups;
    protected _logs: Logs | undefined;
    get logs(): Logs;
    protected _tiers: Tiers | undefined;
    get tiers(): Tiers;
    protected _uploads: Uploads | undefined;
    get uploads(): Uploads;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
