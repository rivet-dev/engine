components:
  schemas:
    AccountNumber:
      type: integer
    AdminClusterGetServerIpsResponse:
      properties:
        ips:
          items:
            type: string
          type: array
      required:
      - ips
      type: object
    AdminLoginRequest:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    AdminLoginResponse:
      properties:
        url:
          type: string
      required:
      - url
      type: object
    AdminPoolType:
      enum:
      - job
      - gg
      - ats
      type: string
    AuthCompleteStatus:
      description: Represents the state of an external account linking process.
      enum:
      - switch_identity
      - linked_account_added
      - already_complete
      - expired
      - too_many_attempts
      - incorrect
      type: string
    AuthIdentityCompleteAccessTokenVerificationRequest:
      properties:
        access_token:
          $ref: '#/components/schemas/Jwt'
      required:
      - access_token
      type: object
    AuthIdentityCompleteEmailVerificationRequest:
      properties:
        code:
          description: The code sent to the requestee's email.
          type: string
        verification_id:
          format: uuid
          type: string
      required:
      - verification_id
      - code
      type: object
    AuthIdentityCompleteEmailVerificationResponse:
      properties:
        status:
          $ref: '#/components/schemas/AuthCompleteStatus'
      required:
      - status
      type: object
    AuthIdentityStartEmailVerificationRequest:
      properties:
        captcha:
          $ref: '#/components/schemas/CaptchaConfig'
        email:
          type: string
        game_id:
          format: uuid
          type: string
      required:
      - email
      type: object
    AuthIdentityStartEmailVerificationResponse:
      properties:
        verification_id:
          format: uuid
          type: string
      required:
      - verification_id
      type: object
    AuthRefreshIdentityTokenRequest:
      properties:
        logout:
          description: When `true`, the current identity for the provided cookie will
            be logged out and a new identity will be returned.
          type: boolean
      type: object
    AuthRefreshIdentityTokenResponse:
      properties:
        exp:
          description: Token expiration time (in milliseconds).
          type: string
        identity_id:
          format: uuid
          type: string
        token:
          description: 'A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs of

            JSON.'
          type: string
      required:
      - token
      - exp
      - identity_id
      type: object
    Bio:
      description: Follows regex ^(?:[^\n\r]+\n?|\n){1,5}$
      type: string
    CaptchaConfig:
      description: Methods to verify a captcha
      properties:
        hcaptcha:
          $ref: '#/components/schemas/CaptchaConfigHcaptcha'
        turnstile:
          $ref: '#/components/schemas/CaptchaConfigTurnstile'
      type: object
    CaptchaConfigHcaptcha:
      description: Captcha configuration.
      properties:
        client_response:
          type: string
      required:
      - client_response
      type: object
    CaptchaConfigTurnstile:
      description: Captcha configuration.
      properties:
        client_response:
          type: string
      required:
      - client_response
      type: object
    CloudAuthAgent:
      description: The current authenticated agent.
      properties:
        game_cloud:
          $ref: '#/components/schemas/CloudAuthAgentGameCloud'
        identity:
          $ref: '#/components/schemas/CloudAuthAgentIdentity'
      type: object
    CloudAuthAgentGameCloud:
      description: The current authenticated game cloud.
      properties:
        game_id:
          format: uuid
          type: string
      required:
      - game_id
      type: object
    CloudAuthAgentIdentity:
      description: The current authenticated identity.
      properties:
        identity_id:
          format: uuid
          type: string
      required:
      - identity_id
      type: object
    CloudBootstrapAccess:
      enum:
      - public
      - private
      type: string
    CloudBootstrapCaptcha:
      properties:
        turnstile:
          $ref: '#/components/schemas/CloudBootstrapCaptchaTurnstile'
      type: object
    CloudBootstrapCaptchaTurnstile:
      properties:
        site_key:
          type: string
      required:
      - site_key
      type: object
    CloudBootstrapCluster:
      description: The type of cluster that the backend is currently running.
      enum:
      - enterprise
      - oss
      type: string
    CloudBootstrapDomains:
      description: Domains that host parts of Rivet
      properties:
        cdn:
          type: string
        job:
          type: string
        main:
          type: string
      required:
      - main
      - cdn
      - job
      type: object
    CloudBootstrapLoginMethods:
      properties:
        access_token:
          type: boolean
        email:
          type: boolean
      required:
      - access_token
      - email
      type: object
    CloudBootstrapOrigins:
      description: Origins used to build URLs from
      properties:
        hub:
          type: string
      required:
      - hub
      type: object
    CloudBootstrapResponse:
      properties:
        access:
          $ref: '#/components/schemas/CloudBootstrapAccess'
        captcha:
          $ref: '#/components/schemas/CloudBootstrapCaptcha'
        cluster:
          $ref: '#/components/schemas/CloudBootstrapCluster'
        domains:
          $ref: '#/components/schemas/CloudBootstrapDomains'
        login_methods:
          $ref: '#/components/schemas/CloudBootstrapLoginMethods'
        origins:
          $ref: '#/components/schemas/CloudBootstrapOrigins'
      required:
      - cluster
      - access
      - origins
      - captcha
      - login_methods
      type: object
    CloudBuildSummary:
      description: A build summary.
      properties:
        build_id:
          format: uuid
          type: string
        complete:
          description: Whether or not this build has completely been uploaded.
          type: boolean
        content_length:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        upload_id:
          format: uuid
          type: string
      required:
      - build_id
      - upload_id
      - display_name
      - create_ts
      - content_length
      - complete
      type: object
    CloudCdnAuthType:
      description: A value denoting what type of authentication to use for a game
        namespace's CDN.
      enum:
      - none
      - basic
      type: string
    CloudCdnNamespaceAuthUser:
      description: An authenticated CDN user for a given namespace.
      properties:
        user:
          description: A user name.
          type: string
      required:
      - user
      type: object
    CloudCdnNamespaceConfig:
      description: CDN configuration for a given namespace.
      properties:
        auth_type:
          $ref: '#/components/schemas/CloudCdnAuthType'
        auth_user_list:
          description: A list of CDN authenticated users for a given namespace.
          items:
            $ref: '#/components/schemas/CloudCdnNamespaceAuthUser'
          type: array
        domains:
          description: A list of CDN domains for a given namespace.
          items:
            $ref: '#/components/schemas/CloudCdnNamespaceDomain'
          type: array
        enable_domain_public_auth:
          description: Whether or not to allow users to connect to the given namespace
            via domain name.
          type: boolean
      required:
      - enable_domain_public_auth
      - domains
      - auth_type
      - auth_user_list
      type: object
    CloudCdnNamespaceDomain:
      description: A CDN domain for a given namespace.
      properties:
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        domain:
          description: A valid domain name (no protocol).
          type: string
        verification_errors:
          items:
            type: string
          type: array
        verification_method:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationMethod'
        verification_status:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationStatus'
      required:
      - domain
      - create_ts
      - verification_status
      - verification_method
      - verification_errors
      type: object
    CloudCdnNamespaceDomainVerificationMethod:
      description: A union representing the verification method used for this CDN
        domain.
      properties:
        http:
          $ref: '#/components/schemas/CloudCdnNamespaceDomainVerificationMethodHttp'
        invalid:
          $ref: '#/components/schemas/EmptyObject'
      type: object
    CloudCdnNamespaceDomainVerificationMethodHttp:
      properties:
        cname_record:
          type: string
      required:
      - cname_record
      type: object
    CloudCdnNamespaceDomainVerificationStatus:
      description: A value denoting the status of a CDN domain's verification status.
      enum:
      - active
      - pending
      - failed
      type: string
    CloudCdnSiteSummary:
      description: A CDN site summary.
      properties:
        complete:
          description: Whether or not this site has completely been uploaded.
          type: boolean
        content_length:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        site_id:
          format: uuid
          type: string
        upload_id:
          format: uuid
          type: string
      required:
      - site_id
      - upload_id
      - display_name
      - create_ts
      - content_length
      - complete
      type: object
    CloudCustomAvatarSummary:
      description: A custom avatar summary.
      properties:
        complete:
          description: Whether or not this custom avatar has completely been uploaded.
          type: boolean
        content_length:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        upload_id:
          format: uuid
          type: string
        url:
          description: The URL of this custom avatar image. Only present if upload
            is complete.
          type: string
      required:
      - upload_id
      - display_name
      - create_ts
      - content_length
      - complete
      type: object
    CloudDevicesCompleteDeviceLinkRequest:
      properties:
        device_link_token:
          $ref: '#/components/schemas/Jwt'
        game_id:
          format: uuid
          type: string
      required:
      - device_link_token
      - game_id
      type: object
    CloudDevicesGetDeviceLinkResponse:
      properties:
        cloud_token:
          type: string
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - watch
      type: object
    CloudDevicesPrepareDeviceLinkResponse:
      properties:
        device_link_id:
          format: uuid
          type: string
        device_link_token:
          type: string
        device_link_url:
          type: string
      required:
      - device_link_id
      - device_link_token
      - device_link_url
      type: object
    CloudGameFull:
      description: A full game.
      properties:
        available_regions:
          description: A list of region summaries.
          items:
            $ref: '#/components/schemas/CloudRegionSummary'
          type: array
        banner_url:
          description: The URL of this game's banner image.
          type: string
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        developer_group_id:
          format: uuid
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        game_id:
          format: uuid
          type: string
        logo_url:
          description: The URL of this game's logo image.
          type: string
        name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        namespaces:
          description: A list of namespace summaries.
          items:
            $ref: '#/components/schemas/CloudNamespaceSummary'
          type: array
        total_player_count:
          description: Unsigned 32 bit integer.
          type: integer
        versions:
          description: A list of version summaries.
          items:
            $ref: '#/components/schemas/CloudVersionSummary'
          type: array
      required:
      - game_id
      - create_ts
      - name_id
      - display_name
      - developer_group_id
      - total_player_count
      - namespaces
      - versions
      - available_regions
      type: object
    CloudGameLobbyExpenses:
      description: Game lobby expenses.
      properties:
        expenses:
          description: A list of multiple region tier expenses.
          items:
            $ref: '#/components/schemas/CloudRegionTierExpenses'
          type: array
        game:
          $ref: '#/components/schemas/GameHandle'
        namespaces:
          description: A list of namespace summaries.
          items:
            $ref: '#/components/schemas/CloudNamespaceSummary'
          type: array
      required:
      - game
      - namespaces
      - expenses
      type: object
    CloudGamesBuildCompression:
      enum:
      - none
      - lz4
      type: string
    CloudGamesBuildKind:
      enum:
      - docker_image
      - oci_bundle
      type: string
    CloudGamesCreateCloudTokenResponse:
      properties:
        token:
          description: 'A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs of

            JSON.'
          type: string
      required:
      - token
      type: object
    CloudGamesCreateGameBuildRequest:
      properties:
        compression:
          $ref: '#/components/schemas/CloudGamesBuildCompression'
        display_name:
          description: Represent a resource's readable display name.
          type: string
        image_file:
          $ref: '#/components/schemas/UploadPrepareFile'
        image_tag:
          description: A tag given to the game build.
          type: string
        kind:
          $ref: '#/components/schemas/CloudGamesBuildKind'
        multipart_upload:
          type: boolean
      required:
      - display_name
      - image_tag
      - image_file
      type: object
    CloudGamesCreateGameBuildResponse:
      properties:
        build_id:
          format: uuid
          type: string
        image_presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
        image_presigned_requests:
          items:
            $ref: '#/components/schemas/UploadPresignedRequest'
          type: array
        upload_id:
          format: uuid
          type: string
      required:
      - build_id
      - upload_id
      type: object
    CloudGamesCreateGameCdnSiteRequest:
      properties:
        display_name:
          description: Represent a resource's readable display name.
          type: string
        files:
          description: A list of files preparing to upload.
          items:
            $ref: '#/components/schemas/UploadPrepareFile'
          type: array
      required:
      - display_name
      - files
      type: object
    CloudGamesCreateGameCdnSiteResponse:
      properties:
        presigned_requests:
          items:
            $ref: '#/components/schemas/UploadPresignedRequest'
          type: array
        site_id:
          format: uuid
          type: string
        upload_id:
          format: uuid
          type: string
      required:
      - site_id
      - upload_id
      - presigned_requests
      type: object
    CloudGamesCreateGameRequest:
      properties:
        developer_group_id:
          format: uuid
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        name_id:
          description: '**Deprecated**

            A human readable short identifier used to references resources. Different
            than a `rivet.common#Uuid` because this is intended to be human readable.
            Different than `rivet.common#DisplayName` because this should not include
            special characters and be short.'
          type: string
      required:
      - display_name
      - developer_group_id
      type: object
    CloudGamesCreateGameResponse:
      properties:
        game_id:
          format: uuid
          type: string
      required:
      - game_id
      type: object
    CloudGamesCreateGameVersionRequest:
      properties:
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
        display_name:
          description: Represent a resource's readable display name.
          type: string
      required:
      - display_name
      - config
      type: object
    CloudGamesCreateGameVersionResponse:
      properties:
        version_id:
          format: uuid
          type: string
      required:
      - version_id
      type: object
    CloudGamesDeleteMatchmakerLobbyResponse:
      properties:
        did_remove:
          description: Whether or not the lobby was successfully stopped.
          type: boolean
      required:
      - did_remove
      type: object
    CloudGamesExportLobbyLogsRequest:
      properties:
        stream:
          $ref: '#/components/schemas/CloudGamesLogStream'
      required:
      - stream
      type: object
    CloudGamesExportLobbyLogsResponse:
      properties:
        url:
          description: The URL to a CSV file for the given lobby history.
          type: string
      required:
      - url
      type: object
    CloudGamesExportMatchmakerLobbyHistoryRequest:
      properties:
        query_end:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        query_start:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
      required:
      - query_start
      - query_end
      type: object
    CloudGamesExportMatchmakerLobbyHistoryResponse:
      properties:
        url:
          description: The URL to a CSV file for the given lobby history.
          type: string
      required:
      - url
      type: object
    CloudGamesGameBannerUploadPrepareRequest:
      properties:
        content_length:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        mime:
          description: The MIME type of the game banner.
          type: string
        path:
          description: The path/filename of the game banner.
          type: string
      required:
      - path
      - content_length
      type: object
    CloudGamesGameBannerUploadPrepareResponse:
      properties:
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
        upload_id:
          format: uuid
          type: string
      required:
      - upload_id
      - presigned_request
      type: object
    CloudGamesGameLogoUploadPrepareRequest:
      properties:
        content_length:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        mime:
          description: The MIME type of the game logo.
          type: string
        path:
          description: The path/filename of the game logo.
          type: string
      required:
      - path
      - content_length
      type: object
    CloudGamesGameLogoUploadPrepareResponse:
      properties:
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
        upload_id:
          format: uuid
          type: string
      required:
      - upload_id
      - presigned_request
      type: object
    CloudGamesGetGameByIdResponse:
      properties:
        game:
          $ref: '#/components/schemas/CloudGameFull'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - game
      - watch
      type: object
    CloudGamesGetGameVersionByIdResponse:
      properties:
        version:
          $ref: '#/components/schemas/CloudVersionFull'
      required:
      - version
      type: object
    CloudGamesGetGamesResponse:
      properties:
        games:
          description: A list of game summaries.
          items:
            $ref: '#/components/schemas/GameSummary'
          type: array
        groups:
          description: A list of group summaries.
          items:
            $ref: '#/components/schemas/GroupSummary'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - games
      - groups
      - watch
      type: object
    CloudGamesGetLobbyLogsResponse:
      properties:
        lines:
          description: Sorted old to new.
          items:
            type: string
          type: array
        timestamps:
          description: Sorted old to new.
          items:
            type: string
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - lines
      - timestamps
      - watch
      type: object
    CloudGamesListGameBuildsResponse:
      properties:
        builds:
          description: A list of build summaries.
          items:
            $ref: '#/components/schemas/CloudBuildSummary'
          type: array
      required:
      - builds
      type: object
    CloudGamesListGameCdnSitesResponse:
      properties:
        sites:
          description: A list of CDN site summaries.
          items:
            $ref: '#/components/schemas/CloudCdnSiteSummary'
          type: array
      required:
      - sites
      type: object
    CloudGamesListGameCustomAvatarsResponse:
      properties:
        custom_avatars:
          description: A list of custom avatar summaries.
          items:
            $ref: '#/components/schemas/CloudCustomAvatarSummary'
          type: array
      required:
      - custom_avatars
      type: object
    CloudGamesLogStream:
      enum:
      - std_out
      - std_err
      type: string
    CloudGamesNamespacesAddNamespaceDomainRequest:
      properties:
        domain:
          description: A valid domain name (no protocol).
          type: string
      required:
      - domain
      type: object
    CloudGamesNamespacesCreateGameNamespaceRequest:
      properties:
        display_name:
          description: Represent a resource's readable display name.
          type: string
        name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        version_id:
          format: uuid
          type: string
      required:
      - display_name
      - version_id
      - name_id
      type: object
    CloudGamesNamespacesCreateGameNamespaceResponse:
      properties:
        namespace_id:
          format: uuid
          type: string
      required:
      - namespace_id
      type: object
    CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentRequest:
      properties:
        hostname:
          description: The hostname used for the token.
          type: string
        lobby_ports:
          description: '**Deprecated**

            A list of docker ports.'
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort'
          type: array
        ports:
          additionalProperties:
            $ref: '#/components/schemas/CloudMatchmakerDevelopmentPort'
          type: object
      required:
      - hostname
      type: object
    CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentResponse:
      properties:
        token:
          description: 'A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs of

            JSON.'
          type: string
      required:
      - token
      type: object
    CloudGamesNamespacesCreateGameNamespaceTokenPublicResponse:
      properties:
        token:
          description: 'A JSON Web Token.

            Slightly modified to include a description prefix and use Protobufs of

            JSON.'
          type: string
      required:
      - token
      type: object
    CloudGamesNamespacesGetAnalyticsMatchmakerLiveResponse:
      properties:
        lobbies:
          description: A list of analytics lobby summaries.
          items:
            $ref: '#/components/schemas/CloudLobbySummaryAnalytics'
          type: array
      required:
      - lobbies
      type: object
    CloudGamesNamespacesGetGameNamespaceByIdResponse:
      properties:
        namespace:
          $ref: '#/components/schemas/CloudNamespaceFull'
      required:
      - namespace
      type: object
    CloudGamesNamespacesGetGameNamespaceVersionHistoryResponse:
      properties:
        versions:
          description: A list of previously deployed namespace versions.
          items:
            $ref: '#/components/schemas/CloudNamespaceVersion'
          type: array
      required:
      - versions
      type: object
    CloudGamesNamespacesGetNamespaceLobbyResponse:
      properties:
        lobby:
          $ref: '#/components/schemas/CloudLogsLobbySummary'
        metrics:
          $ref: '#/components/schemas/CloudSvcMetrics'
        perf_lists:
          description: '**Deprecated**

            A list of service performance summaries.'
          items:
            $ref: '#/components/schemas/CloudSvcPerf'
          type: array
        stderr_presigned_urls:
          description: '**Deprecated**

            A list of URLs.'
          items:
            type: string
          type: array
        stdout_presigned_urls:
          description: '**Deprecated**

            A list of URLs.'
          items:
            type: string
          type: array
      required:
      - lobby
      - stdout_presigned_urls
      - stderr_presigned_urls
      - perf_lists
      type: object
    CloudGamesNamespacesInspectResponse:
      properties:
        agent:
          $ref: '#/components/schemas/CloudAuthAgent'
      required:
      - agent
      type: object
    CloudGamesNamespacesListNamespaceLobbiesResponse:
      properties:
        lobbies:
          description: A list of lobby log summaries.
          items:
            $ref: '#/components/schemas/CloudLogsLobbySummary'
          type: array
      required:
      - lobbies
      type: object
    CloudGamesNamespacesSetNamespaceCdnAuthTypeRequest:
      properties:
        auth_type:
          $ref: '#/components/schemas/CloudCdnAuthType'
      required:
      - auth_type
      type: object
    CloudGamesNamespacesToggleNamespaceDomainPublicAuthRequest:
      properties:
        enabled:
          description: Whether or not to enable authentication based on domain.
          type: boolean
      required:
      - enabled
      type: object
    CloudGamesNamespacesUpdateGameNamespaceMatchmakerConfigRequest:
      properties:
        lobby_count_max:
          description: Unsigned 32 bit integer.
          type: integer
        max_players:
          description: Unsigned 32 bit integer.
          type: integer
      required:
      - lobby_count_max
      - max_players
      type: object
    CloudGamesNamespacesUpdateGameNamespaceVersionRequest:
      properties:
        version_id:
          format: uuid
          type: string
      required:
      - version_id
      type: object
    CloudGamesNamespacesUpdateNamespaceCdnAuthUserRequest:
      properties:
        password:
          description: A bcrypt encrypted password. An error is returned if the given
            string is not properly encrypted.
          type: string
        user:
          description: A user name.
          type: string
      required:
      - user
      - password
      type: object
    CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigRequest:
      properties:
        lobby_count_max:
          description: Unsigned 32 bit integer.
          type: integer
        max_players:
          description: Unsigned 32 bit integer.
          type: integer
      required:
      - lobby_count_max
      - max_players
      type: object
    CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigResponse:
      properties:
        errors:
          description: A list of validation errors.
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - errors
      type: object
    CloudGamesNamespacesValidateGameNamespaceRequest:
      properties:
        display_name:
          description: Represent a resource's readable display name.
          type: string
        name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
      required:
      - display_name
      - name_id
      type: object
    CloudGamesNamespacesValidateGameNamespaceResponse:
      properties:
        errors:
          description: A list of validation errors.
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - errors
      type: object
    CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentRequest:
      properties:
        hostname:
          type: string
        lobby_ports:
          description: A list of docker ports.
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort'
          type: array
      required:
      - hostname
      - lobby_ports
      type: object
    CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentResponse:
      properties:
        errors:
          description: A list of validation errors.
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - errors
      type: object
    CloudGamesPrepareCustomAvatarUploadRequest:
      properties:
        content_length:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        mime:
          description: The MIME type of the custom avatar.
          type: string
        path:
          description: The path/filename of the custom avatar.
          type: string
      required:
      - path
      - content_length
      type: object
    CloudGamesPrepareCustomAvatarUploadResponse:
      properties:
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
        upload_id:
          format: uuid
          type: string
      required:
      - upload_id
      - presigned_request
      type: object
    CloudGamesReserveVersionNameResponse:
      properties:
        version_display_name:
          type: string
      required:
      - version_display_name
      type: object
    CloudGamesValidateGameRequest:
      properties:
        display_name:
          description: Represent a resource's readable display name.
          type: string
        name_id:
          description: '**Deprecated**

            A human readable short identifier used to references resources. Different
            than a `rivet.common#Uuid` because this is intended to be human readable.
            Different than `rivet.common#DisplayName` because this should not include
            special characters and be short.'
          type: string
      required:
      - display_name
      type: object
    CloudGamesValidateGameResponse:
      properties:
        errors:
          description: A list of validation errors.
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - errors
      type: object
    CloudGamesValidateGameVersionRequest:
      properties:
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
        display_name:
          description: Represent a resource's readable display name.
          type: string
      required:
      - display_name
      - config
      type: object
    CloudGamesValidateGameVersionResponse:
      properties:
        errors:
          description: A list of validation errors.
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - errors
      type: object
    CloudGetRayPerfLogsResponse:
      properties:
        perf_lists:
          description: A list of service performance summaries.
          items:
            $ref: '#/components/schemas/CloudSvcPerf'
          type: array
      required:
      - perf_lists
      type: object
    CloudGetRegionTiersResponse:
      properties:
        tiers:
          description: A list of region server tiers.
          items:
            $ref: '#/components/schemas/CloudRegionTier'
          type: array
      required:
      - tiers
      type: object
    CloudGroupBankSource:
      properties:
        account_number:
          description: The bank account number of this group's bank source.
          type: string
        routing_number:
          description: The bank routing number of this group's bank source.
          type: string
      required:
      - account_number
      - routing_number
      type: object
    CloudIdentityNamespaceConfig:
      description: Identity configuration for a given namespace.
      properties: {}
      type: object
    CloudInspectResponse:
      properties:
        agent:
          $ref: '#/components/schemas/CloudAuthAgent'
      required:
      - agent
      type: object
    CloudKvNamespaceConfig:
      description: KV configuration for a given namespace.
      properties: {}
      type: object
    CloudLobbySummaryAnalytics:
      description: Analytical information about a lobby.
      properties:
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        is_closed:
          description: Whether or not this lobby is in a closed state.
          type: boolean
        is_idle:
          description: Whether or not this lobby is idle.
          type: boolean
        is_outdated:
          description: Whether or not this lobby is outdated.
          type: boolean
        is_ready:
          description: Whether or not this lobby is ready.
          type: boolean
        lobby_group_id:
          format: uuid
          type: string
        lobby_group_name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        lobby_id:
          format: uuid
          type: string
        max_players_direct:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_normal:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_party:
          description: Unsigned 32 bit integer.
          type: integer
        region_id:
          format: uuid
          type: string
        registered_player_count:
          description: Unsigned 32 bit integer.
          type: integer
        total_player_count:
          description: Unsigned 32 bit integer.
          type: integer
      required:
      - lobby_id
      - lobby_group_id
      - lobby_group_name_id
      - region_id
      - create_ts
      - is_ready
      - is_idle
      - is_closed
      - is_outdated
      - max_players_normal
      - max_players_direct
      - max_players_party
      - total_player_count
      - registered_player_count
      type: object
    CloudLogsLobbyStatus:
      description: A union representing the state of a lobby.
      properties:
        running:
          $ref: '#/components/schemas/EmptyObject'
        stopped:
          $ref: '#/components/schemas/CloudLogsLobbyStatusStopped'
      required:
      - running
      type: object
    CloudLogsLobbyStatusStopped:
      description: The status of a stopped lobby.
      properties:
        exit_code:
          description: The exit code returned by the lobby's main process when stopped.
          type: integer
        failed:
          description: Whether or not the lobby failed or stopped successfully.
          type: boolean
        stop_ts:
          format: date-time
          type: string
      required:
      - stop_ts
      - failed
      - exit_code
      type: object
    CloudLogsLobbySummary:
      description: A logs summary for a lobby.
      properties:
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        lobby_group_name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        lobby_id:
          format: uuid
          type: string
        namespace_id:
          format: uuid
          type: string
        ready_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        region_id:
          format: uuid
          type: string
        start_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/CloudLogsLobbyStatus'
      required:
      - lobby_id
      - namespace_id
      - lobby_group_name_id
      - region_id
      - create_ts
      - status
      type: object
    CloudLogsPerfMark:
      description: A performance mark.
      properties:
        label:
          description: The label given to this performance mark.
          type: string
        ray_id:
          format: uuid
          type: string
        req_id:
          format: uuid
          type: string
        ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
      required:
      - label
      - ts
      type: object
    CloudLogsPerfSpan:
      description: A performance span.
      properties:
        finish_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        label:
          description: The label given to this performance span.
          type: string
        req_id:
          format: uuid
          type: string
        start_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
      required:
      - label
      - start_ts
      type: object
    CloudMatchmakerDevelopmentPort:
      description: A port configuration used to create development tokens.
      properties:
        port:
          type: integer
        port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
        protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortProtocol'
      required:
      - protocol
      type: object
    CloudMatchmakerNamespaceConfig:
      description: Matchmaker configuration for a given namespace.
      properties:
        lobby_count_max:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_per_client:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_per_client_hosting:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_per_client_proxy:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_per_client_tor:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_per_client_vpn:
          description: Unsigned 32 bit integer.
          type: integer
      required:
      - lobby_count_max
      - max_players_per_client
      - max_players_per_client_vpn
      - max_players_per_client_proxy
      - max_players_per_client_tor
      - max_players_per_client_hosting
      type: object
    CloudNamespaceConfig:
      description: Cloud configuration for a given namespace.
      properties:
        cdn:
          $ref: '#/components/schemas/CloudCdnNamespaceConfig'
        identity:
          $ref: '#/components/schemas/CloudIdentityNamespaceConfig'
        kv:
          $ref: '#/components/schemas/CloudKvNamespaceConfig'
        matchmaker:
          $ref: '#/components/schemas/CloudMatchmakerNamespaceConfig'
      required:
      - cdn
      - matchmaker
      - kv
      - identity
      type: object
    CloudNamespaceFull:
      description: A full namespace.
      properties:
        config:
          $ref: '#/components/schemas/CloudNamespaceConfig'
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        namespace_id:
          format: uuid
          type: string
        version_id:
          format: uuid
          type: string
      required:
      - namespace_id
      - create_ts
      - display_name
      - version_id
      - name_id
      - config
      type: object
    CloudNamespaceSummary:
      description: A namespace summary.
      properties:
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        namespace_id:
          format: uuid
          type: string
        version_id:
          format: uuid
          type: string
      required:
      - namespace_id
      - create_ts
      - display_name
      - version_id
      - name_id
      type: object
    CloudNamespaceVersion:
      description: A previously deployed namespace version.
      properties:
        deploy_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        namespace_id:
          description: A universally unique identifier.
          type: string
        version_id:
          description: A universally unique identifier.
          type: string
      required:
      - namespace_id
      - version_id
      - deploy_ts
      type: object
    CloudRegionSummary:
      description: A region summary.
      properties:
        provider:
          description: The server provider of this region.
          type: string
        provider_display_name:
          description: Represent a resource's readable display name.
          type: string
        region_display_name:
          description: Represent a resource's readable display name.
          type: string
        region_id:
          format: uuid
          type: string
        region_name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
      required:
      - region_id
      - region_name_id
      - provider
      - provider_display_name
      - region_display_name
      type: object
    CloudRegionTier:
      description: A region server tier.
      properties:
        bandwidth:
          description: Internet bandwidth (MB).
          type: integer
        cpu:
          description: CPU frequency (MHz).
          type: integer
        disk:
          description: Allocated disk space (MB).
          type: integer
        memory:
          description: Allocated memory (MB).
          type: integer
        price_per_second:
          description: '**Deprecated**

            Price billed for every second this server is running (in quadrillionth
            USD, 1,000,000,000,000 = $1.00).'
          type: integer
        rivet_cores_denominator:
          description: Together with the numerator, denotes the portion of the CPU
            a given server uses.
          type: integer
        rivet_cores_numerator:
          description: Together with the denominator, denotes the portion of the CPU
            a given server uses.
          type: integer
        tier_name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
      required:
      - tier_name_id
      - rivet_cores_numerator
      - rivet_cores_denominator
      - cpu
      - memory
      - disk
      - bandwidth
      - price_per_second
      type: object
    CloudRegionTierExpenses:
      description: Region tier expenses.
      properties:
        expenses:
          description: Amount of expenses for this region tier (in hundred-thousandths
            USD, 100,000 = $1.00).
          format: double
          type: number
        lobby_group_name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        namespace_id:
          format: uuid
          type: string
        region_id:
          format: uuid
          type: string
        tier_name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        uptime:
          description: How long a region tier has been active (in milliseconds).
          format: double
          type: number
      required:
      - namespace_id
      - region_id
      - tier_name_id
      - lobby_group_name_id
      - uptime
      - expenses
      type: object
    CloudSvcMetrics:
      description: Metrics relating to a job service.
      properties:
        allocated_memory:
          description: Total allocated memory (MB).
          format: double
          type: number
        cpu:
          description: CPU metrics.
          items:
            format: double
            type: number
          type: array
        job:
          description: The job name.
          type: string
        memory:
          description: Memory metrics.
          items:
            format: double
            type: number
          type: array
      required:
      - job
      - cpu
      - memory
      type: object
    CloudSvcPerf:
      description: A service performance summary.
      properties:
        duration:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        marks:
          description: A list of performance marks.
          items:
            $ref: '#/components/schemas/CloudLogsPerfMark'
          type: array
        req_id:
          format: uuid
          type: string
        spans:
          description: A list of performance spans.
          items:
            $ref: '#/components/schemas/CloudLogsPerfSpan'
          type: array
        svc_name:
          description: The name of the service.
          type: string
        ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
      required:
      - svc_name
      - ts
      - duration
      - spans
      - marks
      type: object
    CloudValidateGroupRequest:
      properties:
        display_name:
          description: Represent a resource's readable display name.
          type: string
      required:
      - display_name
      type: object
    CloudValidateGroupResponse:
      properties:
        errors:
          description: A list of validation errors.
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - errors
      type: object
    CloudVersionCdnConfig:
      description: CDN configuration for a given version.
      properties:
        build_command:
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
          type: string
        build_env:
          additionalProperties:
            type: string
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
          type: object
        build_output:
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
          type: string
        routes:
          description: Multiple CDN version routes.
          items:
            $ref: '#/components/schemas/CloudVersionCdnRoute'
          type: array
        site_id:
          format: uuid
          type: string
      type: object
    CloudVersionCdnCustomHeadersMiddleware:
      properties:
        headers:
          items:
            $ref: '#/components/schemas/CloudVersionCdnHeader'
          type: array
      required:
      - headers
      type: object
    CloudVersionCdnHeader:
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    CloudVersionCdnMiddleware:
      properties:
        kind:
          $ref: '#/components/schemas/CloudVersionCdnMiddlewareKind'
      required:
      - kind
      type: object
    CloudVersionCdnMiddlewareKind:
      properties:
        custom_headers:
          $ref: '#/components/schemas/CloudVersionCdnCustomHeadersMiddleware'
      type: object
    CloudVersionCdnRoute:
      properties:
        glob:
          type: string
        middlewares:
          description: Multiple CDN version middleware.
          items:
            $ref: '#/components/schemas/CloudVersionCdnMiddleware'
          type: array
        priority:
          description: Unsigned 32 bit integer.
          type: integer
      required:
      - glob
      - priority
      - middlewares
      type: object
    CloudVersionConfig:
      description: Cloud configuration for a given version.
      properties:
        cdn:
          $ref: '#/components/schemas/CloudVersionCdnConfig'
        engine:
          $ref: '#/components/schemas/CloudVersionEngineConfig'
        identity:
          $ref: '#/components/schemas/CloudVersionIdentityConfig'
        kv:
          $ref: '#/components/schemas/CloudVersionKvConfig'
        matchmaker:
          $ref: '#/components/schemas/CloudVersionMatchmakerConfig'
        scripts:
          additionalProperties:
            type: string
          type: object
      type: object
    CloudVersionEngineConfig:
      properties:
        custom:
          $ref: '#/components/schemas/CloudVersionEngineCustomConfig'
        godot:
          $ref: '#/components/schemas/CloudVersionEngineGodotConfig'
        html5:
          $ref: '#/components/schemas/CloudVersionEngineHtml5Config'
        unity:
          $ref: '#/components/schemas/CloudVersionEngineUnityConfig'
        unreal:
          $ref: '#/components/schemas/CloudVersionEngineUnrealConfig'
      type: object
    CloudVersionEngineCustomConfig:
      properties: {}
      type: object
    CloudVersionEngineGodotConfig:
      properties: {}
      type: object
    CloudVersionEngineHtml5Config:
      properties: {}
      type: object
    CloudVersionEngineUnityConfig:
      properties: {}
      type: object
    CloudVersionEngineUnrealConfig:
      properties:
        game_module:
          description: 'Name of the Unreal module that holds the game code.

            This is usually the value of `$.Modules[0].Name` in the file `MyProject.unproject`.

            _Configures Rivet CLI behavior. Has no effect on server behavior._'
          type: string
      required:
      - game_module
      type: object
    CloudVersionFull:
      description: A full version.
      properties:
        config:
          $ref: '#/components/schemas/CloudVersionConfig'
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        version_id:
          format: uuid
          type: string
      required:
      - version_id
      - create_ts
      - display_name
      - config
      type: object
    CloudVersionIdentityConfig:
      description: '**Deprecated**

        Identity configuration for a given version.'
      properties:
        avatars:
          description: '**Deprecated**'
          items:
            format: uuid
            type: string
          type: array
        custom_avatars:
          description: '**Deprecated**'
          items:
            $ref: '#/components/schemas/CloudVersionIdentityCustomAvatar'
          type: array
        custom_display_names:
          description: '**Deprecated**'
          items:
            $ref: '#/components/schemas/CloudVersionIdentityCustomDisplayName'
          type: array
        display_names:
          description: '**Deprecated**'
          items:
            type: string
          type: array
      type: object
    CloudVersionIdentityCustomAvatar:
      properties:
        upload_id:
          format: uuid
          type: string
      required:
      - upload_id
      type: object
    CloudVersionIdentityCustomDisplayName:
      properties:
        display_name:
          type: string
      required:
      - display_name
      type: object
    CloudVersionKvConfig:
      description: KV configuration for a given version.
      properties: {}
      type: object
    CloudVersionMatchmakerCaptcha:
      description: Matchmaker captcha configuration.
      properties:
        hcaptcha:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaHcaptcha'
        requests_before_reverify:
          description: Denotes how many requests a connection can make before it is
            required to reverify a captcha.
          type: integer
        turnstile:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaTurnstile'
        verification_ttl:
          description: Denotes how long a connection can continue to reconnect without
            having to reverify a captcha (in milliseconds).
          format: int64
          type: integer
      required:
      - requests_before_reverify
      - verification_ttl
      type: object
    CloudVersionMatchmakerCaptchaHcaptcha:
      description: hCpatcha configuration.
      properties:
        level:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptchaHcaptchaLevel'
          description: '**Deprecated**'
        secret_key:
          description: Secret key for your hCaptcha application. Must be set.
          type: string
        site_key:
          description: Site key for your hCaptcha application. Must be set.
          type: string
      type: object
    CloudVersionMatchmakerCaptchaHcaptchaLevel:
      description: '**Deprecated**

        How hard a captcha should be.'
      enum:
      - easy
      - moderate
      - difficult
      - always_on
      type: string
    CloudVersionMatchmakerCaptchaTurnstile:
      description: Turnstile captcha configuration.
      properties:
        secret_key:
          type: string
        site_key:
          type: string
      required:
      - site_key
      - secret_key
      type: object
    CloudVersionMatchmakerConfig:
      description: Matchmaker configuration for a given version.
      properties:
        captcha:
          $ref: '#/components/schemas/CloudVersionMatchmakerCaptcha'
        dev_hostname:
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
          type: string
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRuntimeDocker'
        game_modes:
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameMode'
          description: A list of game modes.
          type: object
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
        lobby_groups:
          description: '**Deprecated: use `game_modes` instead**

            A list of game modes.'
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroup'
          type: array
        max_players:
          type: integer
        max_players_direct:
          type: integer
        max_players_party:
          type: integer
        regions:
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRegion'
          type: object
        tier:
          type: string
      type: object
    CloudVersionMatchmakerGameMode:
      description: A game mode.
      properties:
        actions:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeActions'
        allow_dynamic_max_players:
          type: boolean
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRuntimeDocker'
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
        listable:
          type: boolean
        max_players:
          type: integer
        max_players_direct:
          type: integer
        max_players_party:
          type: integer
        regions:
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRegion'
          type: object
        taggable:
          type: boolean
        tier:
          type: string
      type: object
    CloudVersionMatchmakerGameModeActions:
      description: Configuration for the connection types allowed for a game mode.
      properties:
        create:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeCreateConfig'
        find:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeFindConfig'
        join:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeJoinConfig'
      type: object
    CloudVersionMatchmakerGameModeCreateConfig:
      description: Configures the requirements and authentication for the /create
        endpoint. If this value is not set in the config, the /create endpoint is
        NOT enabled.
      properties:
        enable_private:
          description: Defaults to true when unset.
          type: boolean
        enable_public:
          description: Defaults to false when unset.
          type: boolean
        enabled:
          description: Sets whether or not the /create endpoint is enabled.
          type: boolean
        identity_requirement:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdentityRequirement'
        max_lobbies_per_identity:
          description: '**Deprecated**'
          type: integer
        verification:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeVerificationConfig'
      required:
      - enabled
      type: object
    CloudVersionMatchmakerGameModeFindConfig:
      description: Configures the requirements and authentication for the /find endpoint.
        If this value is not set in the config, the /find endpoint is still enabled.
      properties:
        enabled:
          description: Sets whether or not the /find endpoint is enabled.
          type: boolean
        identity_requirement:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdentityRequirement'
        verification:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeVerificationConfig'
      required:
      - enabled
      type: object
    CloudVersionMatchmakerGameModeIdentityRequirement:
      description: '**Deprecated**

        The registration requirement for a user when joining/finding/creating a lobby.
        "None" allows for connections without an identity.'
      enum:
      - none
      - guest
      - registered
      type: string
    CloudVersionMatchmakerGameModeIdleLobbiesConfig:
      description: Configuration for how many idle lobbies a game version should have.
      properties:
        max:
          type: integer
        min:
          type: integer
      required:
      - min
      - max
      type: object
    CloudVersionMatchmakerGameModeJoinConfig:
      description: Configures the requirements and authentication for the /join endpoint.
        If this value is not set in the config, the /join endpoint is still enabled.
      properties:
        enabled:
          description: Sets whether or not the /join endpoint is enabled.
          type: boolean
        identity_requirement:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdentityRequirement'
        verification:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeVerificationConfig'
      required:
      - enabled
      type: object
    CloudVersionMatchmakerGameModeRegion:
      description: A game mode region.
      properties:
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerGameModeIdleLobbiesConfig'
        tier:
          type: string
      type: object
    CloudVersionMatchmakerGameModeRuntimeDocker:
      description: A game mode runtime running through Docker.
      properties:
        args:
          items:
            type: string
          type: array
        build_args:
          additionalProperties:
            type: string
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
          type: object
        dockerfile:
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
          type: string
        env:
          additionalProperties:
            type: string
          type: object
        image:
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
          type: string
        image_id:
          format: uuid
          type: string
        network_mode:
          $ref: '#/components/schemas/CloudVersionMatchmakerNetworkMode'
        ports:
          additionalProperties:
            $ref: '#/components/schemas/CloudVersionMatchmakerGameModeRuntimeDockerPort'
          type: object
      type: object
    CloudVersionMatchmakerGameModeRuntimeDockerPort:
      description: Port config for a docker build.
      properties:
        dev_port:
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
          type: integer
        dev_port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        dev_protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortProtocol'
          description: _Configures Rivet CLI behavior. Has no effect on server behavior._
        port:
          description: 'The port number to connect to.


            ### Related - cloud.version.matchmaker.PortProtocol - cloud.version.matchmaker.ProxyKind'
          type: integer
        port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
        protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortProtocol'
        proxy:
          $ref: '#/components/schemas/CloudVersionMatchmakerProxyKind'
          description: How this port should be proxied. Defaults to 'game-guard`.
      type: object
    CloudVersionMatchmakerGameModeVerificationConfig:
      description: Configuration that tells Rivet where to send validation requests
        and with what headers. When set, Rivet will send the `verification_data` property
        (given by the user in the find/join/create endpoint) to the given url along
        with the headers provided and some information about the requested lobby.
        The response of this request will determine if the user can join that lobby
        or not.
      properties:
        headers:
          additionalProperties:
            type: string
          type: object
        url:
          type: string
      required:
      - url
      - headers
      type: object
    CloudVersionMatchmakerLobbyGroup:
      description: A game mode.
      properties:
        max_players_direct:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_normal:
          description: Unsigned 32 bit integer.
          type: integer
        max_players_party:
          description: Unsigned 32 bit integer.
          type: integer
        name_id:
          description: '**Deprecated: use GameMode instead**

            A human readable short identifier used to references resources. Different
            than a `rivet.common#Uuid` because this is intended to be human readable.
            Different than `rivet.common#DisplayName` because this should not include
            special characters and be short.'
          type: string
        regions:
          description: A list of game mode regions.
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRegion'
          type: array
        runtime:
          $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntime'
      required:
      - name_id
      - regions
      - max_players_normal
      - max_players_direct
      - max_players_party
      - runtime
      type: object
    CloudVersionMatchmakerLobbyGroupIdleLobbiesConfig:
      description: '**Deprecated: use GameMode instead**

        Configuration for how many idle lobbies a game version should have.'
      properties:
        max_idle_lobbies:
          description: Unsigned 32 bit integer.
          type: integer
        min_idle_lobbies:
          description: Unsigned 32 bit integer.
          type: integer
      required:
      - min_idle_lobbies
      - max_idle_lobbies
      type: object
    CloudVersionMatchmakerLobbyGroupRegion:
      description: '**Deprecated: use GameMode instead**

        A game mode region.'
      properties:
        idle_lobbies:
          $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupIdleLobbiesConfig'
        region_id:
          format: uuid
          type: string
        tier_name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
      required:
      - region_id
      - tier_name_id
      type: object
    CloudVersionMatchmakerLobbyGroupRuntime:
      description: '**Deprecated: use GameMode instead**

        A union representing the runtime a game mode runs on.'
      properties:
        docker:
          $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDocker'
      type: object
    CloudVersionMatchmakerLobbyGroupRuntimeDocker:
      description: '**Deprecated: use GameMode instead**

        A game mode runtime running through Docker.'
      properties:
        args:
          items:
            type: string
          type: array
        build_id:
          format: uuid
          type: string
        env_vars:
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerEnvVar'
          type: array
        network_mode:
          $ref: '#/components/schemas/CloudVersionMatchmakerNetworkMode'
        ports:
          items:
            $ref: '#/components/schemas/CloudVersionMatchmakerLobbyGroupRuntimeDockerPort'
          type: array
      required:
      - args
      - env_vars
      - ports
      type: object
    CloudVersionMatchmakerLobbyGroupRuntimeDockerEnvVar:
      description: '**Deprecated: use GameMode instead**

        A docker environment variable.'
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    CloudVersionMatchmakerLobbyGroupRuntimeDockerPort:
      description: '**Deprecated: use GameMode instead**

        A docker port.'
      properties:
        label:
          description: The label of this docker port.
          type: string
        port_range:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortRange'
        proxy_protocol:
          $ref: '#/components/schemas/CloudVersionMatchmakerPortProtocol'
        target_port:
          description: The port number to connect to.
          type: integer
      required:
      - label
      - proxy_protocol
      type: object
    CloudVersionMatchmakerNetworkMode:
      description: 'Configures how the container''s network is isolated from the host.

        `bridge` (default) networking isolates the container''s network from the host
        & other containers.

        `host` networking removes isolation between the container and the host. Only
        available in Rivet Open Source & Enterprise.

        Read more about bridge vs host networking [here](https://rivet.gg/docs/dynamic-servers/concepts/host-bridge-networking).'
      enum:
      - bridge
      - host
      type: string
    CloudVersionMatchmakerPortProtocol:
      description: "Signifies the protocol of the port.\nNote that when proxying through\
        \ GameGuard (via `ProxyKind`), the port number returned by `/find`, `/join`,\
        \ and `/create` will not be the same as the port number configured in the\
        \ config:\n\n- With HTTP, the port will always be 80. The hostname of the\
        \ port correctly routes the incoming\n  connection to the correct port being\
        \ used by the game server.\n- With HTTPS, the port will always be 443. The\
        \ hostname of the port correctly routes the incoming\n  connection to the\
        \ correct port being used by the game server.\n- Using TCP/UDP, the port will\
        \ be a random number between 26000 and 31999. This gets automatically\n  routed\
        \ to the correct port being used by the game server.\n\n### Related - cloud.version.matchmaker.GameModeRuntimeDockerPort\
        \ - cloud.version.matchmaker.ProxyKind - /docs/dynamic-servers/concepts/game-guard\
        \ - matchmaker.lobbies.find"
      enum:
      - http
      - https
      - tcp
      - tcp_tls
      - udp
      type: string
    CloudVersionMatchmakerPortRange:
      description: 'Range of ports that can be connected to. Note that the port range
        values returned by /find


        ### Related


        - cloud.version.matchmaker.PortProtocol

        - cloud.version.matchmaker.ProxyKind'
      properties:
        max:
          description: Unsigned 32 bit integer.
          type: integer
        min:
          description: Unsigned 32 bit integer.
          type: integer
      required:
      - min
      - max
      type: object
    CloudVersionMatchmakerProxyKind:
      description: 'Denotes what type of proxying to use for ports. Rivet GameGuard
        adds DoS and DDoS mitigation to incoming connections.


        ### Related - /docs/dynamic-servers/concepts/game-guard - cloud.version.matchmaker.PortProtocol'
      enum:
      - none
      - game_guard
      type: string
    CloudVersionSummary:
      description: A version summary.
      properties:
        create_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        version_id:
          format: uuid
          type: string
      required:
      - version_id
      - create_ts
      - display_name
      type: object
    DisplayName:
      type: string
    Email:
      description: A valid email address
      type: string
    EmptyObject:
      properties: {}
      type: object
    ErrorBody:
      properties:
        code:
          type: string
        documentation:
          type: string
        message:
          type: string
        metadata:
          $ref: '#/components/schemas/ErrorMetadata'
      required:
      - code
      - message
      type: object
    ErrorMetadata:
      description: Unstructured metadata relating to an error. Must be manually parsed.
    GameHandle:
      properties:
        banner_url:
          description: The URL of this game's banner image.
          type: string
        display_name:
          $ref: '#/components/schemas/DisplayName'
        game_id:
          format: uuid
          type: string
        logo_url:
          description: The URL of this game's logo image.
          type: string
        name_id:
          $ref: '#/components/schemas/Identifier'
      required:
      - game_id
      - name_id
      - display_name
      type: object
    GameLeaderboardCategory:
      description: A game leaderboard category.
      properties:
        display_name:
          description: Represent a resource's readable display name.
          type: string
      required:
      - display_name
      type: object
    GamePlatformLink:
      description: A platform link denoting a supported platform.
      properties:
        display_name:
          description: Represent a resource's readable display name.
          type: string
        url:
          description: The URL to the given game's method of distribution on this
            platform.
          type: string
      required:
      - display_name
      - url
      type: object
    GameProfile:
      description: A game profile.
      properties:
        banner_url:
          description: The URL of this game's banner image.
          type: string
        description:
          description: A description of the given game.
          type: string
        developer:
          $ref: '#/components/schemas/GroupSummary'
        display_name:
          description: Represent a resource's readable display name.
          type: string
        game_id:
          format: uuid
          type: string
        group_leaderboard_categories:
          description: A list of game leaderboard categories.
          items:
            $ref: '#/components/schemas/GameLeaderboardCategory'
          type: array
        identity_leaderboard_categories:
          description: A list of game leaderboard categories.
          items:
            $ref: '#/components/schemas/GameLeaderboardCategory'
          type: array
        logo_url:
          description: The URL of this game's logo image.
          type: string
        name_id:
          description: A human readable short identifier used to references resources.
            Different than a `rivet.common#Uuid` because this is intended to be human
            readable. Different than `rivet.common#DisplayName` because this should
            not include special characters and be short.
          type: string
        platforms:
          description: A list of platform links.
          items:
            $ref: '#/components/schemas/GamePlatformLink'
          type: array
        recommended_groups:
          description: A list of group summaries.
          items:
            $ref: '#/components/schemas/GroupSummary'
          type: array
        tags:
          description: A list of game tags.
          items:
            type: string
          type: array
        url:
          description: The URL to this game's website.
          type: string
      required:
      - game_id
      - name_id
      - display_name
      - url
      - developer
      - tags
      - description
      - platforms
      - recommended_groups
      - identity_leaderboard_categories
      - group_leaderboard_categories
      type: object
    GameStat:
      description: A game statistic.
      properties:
        config:
          $ref: '#/components/schemas/GameStatConfig'
        overall_value:
          description: A single overall value of the given statistic.
          format: double
          type: number
      required:
      - config
      - overall_value
      type: object
    GameStatAggregationMethod:
      description: A value denoting the aggregation method of a game statistic.
      enum:
      - sum
      - average
      - min
      - max
      type: string
    GameStatConfig:
      description: A game statistic config.
      properties:
        aggregation:
          $ref: '#/components/schemas/GameStatAggregationMethod'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        format:
          $ref: '#/components/schemas/GameStatFormatMethod'
        icon_id:
          format: uuid
          type: string
        postfix_plural:
          description: 'A string appended to the end of a game statistic''s value
            that is not exactly 1. Example: 45 **dollars**.'
          type: string
        postfix_singular:
          description: 'A string appended to the end of a singular game statistic''s
            value. Example: 1 **dollar**.'
          type: string
        prefix_plural:
          description: 'A string prepended to the beginning of a game statistic''s
            value that is not exactly 1. Example: **values** 45.'
          type: string
        prefix_singular:
          description: 'A string appended to the beginning of a singular game statistic''s
            value. Example: **value** 1.'
          type: string
        priority:
          type: integer
        record_id:
          format: uuid
          type: string
        sorting:
          $ref: '#/components/schemas/GameStatSortingMethod'
      required:
      - record_id
      - icon_id
      - format
      - aggregation
      - sorting
      - priority
      - display_name
      type: object
    GameStatFormatMethod:
      description: A value denoting the format method of a game statistic.
      enum:
      - integer
      - float_1
      - float_2
      - float_3
      - duration_minute
      - duration_second
      - duration_hundredth_second
      type: string
    GameStatSortingMethod:
      description: A value denoting the sorting method of a game statistic.
      enum:
      - desc
      - asc
      type: string
    GameStatSummary:
      description: A game statistic summary.
      properties:
        game:
          $ref: '#/components/schemas/GameHandle'
        stats:
          items:
            $ref: '#/components/schemas/GameStat'
          type: array
      required:
      - game
      - stats
      type: object
    GameSummary:
      properties:
        banner_url:
          description: The URL of this game's banner image.
          type: string
        developer:
          $ref: '#/components/schemas/GroupHandle'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        game_id:
          format: uuid
          type: string
        logo_url:
          description: The URL of this game's logo image.
          type: string
        name_id:
          $ref: '#/components/schemas/Identifier'
        total_player_count:
          description: Unsigned 32 bit integer.
          type: integer
        url:
          type: string
      required:
      - game_id
      - name_id
      - display_name
      - url
      - developer
      - total_player_count
      type: object
    GeoCoord:
      description: Geographical coordinates for a location on Planet Earth.
      properties:
        latitude:
          format: double
          type: number
        longitude:
          format: double
          type: number
      required:
      - latitude
      - longitude
      type: object
    GeoDistance:
      description: Distance available in multiple units.
      properties:
        kilometers:
          format: double
          type: number
        miles:
          format: double
          type: number
      required:
      - kilometers
      - miles
      type: object
    GlobalEventNotification:
      properties:
        description:
          type: string
        thumbnail_url:
          type: string
        title:
          type: string
        url:
          type: string
      required:
      - title
      - description
      - thumbnail_url
      - url
      type: object
    GroupBannedIdentity:
      description: A banned identity.
      properties:
        ban_ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
        identity:
          $ref: '#/components/schemas/IdentityHandle'
      required:
      - identity
      - ban_ts
      type: object
    GroupConsumeInviteResponse:
      properties:
        group_id:
          format: uuid
          type: string
      type: object
    GroupCreateInviteRequest:
      properties:
        ttl:
          description: How long until the group invite expires (in milliseconds).
          format: double
          type: number
        use_count:
          description: How many times the group invite can be used.
          format: double
          type: number
      type: object
    GroupCreateInviteResponse:
      properties:
        code:
          description: The code that will be passed to `rivet.api.group#ConsumeInvite`
            to join a group.
          type: string
      required:
      - code
      type: object
    GroupCreateRequest:
      properties:
        display_name:
          description: Represent a resource's readable display name.
          type: string
      required:
      - display_name
      type: object
    GroupCreateResponse:
      properties:
        group_id:
          format: uuid
          type: string
      required:
      - group_id
      type: object
    GroupExternalLinks:
      description: External links for this group.
      properties:
        profile:
          description: A link to this group's profile page.
          type: string
      required:
      - profile
      type: object
    GroupGetBansResponse:
      properties:
        anchor:
          description: The pagination anchor.
          type: string
        banned_identities:
          description: A list of banned group members.
          items:
            $ref: '#/components/schemas/GroupBannedIdentity'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - banned_identities
      - watch
      type: object
    GroupGetInviteResponse:
      properties:
        group:
          $ref: '#/components/schemas/GroupHandle'
      required:
      - group
      type: object
    GroupGetJoinRequestsResponse:
      properties:
        anchor:
          description: The pagination anchor.
          type: string
        join_requests:
          description: A list of group join requests.
          items:
            $ref: '#/components/schemas/GroupJoinRequest'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - join_requests
      - watch
      type: object
    GroupGetMembersResponse:
      properties:
        anchor:
          description: The pagination anchor.
          type: string
        members:
          description: A list of group members.
          items:
            $ref: '#/components/schemas/GroupMember'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - members
      - watch
      type: object
    GroupGetProfileResponse:
      properties:
        group:
          $ref: '#/components/schemas/GroupProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - group
      - watch
      type: object
    GroupGetSummaryResponse:
      properties:
        group:
          $ref: '#/components/schemas/GroupSummary'
      required:
      - group
      type: object
    GroupHandle:
      description: A group handle.
      properties:
        avatar_url:
          description: The URL of this group's avatar image
          type: string
        display_name:
          $ref: '#/components/schemas/DisplayName'
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        group_id:
          format: uuid
          type: string
        is_developer:
          description: Whether or not this group is a developer group.
          type: boolean
      required:
      - group_id
      - display_name
      - external
      type: object
    GroupJoinRequest:
      description: A group join request.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
        ts:
          description: RFC3339 timestamp.
          format: date-time
          type: string
      required:
      - identity
      - ts
      type: object
    GroupListSuggestedResponse:
      properties:
        groups:
          description: A list of group summaries.
          items:
            $ref: '#/components/schemas/GroupSummary'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - groups
      - watch
      type: object
    GroupMember:
      description: A group member.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityHandle'
      required:
      - identity
      type: object
    GroupPrepareAvatarUploadRequest:
      properties:
        content_length:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        mime:
          description: The MIME type of the group avatar.
          type: string
        path:
          description: The path/filename of the group avatar.
          type: string
      required:
      - path
      - content_length
      type: object
    GroupPrepareAvatarUploadResponse:
      properties:
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
        upload_id:
          format: uuid
          type: string
      required:
      - upload_id
      - presigned_request
      type: object
    GroupProfile:
      description: A list of group profiles.
      properties:
        avatar_url:
          description: The URL of this group's avatar image.
          type: string
        bio:
          description: Detailed information about a profile.
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        group_id:
          format: uuid
          type: string
        is_current_identity_member:
          description: Whether or not the current identity is a member of this group.
          type: boolean
        is_current_identity_requesting_join:
          description: Whether or not the current identity is currently requesting
            to join this group.
          type: boolean
        is_developer:
          description: Whether or not this group is a developer.
          type: boolean
        join_requests:
          description: A list of group join requests.
          items:
            $ref: '#/components/schemas/GroupJoinRequest'
          type: array
        member_count:
          description: Unsigned 32 bit integer.
          type: integer
        members:
          description: A list of group members.
          items:
            $ref: '#/components/schemas/GroupMember'
          type: array
        owner_identity_id:
          format: uuid
          type: string
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
      required:
      - group_id
      - display_name
      - external
      - bio
      - publicity
      - members
      - join_requests
      - owner_identity_id
      type: object
    GroupPublicity:
      description: The current publicity value for the given group.
      enum:
      - open
      - closed
      type: string
    GroupResolveJoinRequestRequest:
      properties:
        resolution:
          type: boolean
      type: object
    GroupSearchResponse:
      properties:
        anchor:
          type: string
        groups:
          description: A list of group handles.
          items:
            $ref: '#/components/schemas/GroupHandle'
          type: array
      required:
      - groups
      type: object
    GroupSummary:
      properties:
        avatar_url:
          description: The URL of this group's avatar image.
          type: string
        bio:
          $ref: '#/components/schemas/Bio'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        external:
          $ref: '#/components/schemas/GroupExternalLinks'
        group_id:
          format: uuid
          type: string
        is_current_identity_member:
          description: Whether or not the current identity is a member of this group.
          type: boolean
        is_developer:
          description: '**Deprecated**

            Whether or not this group is a developer.'
          type: boolean
        member_count:
          type: integer
        owner_identity_id:
          format: uuid
          type: string
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
      required:
      - group_id
      - display_name
      - external
      - is_developer
      - bio
      - is_current_identity_member
      - publicity
      - member_count
      - owner_identity_id
      type: object
    GroupTransferOwnershipRequest:
      properties:
        new_owner_identity_id:
          description: 'Identity to transfer the group to.

            Must be a member of the group.'
          type: string
      required:
      - new_owner_identity_id
      type: object
    GroupUpdateProfileRequest:
      properties:
        bio:
          description: Detailed information about a profile.
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
      type: object
    GroupValidateProfileRequest:
      properties:
        bio:
          description: Detailed information about a profile.
          type: string
        display_name:
          description: Represent a resource's readable display name.
          type: string
        publicity:
          $ref: '#/components/schemas/GroupPublicity'
      type: object
    GroupValidateProfileResponse:
      properties:
        errors:
          description: A list of validation errors.
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - errors
      type: object
    Identifier:
      description: A human readable short identifier used to references resources.
        Different than a `uuid` because this is intended to be human readable. Different
        than `DisplayName` because this should not include special characters and
        be short.
      type: string
    IdentityAccessTokenLinkedAccount:
      description: An identity's access token identity.
      properties:
        name:
          type: string
      required:
      - name
      type: object
    IdentityCancelGameLinkRequest:
      properties:
        identity_link_token:
          $ref: '#/components/schemas/Jwt'
      required:
      - identity_link_token
      type: object
    IdentityCompleteGameLinkRequest:
      properties:
        identity_link_token:
          $ref: '#/components/schemas/Jwt'
      required:
      - identity_link_token
      type: object
    IdentityDevState:
      description: The state of the given identity's developer status.
      enum:
      - inactive
      - pending
      - accepted
      type: string
    IdentityEmailLinkedAccount:
      description: An identity's linked email.
      properties:
        email:
          $ref: '#/components/schemas/Email'
      required:
      - email
      type: object
    IdentityExternalLinks:
      description: External links for an identity.
      properties:
        profile:
          description: A link to this identity's profile page.
          type: string
        settings:
          description: A link to the Rivet settings page.
          type: string
      required:
      - profile
      type: object
    IdentityGameActivity:
      description: The game an identity is currently participating in.
      properties:
        game:
          $ref: '#/components/schemas/GameHandle'
        message:
          description: A short activity message about the current game activity.
          type: string
        mutual_metadata:
          description: JSON data seen only by the given identity and their mutual
            followers.
        public_metadata:
          description: JSON data seen by anyone.
      required:
      - game
      - message
      type: object
    IdentityGameLinkStatus:
      enum:
      - incomplete
      - complete
      - cancelled
      type: string
    IdentityGetGameLinkNewIdentity:
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProfile'
        identity_token:
          $ref: '#/components/schemas/Jwt'
        identity_token_expire_ts:
          format: date-time
          type: string
      required:
      - identity_token
      - identity_token_expire_ts
      - identity
      type: object
    IdentityGetGameLinkResponse:
      properties:
        current_identity:
          $ref: '#/components/schemas/IdentityHandle'
        game:
          $ref: '#/components/schemas/GameHandle'
        new_identity:
          $ref: '#/components/schemas/IdentityGetGameLinkNewIdentity'
        status:
          $ref: '#/components/schemas/IdentityGameLinkStatus'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - status
      - game
      - current_identity
      - watch
      type: object
    IdentityGetHandlesResponse:
      properties:
        identities:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - identities
      - watch
      type: object
    IdentityGetProfileResponse:
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - identity
      - watch
      type: object
    IdentityGetSummariesResponse:
      properties:
        identities:
          items:
            $ref: '#/components/schemas/IdentitySummary'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - identities
      - watch
      type: object
    IdentityGlobalEvent:
      description: An event relevant to the current identity.
      properties:
        kind:
          $ref: '#/components/schemas/IdentityGlobalEventKind'
        notification:
          $ref: '#/components/schemas/IdentityGlobalEventNotification'
        ts:
          format: date-time
          type: string
      required:
      - ts
      - kind
      type: object
    IdentityGlobalEventIdentityUpdate:
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProfile'
      required:
      - identity
      type: object
    IdentityGlobalEventKind:
      properties:
        identity_update:
          $ref: '#/components/schemas/IdentityGlobalEventIdentityUpdate'
        matchmaker_lobby_join:
          $ref: '#/components/schemas/IdentityGlobalEventMatchmakerLobbyJoin'
      type: object
    IdentityGlobalEventMatchmakerLobbyJoin:
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
        ports:
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
          type: object
      required:
      - lobby
      - ports
      - player
      type: object
    IdentityGlobalEventNotification:
      description: 'Notifications represent information that should be presented to
        the user

        immediately.

        At the moment, only chat message events have associated notifications.


        # Display


        Notifications should be displayed in an unobtrusive manner throughout the

        entire game. Notifications should disappear after a few seconds if not

        interacted with.


        # Interactions


        If your platform supports it, notifications should be able to be clicked or

        tapped in order to open the relevant context for the event.

        For a simple implementation of notification interactions, open `url` in a

        web browser to present the relevant context. For example, a chat message

        notification will open the thread the chat message was sent in.

        For advanced implementations that implement a custom chat UI, use

        `GlobalEvent.kind` to determine what action to take when the notification
        is interacted with.

        For example, if the global event kind is `GlobalEventChatMessage`, then open

        the chat UI for the given thread.'
      properties:
        description:
          type: string
        thumbnail_url:
          description: URL to an image thumbnail that should be shown for this notification.
          type: string
        title:
          type: string
        url:
          description: Rivet Hub URL that holds the relevant context for this notification.
          type: string
      required:
      - title
      - description
      - thumbnail_url
      - url
      type: object
    IdentityGroup:
      description: A group that the given identity.
      properties:
        group:
          $ref: '#/components/schemas/GroupHandle'
      required:
      - group
      type: object
    IdentityHandle:
      description: An identity handle.
      properties:
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          description: The URL of this identity's avatar image.
          type: string
        display_name:
          $ref: '#/components/schemas/DisplayName'
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
        identity_id:
          format: uuid
          type: string
        is_registered:
          description: Whether or not this identity is registered with a linked account.
          type: boolean
        presence:
          $ref: '#/components/schemas/IdentityPresence'
      required:
      - identity_id
      - display_name
      - account_number
      - avatar_url
      - is_registered
      - external
      type: object
    IdentityLinkedAccount:
      description: A union representing an identity's linked accounts.
      properties:
        access_token:
          $ref: '#/components/schemas/IdentityAccessTokenLinkedAccount'
        email:
          $ref: '#/components/schemas/IdentityEmailLinkedAccount'
      type: object
    IdentityListActivitiesResponse:
      properties:
        games:
          items:
            $ref: '#/components/schemas/GameSummary'
          type: array
        identities:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
        suggested_groups:
          items:
            $ref: '#/components/schemas/GroupSummary'
          type: array
        suggested_players:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - identities
      - games
      - suggested_groups
      - suggested_players
      - watch
      type: object
    IdentityListFollowersResponse:
      properties:
        anchor:
          type: string
        identities:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - identities
      - watch
      type: object
    IdentityListFollowingResponse:
      properties:
        anchor:
          type: string
        identities:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - identities
      - watch
      type: object
    IdentityListFriendsResponse:
      properties:
        anchor:
          type: string
        identities:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - identities
      - watch
      type: object
    IdentityListMutualFriendsResponse:
      properties:
        anchor:
          type: string
        identities:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
      required:
      - identities
      type: object
    IdentityListRecentFollowersResponse:
      properties:
        anchor:
          type: string
        identities:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - identities
      - watch
      type: object
    IdentityPrepareAvatarUploadResponse:
      properties:
        presigned_request:
          $ref: '#/components/schemas/UploadPresignedRequest'
        upload_id:
          format: uuid
          type: string
      required:
      - upload_id
      - presigned_request
      type: object
    IdentityPrepareGameLinkResponse:
      properties:
        expire_ts:
          format: date-time
          type: string
        identity_link_token:
          description: Pass this to `GetGameLink` to get the linking status. Valid
            for 15 minutes.
          type: string
        identity_link_url:
          type: string
      required:
      - identity_link_token
      - identity_link_url
      - expire_ts
      type: object
    IdentityPresence:
      description: Information about the identity's current status, party, and active
        game.
      properties:
        game_activity:
          $ref: '#/components/schemas/IdentityGameActivity'
        status:
          $ref: '#/components/schemas/IdentityStatus'
        update_ts:
          format: date-time
          type: string
      required:
      - update_ts
      - status
      type: object
    IdentityProfile:
      description: An identity profile.
      properties:
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          description: The URL of this identity's avatar image.
          type: string
        awaiting_deletion:
          description: 'Whether or not this identity is awaiting account deletion.
            Only visible to when the requestee is

            this identity.'
          type: boolean
        bio:
          $ref: '#/components/schemas/Bio'
        dev_state:
          $ref: '#/components/schemas/IdentityDevState'
          description: '**Deprecated**'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
        follower_count:
          format: int64
          type: integer
        following:
          description: Whether or not the requestee's identity is following this identity.
          type: boolean
        following_count:
          format: int64
          type: integer
        games:
          items:
            $ref: '#/components/schemas/GameStatSummary'
          type: array
        groups:
          items:
            $ref: '#/components/schemas/IdentityGroup'
          type: array
        identity_id:
          format: uuid
          type: string
        is_admin:
          description: Whether or not this identity is an admin.
          type: boolean
        is_following_me:
          description: Whether or not this identity is both following and is followed
            by the requestee's identity.
          type: boolean
        is_game_linked:
          description: Whether or not this game user has been linked through the Rivet
            dashboard.
          type: boolean
        is_mutual_following:
          type: boolean
        is_registered:
          description: Whether or not this identity is registered with a linked account.
          type: boolean
        join_ts:
          format: date-time
          type: string
        linked_accounts:
          items:
            $ref: '#/components/schemas/IdentityLinkedAccount'
          type: array
        presence:
          $ref: '#/components/schemas/IdentityPresence'
      required:
      - identity_id
      - display_name
      - account_number
      - avatar_url
      - is_registered
      - external
      - is_admin
      - follower_count
      - following_count
      - following
      - is_following_me
      - is_mutual_following
      - join_ts
      - bio
      - linked_accounts
      - groups
      - games
      type: object
    IdentitySearchResponse:
      properties:
        anchor:
          description: The pagination anchor.
          type: string
        identities:
          items:
            $ref: '#/components/schemas/IdentityHandle'
          type: array
      required:
      - identities
      type: object
    IdentitySetupResponse:
      properties:
        game_id:
          format: uuid
          type: string
        identity:
          $ref: '#/components/schemas/IdentityProfile'
          description: Information about the identity that was just authenticated.
        identity_token:
          $ref: '#/components/schemas/Jwt'
          description: 'Token used to authenticate the identity.

            Should be stored somewhere permanent.

            Pass this to `rivet.api.identity#Setup$existing_identity_token` next time
            `rivet.api.identity#Setup` is called.

            Token has a 90 day TTL.

            This means that if `rivet.api.identity#Setup` is not called again within
            90 days, the token will no longer be valid.

            If this happens, the user can recover their account through the linking
            process (see `rivet.api.identity#PrepareGameLink`).

            This token should be stored locally and never sent to a server or another
            device.

            If this token is compromised, anyone with access to this token has control
            of the identity.'
        identity_token_expire_ts:
          description: If this token is compromised, anyone with access to this token
            has control of the identity.
          format: date-time
          type: string
      required:
      - identity_token
      - identity_token_expire_ts
      - identity
      - game_id
      type: object
    IdentityStatus:
      description: The current status of an identity. This helps players understand
        if another player is currently playing or has their game in the background.
      enum:
      - online
      - away
      - offline
      type: string
    IdentitySummary:
      description: An identity summary.
      properties:
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        avatar_url:
          description: The URL of this identity's avatar image.
          type: string
        display_name:
          $ref: '#/components/schemas/DisplayName'
        external:
          $ref: '#/components/schemas/IdentityExternalLinks'
        following:
          description: Whether or not the requestee's identity is following this identity.
          type: boolean
        identity_id:
          format: uuid
          type: string
        is_following_me:
          description: Whether or not this identity is both following and is followed
            by the requestee's identity.
          type: boolean
        is_mutual_following:
          type: boolean
        is_registered:
          description: Whether or not this identity is registered with a linked account.
          type: boolean
        presence:
          $ref: '#/components/schemas/IdentityPresence'
      required:
      - identity_id
      - display_name
      - account_number
      - avatar_url
      - is_registered
      - external
      - following
      - is_following_me
      - is_mutual_following
      type: object
    IdentityUpdateGameActivity:
      description: Information about the identity's current game. This is information
        that all other identities can see about what the current identity is doing.
      properties:
        message:
          description: A short message about the current game activity.
          type: string
        mutual_metadata:
          description: JSON data seen only by the given identity and their mutual
            followers.
        public_metadata:
          description: JSON data seen by anyone.
      type: object
    IdentityValidateProfileResponse:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - errors
      type: object
    IdentityWatchEventsResponse:
      properties:
        events:
          items:
            $ref: '#/components/schemas/IdentityGlobalEvent'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - events
      - watch
      type: object
    Jwt:
      description: Documentation at https://jwt.io/
      type: string
    KvDirectory:
      type: string
    KvEntry:
      description: A key-value entry.
      properties:
        deleted:
          type: boolean
        key:
          $ref: '#/components/schemas/KvKey'
        value:
          $ref: '#/components/schemas/KvValue'
      required:
      - key
      - value
      type: object
    KvGetBatchResponse:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/KvEntry'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - entries
      - watch
      type: object
    KvGetResponse:
      properties:
        deleted:
          description: Whether or not the entry has been deleted. Only set when watching
            this endpoint.
          type: boolean
        value:
          $ref: '#/components/schemas/KvValue'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - value
      - watch
      type: object
    KvKey:
      description: 'A string representing a key in the key-value database.

        Maximum length of 512 characters.

        _Recommended Key Path Format_

        Key path components are split by a slash (e.g. `a/b/c` has the path components
        `["a", "b", "c"]`). Slashes can be escaped by using a backslash (e.g. `a/b\/c/d`
        has the path components `["a", "b/c", "d"]`).

        This format is not enforced by Rivet, but the tools built around Rivet KV
        work better if this format is used.'
      type: string
    KvListResponse:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/KvEntry'
          type: array
      required:
      - entries
      type: object
    KvPutBatchRequest:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/KvPutEntry'
          type: array
        namespace_id:
          format: uuid
          type: string
      required:
      - entries
      type: object
    KvPutEntry:
      description: A new entry to insert into the key-value database.
      properties:
        key:
          $ref: '#/components/schemas/KvKey'
        value:
          $ref: '#/components/schemas/KvValue'
      required:
      - key
      - value
      type: object
    KvPutRequest:
      properties:
        key:
          $ref: '#/components/schemas/KvKey'
        namespace_id:
          format: uuid
          type: string
        value:
          $ref: '#/components/schemas/KvValue'
      required:
      - key
      - value
      type: object
    KvValue:
      description: 'A JSON object stored in the KV database.

        A `null` value indicates the entry is deleted.

        Maximum length of 262,144 bytes when encoded.'
    MatchmakerCreateLobbyResponse:
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
        ports:
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
          type: object
      required:
      - lobby
      - ports
      - player
      type: object
    MatchmakerCustomLobbyPublicity:
      enum:
      - public
      - private
      type: string
    MatchmakerFindLobbyResponse:
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
        ports:
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
          type: object
      required:
      - lobby
      - ports
      - player
      type: object
    MatchmakerGameModeInfo:
      description: A game mode that the player can join.
      properties:
        game_mode_id:
          $ref: '#/components/schemas/Identifier'
      required:
      - game_mode_id
      type: object
    MatchmakerGameModeStatistics:
      properties:
        player_count:
          format: int64
          type: integer
        regions:
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerRegionStatistics'
          type: object
      required:
      - player_count
      - regions
      type: object
    MatchmakerGetStatisticsResponse:
      properties:
        game_modes:
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerGameModeStatistics'
          type: object
        player_count:
          format: int64
          type: integer
      required:
      - player_count
      - game_modes
      type: object
    MatchmakerJoinLobby:
      description: A matchmaker lobby.
      properties:
        lobby_id:
          format: uuid
          type: string
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
          description: '**Deprecated**'
        ports:
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
          description: '**Deprecated**'
          type: object
        region:
          $ref: '#/components/schemas/MatchmakerJoinRegion'
      required:
      - lobby_id
      - region
      - ports
      - player
      type: object
    MatchmakerJoinLobbyResponse:
      properties:
        lobby:
          $ref: '#/components/schemas/MatchmakerJoinLobby'
        player:
          $ref: '#/components/schemas/MatchmakerJoinPlayer'
        ports:
          additionalProperties:
            $ref: '#/components/schemas/MatchmakerJoinPort'
          type: object
      required:
      - lobby
      - ports
      - player
      type: object
    MatchmakerJoinPlayer:
      description: A matchmaker lobby player.
      properties:
        token:
          $ref: '#/components/schemas/Jwt'
          description: Pass this token through the socket to the lobby server. The
            lobby server will validate this token with `PlayerConnected.player_token`
      required:
      - token
      type: object
    MatchmakerJoinPort:
      properties:
        host:
          description: The host for the given port. Will be null if using a port range.
          type: string
        hostname:
          type: string
        is_tls:
          description: Whether or not this lobby port uses TLS. You cannot mix a non-TLS
            and TLS ports.
          type: boolean
        port:
          description: The port number for this lobby. Will be null if using a port
            range.
          type: integer
        port_range:
          $ref: '#/components/schemas/MatchmakerJoinPortRange'
      required:
      - hostname
      - is_tls
      type: object
    MatchmakerJoinPortRange:
      description: Inclusive range of ports that can be connected to.
      properties:
        max:
          description: Maximum port that can be connected to. Inclusive range.
          type: integer
        min:
          description: Minimum port that can be connected to. Inclusive range.
          type: integer
      required:
      - min
      - max
      type: object
    MatchmakerJoinRegion:
      description: A matchmaker lobby region.
      properties:
        display_name:
          $ref: '#/components/schemas/DisplayName'
        region_id:
          $ref: '#/components/schemas/Identifier'
      required:
      - region_id
      - display_name
      type: object
    MatchmakerListLobbiesResponse:
      properties:
        game_modes:
          items:
            $ref: '#/components/schemas/MatchmakerGameModeInfo'
          type: array
        lobbies:
          items:
            $ref: '#/components/schemas/MatchmakerLobbyInfo'
          type: array
        regions:
          items:
            $ref: '#/components/schemas/MatchmakerRegionInfo'
          type: array
      required:
      - game_modes
      - regions
      - lobbies
      type: object
    MatchmakerListRegionsResponse:
      properties:
        regions:
          items:
            $ref: '#/components/schemas/MatchmakerRegionInfo'
          type: array
      required:
      - regions
      type: object
    MatchmakerLobbyInfo:
      description: A public lobby in the lobby list.
      properties:
        game_mode_id:
          type: string
        lobby_id:
          format: uuid
          type: string
        max_players_direct:
          type: integer
        max_players_normal:
          type: integer
        max_players_party:
          type: integer
        region_id:
          type: string
        state: {}
        total_player_count:
          type: integer
      required:
      - region_id
      - game_mode_id
      - lobby_id
      - max_players_normal
      - max_players_direct
      - max_players_party
      - total_player_count
      type: object
    MatchmakerRegionInfo:
      description: A region that the player can connect to.
      properties:
        datacenter_coord:
          $ref: '#/components/schemas/GeoCoord'
        datacenter_distance_from_client:
          $ref: '#/components/schemas/GeoDistance'
        provider_display_name:
          type: string
        region_display_name:
          type: string
        region_id:
          $ref: '#/components/schemas/Identifier'
      required:
      - region_id
      - provider_display_name
      - region_display_name
      - datacenter_coord
      - datacenter_distance_from_client
      type: object
    MatchmakerRegionStatistics:
      properties:
        player_count:
          format: int64
          type: integer
      required:
      - player_count
      type: object
    ModuleCallResponse:
      properties:
        data: {}
      required:
      - data
      type: object
    PortalGetGameProfileResponse:
      properties:
        game:
          $ref: '#/components/schemas/GameProfile'
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - game
      - watch
      type: object
    PortalGetSuggestedGamesResponse:
      properties:
        games:
          description: A list of game summaries.
          items:
            $ref: '#/components/schemas/GameSummary'
          type: array
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
      - games
      - watch
      type: object
    PortalNotificationRegisterFirebaseService:
      properties:
        access_key:
          type: string
      required:
      - access_key
      type: object
    PortalNotificationRegisterService:
      properties:
        firebase:
          $ref: '#/components/schemas/PortalNotificationRegisterFirebaseService'
      type: object
    PortalNotificationUnregisterService:
      enum:
      - firebase
      type: string
    PortalRegisterNotificationsRequest:
      properties:
        service:
          $ref: '#/components/schemas/PortalNotificationRegisterService'
      required:
      - service
      type: object
    ProvisionServersGetServerInfoResponse:
      properties:
        cluster_id:
          format: uuid
          type: string
        datacenter_id:
          format: uuid
          type: string
        name:
          type: string
        server_id:
          format: uuid
          type: string
        vlan_ip:
          type: string
      required:
      - name
      - server_id
      - datacenter_id
      - cluster_id
      - vlan_ip
      type: object
    Timestamp:
      description: RFC3339 timestamp
      type: string
    UploadPrepareFile:
      description: A file being prepared to upload.
      properties:
        content_length:
          description: Unsigned 64 bit integer.
          format: int64
          type: integer
        content_type:
          description: The MIME type of the file.
          type: string
        path:
          description: The path/filename of the file.
          type: string
      required:
      - path
      - content_length
      type: object
    UploadPresignedRequest:
      description: A presigned request used to upload files. Upload your file to the
        given URL via a PUT request.
      properties:
        byte_offset:
          description: The byte offset for this multipart chunk. Always 0 if not a
            multipart upload.
          format: int64
          type: integer
        content_length:
          description: Expected size of this upload.
          format: int64
          type: integer
        path:
          description: The name of the file to upload. This is the same as the one
            given in the upload prepare file.
          type: string
        url:
          description: The URL of the presigned request for which to upload your file
            to.
          type: string
      required:
      - path
      - url
      - byte_offset
      - content_length
      type: object
    ValidationError:
      description: An error given by failed content validation.
      properties:
        path:
          description: A list of strings denoting the origin of a validation error.
          items:
            type: string
          type: array
      required:
      - path
      type: object
    WatchQuery:
      description: A query parameter denoting the requests watch index.
      type: string
    WatchResponse:
      description: Provided by watchable endpoints used in blocking loops.
      properties:
        index:
          description: 'Index indicating the version of the data responded.

            Pass this to `WatchQuery` to block and wait for the next response.'
          type: string
      required:
      - index
      type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
info:
  title: Rivet API
  version: 0.0.1
openapi: 3.0.1
paths:
  /admin/login:
    post:
      operationId: admin_login
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLoginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLoginResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: &id001
      - BearerAuth: []
      tags:
      - Admin
  /auth/identity/access-token/complete-verification:
    post:
      description: Completes the access token verification process.
      operationId: auth_identity_accessToken_completeAccessTokenVerification
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthIdentityCompleteAccessTokenVerificationRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - AuthIdentityAccessToken
  /auth/identity/email/complete-verification:
    post:
      description: Completes the email verification process.
      operationId: auth_identity_email_completeEmailVerification
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthIdentityCompleteEmailVerificationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthIdentityCompleteEmailVerificationResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - AuthIdentityEmail
  /auth/identity/email/start-verification:
    post:
      description: Starts the verification process for linking an email to your identity.
      operationId: auth_identity_email_startEmailVerification
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthIdentityStartEmailVerificationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthIdentityStartEmailVerificationResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - AuthIdentityEmail
  /auth/tokens/identity:
    post:
      description: Refreshes the current identity's token and sets authentication
        headers.
      operationId: auth_tokens_refreshIdentityToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRefreshIdentityTokenRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthRefreshIdentityTokenResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - AuthTokens
  /cloud/auth/inspect:
    get:
      description: Returns information about the current authenticated agent.
      operationId: cloud_auth_inspect
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudInspectResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudAuth
  /cloud/bootstrap:
    get:
      description: Returns the basic information required to use the cloud APIs.
      operationId: cloud_bootstrap
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudBootstrapResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Cloud
  /cloud/devices/links:
    get:
      operationId: cloud_devices_links_get
      parameters:
      - in: query
        name: device_link_token
        required: true
        schema:
          $ref: '#/components/schemas/Jwt'
      - in: query
        name: watch_index
        required: false
        schema:
          $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDevicesGetDeviceLinkResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      tags:
      - CloudDevicesLinks
    post:
      operationId: cloud_devices_links_prepare
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDevicesPrepareDeviceLinkResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      tags:
      - CloudDevicesLinks
  /cloud/devices/links/complete:
    post:
      operationId: cloud_devices_links_complete
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudDevicesCompleteDeviceLinkRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      tags:
      - CloudDevicesLinks
  /cloud/games:
    get:
      description: Returns a list of games in which the current identity is a group
        member of its development team.
      operationId: cloud_games_games_getGames
      parameters:
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGamesResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesGames
    post:
      description: Creates a new game.
      operationId: cloud_games_games_createGame
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesGames
  /cloud/games/validate:
    post:
      description: Validates information used to create a new game.
      operationId: cloud_games_games_validateGame
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesValidateGameRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesValidateGameResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesGames
  /cloud/games/{game_id}:
    get:
      description: Returns a game by its game id.
      operationId: cloud_games_games_getGameById
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGameByIdResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesGames
  /cloud/games/{game_id}/avatar-upload/{upload_id}/complete:
    post:
      description: Completes a custom avatar image upload. Must be called after the
        file upload process completes.
      operationId: cloud_games_avatars_completeCustomAvatarUpload
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: upload_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesAvatars
  /cloud/games/{game_id}/avatars:
    get:
      description: Lists custom avatars for the given game.
      operationId: cloud_games_avatars_listGameCustomAvatars
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameCustomAvatarsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesAvatars
  /cloud/games/{game_id}/banner-upload/prepare:
    post:
      description: Prepares a game banner image upload.
      operationId: cloud_games_games_gameBannerUploadPrepare
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesGameBannerUploadPrepareRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGameBannerUploadPrepareResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesGames
  /cloud/games/{game_id}/banner-upload/{upload_id}/complete:
    post:
      description: Completes an game banner image upload. Must be called after the
        file upload process completes.
      operationId: cloud_games_games_gameBannerUploadComplete
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: upload_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesGames
  /cloud/games/{game_id}/builds:
    get:
      description: Lists game builds for the given game.
      operationId: cloud_games_builds_listGameBuilds
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameBuildsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesBuilds
    post:
      description: Creates a new game build for the given game.
      operationId: cloud_games_builds_createGameBuild
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameBuildRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameBuildResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesBuilds
  /cloud/games/{game_id}/cdn/sites:
    get:
      description: Lists CDN sites for a game.
      operationId: cloud_games_cdn_listGameCdnSites
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesListGameCdnSitesResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesCdn
    post:
      description: Creates a new CDN site for the given game.
      operationId: cloud_games_cdn_createGameCdnSite
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameCdnSiteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameCdnSiteResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesCdn
  /cloud/games/{game_id}/logo-upload/prepare:
    post:
      description: Prepares a game logo image upload.
      operationId: cloud_games_games_gameLogoUploadPrepare
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesGameLogoUploadPrepareRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGameLogoUploadPrepareResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesGames
  /cloud/games/{game_id}/logo-upload/{upload_id}/complete:
    post:
      description: Completes a game logo image upload. Must be called after the file
        upload process completes.
      operationId: cloud_games_games_gameLogoUploadComplete
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: upload_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesGames
  /cloud/games/{game_id}/matchmaker/lobbies/export-history:
    post:
      description: Exports lobby history over a given query time span.
      operationId: cloud_games_matchmaker_exportMatchmakerLobbyHistory
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesExportMatchmakerLobbyHistoryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesExportMatchmakerLobbyHistoryResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesMatchmaker
  /cloud/games/{game_id}/matchmaker/lobbies/{lobby_id}:
    delete:
      description: Deletes a matchmaker lobby, stopping it immediately.
      operationId: cloud_games_matchmaker_deleteMatchmakerLobby
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: lobby_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesDeleteMatchmakerLobbyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesMatchmaker
  /cloud/games/{game_id}/matchmaker/lobbies/{lobby_id}/logs:
    get:
      description: Returns the logs for a given lobby.
      operationId: cloud_games_matchmaker_getLobbyLogs
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: lobby_id
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: stream
        required: true
        schema:
          $ref: '#/components/schemas/CloudGamesLogStream'
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetLobbyLogsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesMatchmaker
  /cloud/games/{game_id}/matchmaker/lobbies/{lobby_id}/logs/export:
    post:
      description: Generates a download URL for logs.
      operationId: cloud_games_matchmaker_exportLobbyLogs
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: lobby_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesExportLobbyLogsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesExportLobbyLogsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesMatchmaker
  /cloud/games/{game_id}/namespaces:
    post:
      description: Creates a new namespace for the given game.
      operationId: cloud_games_namespaces_createGameNamespace
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesCreateGameNamespaceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesCreateGameNamespaceResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/validate:
    post:
      description: Validates information used to create a new game namespace.
      operationId: cloud_games_namespaces_validateGameNamespace
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesValidateGameNamespaceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesValidateGameNamespaceResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}:
    get:
      description: Gets a game namespace by namespace ID.
      operationId: cloud_games_namespaces_getGameNamespaceById
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesGetGameNamespaceByIdResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/analytics/matchmaker/live:
    get:
      description: Returns live information about all active lobbies for a given namespace.
      operationId: cloud_games_namespaces_analytics_getAnalyticsMatchmakerLive
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesGetAnalyticsMatchmakerLiveResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespacesAnalytics
  /cloud/games/{game_id}/namespaces/{namespace_id}/auth-user:
    post:
      description: Adds an authenticated user to the given game namespace.
      operationId: cloud_games_namespaces_updateNamespaceCdnAuthUser
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesUpdateNamespaceCdnAuthUserRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/auth-user/{user}:
    delete:
      description: Removes an authenticated user from the given game namespace.
      operationId: cloud_games_namespaces_removeNamespaceCdnAuthUser
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      - description: A user name.
        in: path
        name: user
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/cdn-auth:
    put:
      description: Updates the CDN authentication type of the given game namespace.
      operationId: cloud_games_namespaces_setNamespaceCdnAuthType
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesSetNamespaceCdnAuthTypeRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/domain-public-auth:
    put:
      description: Toggles whether or not to allow authentication based on domain
        for the given game namespace.
      operationId: cloud_games_namespaces_toggleNamespaceDomainPublicAuth
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesToggleNamespaceDomainPublicAuthRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/domains:
    post:
      description: Adds a domain to the given game namespace.
      operationId: cloud_games_namespaces_addNamespaceDomain
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesAddNamespaceDomainRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/domains/{domain}:
    delete:
      description: Removes a domain from the given game namespace.
      operationId: cloud_games_namespaces_removeNamespaceDomain
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      - description: A valid domain name (no protocol).
        in: path
        name: domain
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/logs/lobbies:
    get:
      description: Returns a list of lobbies for the given game namespace.
      operationId: cloud_games_namespaces_logs_listNamespaceLobbies
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      - description: Returns lobbies created before this timestamp.
        in: query
        name: before_create_ts
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesListNamespaceLobbiesResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespacesLogs
  /cloud/games/{game_id}/namespaces/{namespace_id}/logs/lobbies/{lobby_id}:
    get:
      description: Returns a lobby from the given game namespace.
      operationId: cloud_games_namespaces_logs_getNamespaceLobby
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: lobby_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesGetNamespaceLobbyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespacesLogs
  /cloud/games/{game_id}/namespaces/{namespace_id}/mm-config:
    post:
      description: Updates matchmaker config for the given game namespace.
      operationId: cloud_games_namespaces_updateGameNamespaceMatchmakerConfig
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesUpdateGameNamespaceMatchmakerConfigRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/mm-config/validate:
    post:
      description: Validates information used to update a game namespace's matchmaker
        config.
      operationId: cloud_games_namespaces_validateGameNamespaceMatchmakerConfig
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesValidateGameNamespaceMatchmakerConfigResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/tokens/development:
    post:
      description: Creates a development token for the given namespace.
      operationId: cloud_games_namespaces_createGameNamespaceTokenDevelopment
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenDevelopmentResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/tokens/development/validate:
    post:
      description: Validates information used to create a new game namespace development
        token.
      operationId: cloud_games_namespaces_validateGameNamespaceTokenDevelopment
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesValidateGameNamespaceTokenDevelopmentResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/tokens/public:
    post:
      description: Creates a public token for the given namespace.
      operationId: cloud_games_namespaces_createGameNamespaceTokenPublic
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesCreateGameNamespaceTokenPublicResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/version:
    put:
      description: Updates the version of a game namespace.
      operationId: cloud_games_namespaces_updateGameNamespaceVersion
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesNamespacesUpdateGameNamespaceVersionRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/namespaces/{namespace_id}/version-history:
    get:
      description: Gets the version history for a given namespace.
      operationId: cloud_games_namespaces_GetGameNamespaceVersionHistoryList
      parameters:
      - description: A universally unique identifier.
        in: path
        name: game_id
        required: true
        schema:
          type: string
      - description: A universally unique identifier.
        in: path
        name: namespace_id
        required: true
        schema:
          type: string
      - description: How many items to offset the search by.
        in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Amount of items to return. Must be between 1 and 32 inclusive.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesNamespacesGetGameNamespaceVersionHistoryResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesNamespaces
  /cloud/games/{game_id}/prepare:
    post:
      description: 'Prepares a custom avatar image upload.

        Complete upload with `rivet.api.cloud#CompleteCustomAvatarUpload`.'
      operationId: cloud_games_avatars_prepareCustomAvatarUpload
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesPrepareCustomAvatarUploadRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesPrepareCustomAvatarUploadResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesAvatars
  /cloud/games/{game_id}/tokens/cloud:
    post:
      description: Creates a new game cloud token.
      operationId: cloud_games_tokens_createCloudToken
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateCloudTokenResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesTokens
  /cloud/games/{game_id}/versions:
    post:
      description: Creates a new game version.
      operationId: cloud_games_versions_createGameVersion
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesCreateGameVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesCreateGameVersionResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesVersions
  /cloud/games/{game_id}/versions/reserve-name:
    post:
      description: Reserves a display name for the next version. Used to generate
        a monotomically increasing build number without causing a race condition with
        multiple versions getting created at the same time.
      operationId: cloud_games_versions_reserveVersionName
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesReserveVersionNameResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesVersions
  /cloud/games/{game_id}/versions/validate:
    post:
      description: Validates information used to create a new game version.
      operationId: cloud_games_versions_validateGameVersion
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudGamesValidateGameVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesValidateGameVersionResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesVersions
  /cloud/games/{game_id}/versions/{version_id}:
    get:
      description: Returns a game version by its version ID.
      operationId: cloud_games_versions_getGameVersionById
      parameters:
      - in: path
        name: game_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: version_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGamesGetGameVersionByIdResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGamesVersions
  /cloud/groups/validate:
    post:
      description: Validates information used to create a new group.
      operationId: cloud_groups_validate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudValidateGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudValidateGroupResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudGroups
  /cloud/rays/{ray_id}/perf:
    get:
      description: Returns performance information about a Rivet Ray.
      operationId: cloud_logs_getRayPerfLogs
      parameters:
      - in: path
        name: ray_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetRayPerfLogsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudLogs
  /cloud/region-tiers:
    get:
      description: Returns all available region tiers.
      operationId: cloud_tiers_getRegionTiers
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudGetRegionTiersResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudTiers
  /cloud/uploads/{upload_id}/complete:
    post:
      description: Marks an upload as complete.
      operationId: cloud_uploads_completeUpload
      parameters:
      - in: path
        name: upload_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - CloudUploads
  /cluster/server_ips:
    get:
      operationId: admin_cluster_getServerIps
      parameters:
      - in: query
        name: server_id
        required: false
        schema:
          format: uuid
          type: string
      - in: query
        name: pool
        required: false
        schema:
          $ref: '#/components/schemas/AdminPoolType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminClusterGetServerIpsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - AdminCluster
  /group/groups:
    get:
      description: Returns a list of suggested groups.
      operationId: group_listSuggested
      parameters:
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListSuggestedResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
    post:
      description: Creates a new group.
      operationId: group_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreateResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/avatar-upload/prepare:
    post:
      description: 'Prepares an avatar image upload.

        Complete upload with `rivet.api.group#CompleteAvatarUpload`.'
      operationId: group_prepareAvatarUpload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPrepareAvatarUploadRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPrepareAvatarUploadResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/profile/validate:
    post:
      description: Validate contents of group profile. Use to provide immediate feedback
        on profile changes before committing them.
      operationId: group_validateProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupValidateProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupValidateProfileResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/search:
    get:
      description: Fuzzy search for groups.
      operationId: group_search
      parameters:
      - description: The query to match group display names against.
        in: query
        name: query
        required: true
        schema:
          type: string
      - in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Unsigned 32 bit integer.
        in: query
        name: limit
        required: false
        schema:
          format: double
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSearchResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/avatar-upload/{upload_id}/complete:
    post:
      description: 'Completes an avatar image upload. Must be called after the file
        upload

        process completes.

        Call `rivet.api.group#PrepareAvatarUpload` first.'
      operationId: group_completeAvatarUpload
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: upload_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/bans:
    get:
      description: Returns a group's bans. Must have valid permissions to view.
      operationId: group_getBans
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: The pagination anchor. Set to the returned anchor of this endpoint
          to receive the next set of items.
        in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Amount of bans to return.
        in: query
        name: count
        required: false
        schema:
          format: double
          type: number
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetBansResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/bans/{identity_id}:
    delete:
      description: Unbans an identity from a group. Must be the owner of the group
        to perform this action.
      operationId: group_unbanIdentity
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
    post:
      description: Bans an identity from a group. Must be the owner of the group to
        perform this action. The banned identity will no longer be able to create
        a join request or use a group invite.
      operationId: group_banIdentity
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/invites:
    post:
      description: Creates a group invite. Can be shared with other identities to
        let them join this group.
      operationId: group_invites_createInvite
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateInviteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreateInviteResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - GroupInvites
  /group/groups/{group_id}/join-request:
    post:
      description: Requests to join a group.
      operationId: group_joinRequests_createJoinRequest
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - GroupJoinRequests
  /group/groups/{group_id}/join-request/{identity_id}:
    post:
      description: Resolves a join request for a given group.
      operationId: group_joinRequests_resolveJoinRequest
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupResolveJoinRequestRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - GroupJoinRequests
  /group/groups/{group_id}/join-requests:
    get:
      description: Returns a group's join requests. Must have valid permissions to
        view.
      operationId: group_getJoinRequests
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: The pagination anchor. Set to the returned anchor of this endpoint
          to receive the next set of items.
        in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Amount of join requests to return.
        in: query
        name: count
        required: false
        schema:
          format: double
          type: number
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetJoinRequestsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/kick/{identity_id}:
    post:
      description: Kicks an identity from a group. Must be the owner of the group
        to perform this action.
      operationId: group_kickMember
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/leave:
    post:
      description: Leaves a group.
      operationId: group_leave
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/members:
    get:
      description: Returns a group's members.
      operationId: group_getMembers
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: The pagination anchor. Set to the returned anchor of this endpoint
          to receive the next set of items.
        in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Amount of members to return.
        in: query
        name: count
        required: false
        schema:
          format: double
          type: number
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetMembersResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/profile:
    get:
      description: Returns a group profile.
      operationId: group_getProfile
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetProfileResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
    post:
      operationId: group_updateProfile
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateProfileRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/summary:
    get:
      operationId: group_getSummary
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetSummaryResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/groups/{group_id}/transfer-owner:
    post:
      description: Transfers ownership of a group to another identity.
      operationId: group_transferOwnership
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupTransferOwnershipRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Group
  /group/invites/{group_invite_code}:
    get:
      description: Inspects a group invite returning information about the team that
        created it.
      operationId: group_invites_getInvite
      parameters:
      - description: Provided by `rivet.api.group#CreateInviteResponse$code`.
        in: path
        name: group_invite_code
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetInviteResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - GroupInvites
  /group/invites/{group_invite_code}/consume:
    post:
      description: Consumes a group invite to join a group.
      operationId: group_invites_consumeInvite
      parameters:
      - description: Provided by `rivet.api.group#CreateInviteResponse$code`.
        in: path
        name: group_invite_code
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupConsumeInviteResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - GroupInvites
  /identity/activities:
    get:
      description: Returns an overview of all players currently online or in game.
      operationId: identity_activities_list
      parameters:
      - in: query
        name: watch_index
        required: false
        schema:
          $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListActivitiesResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - IdentityActivities
  /identity/events/live:
    get:
      description: Returns all events relative to the current identity.
      operationId: identity_events_watch
      parameters:
      - in: query
        name: watch_index
        required: false
        schema:
          $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityWatchEventsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - IdentityEvents
  /identity/game-links:
    get:
      description: Returns the current status of a linking process. Once `status`
        is `complete`, the identity's profile should be fetched again since they may
        have switched accounts.
      operationId: identity_links_get
      parameters:
      - in: query
        name: identity_link_token
        required: true
        schema:
          $ref: '#/components/schemas/Jwt'
      - in: query
        name: watch_index
        required: false
        schema:
          $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetGameLinkResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - IdentityLinks
    post:
      description: 'Begins the process for linking an identity with the Rivet Hub.


        # Importance of Linking Identities


        When an identity is created via `rivet.api.identity#SetupIdentity`, the identity
        is temporary

        and is not shared with other games the user plays.

        In order to make the identity permanent and synchronize the identity with

        other games, the identity must be linked with the hub.


        # Linking Process


        The linking process works by opening `identity_link_url` in a browser then
        polling

        `rivet.api.identity#GetGameLink` to wait for it to complete.

        This is designed to be as flexible as possible so `identity_link_url` can
        be opened

        on any device. For example, when playing a console game, the user can scan
        a

        QR code for `identity_link_url` to authenticate on their phone.'
      operationId: identity_links_prepare
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityPrepareGameLinkResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - IdentityLinks
  /identity/game-links/cancel:
    post:
      description: Cancels a game link. It can no longer be used to link after cancellation.
      operationId: identity_links_cancel
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityCancelGameLinkRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - IdentityLinks
  /identity/game-links/complete:
    post:
      description: Completes a game link process and returns whether or not the link
        is valid.
      operationId: identity_links_complete
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityCompleteGameLinkRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - IdentityLinks
  /identity/identities:
    post:
      description: 'Gets or creates an identity.

        Passing an existing identity token in the body refreshes the token.

        Temporary Accounts

        Until the identity is linked with the Rivet Hub (see `PrepareGameLink`), this
        identity will be temporary but still behave like all other identities.

        This is intended to allow users to play the game without signing up while
        still having the benefits of having an account. When they are ready to save
        their account, they should be instructed to link their account (see `PrepareGameLink`).

        Storing Token

        `identity_token` should be stored in some form of persistent storage. The
        token should be read from storage and passed to `Setup` every time the client
        starts.'
      operationId: identity_setup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                existing_identity_token:
                  $ref: '#/components/schemas/Jwt'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySetupResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/avatar-upload/prepare:
    post:
      description: Prepares an avatar image upload. Complete upload with `CompleteIdentityAvatarUpload`.
      operationId: identity_prepareAvatarUpload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content_length:
                  format: int64
                  type: integer
                mime:
                  description: See https://www.iana.org/assignments/media-types/media-types.xhtml
                  type: string
                path:
                  type: string
              required:
              - path
              - mime
              - content_length
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityPrepareAvatarUploadResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/avatar-upload/{upload_id}/complete:
    post:
      description: Completes an avatar image upload. Must be called after the file
        upload process completes.
      operationId: identity_completeAvatarUpload
      parameters:
      - in: path
        name: upload_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/batch/handle:
    get:
      description: Fetches a list of identity handles.
      operationId: identity_getHandles
      parameters:
      - in: query
        name: identity_ids
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetHandlesResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/batch/summary:
    get:
      description: Fetches a list of identity summaries.
      operationId: identity_getSummaries
      parameters:
      - in: query
        name: identity_ids
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetSummariesResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/identities/self/status:
    post:
      description: Updates the current identity's status.
      operationId: identity_updateStatus
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  $ref: '#/components/schemas/IdentityStatus'
              required:
              - status
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/search:
    get:
      description: Fuzzy search for identities.
      operationId: identity_search
      parameters:
      - description: The query to match identity display names and account numbers
          against.
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: How many identities to offset the search by.
        in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Amount of identities to return. Must be between 1 and 32 inclusive.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySearchResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/self/activity:
    delete:
      description: Removes the current identity's game activity.
      operationId: identity_removeGameActivity
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
    post:
      description: Sets the current identity's game activity. This activity will automatically
        be removed when the identity goes offline.
      operationId: identity_setGameActivity
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                game_activity:
                  $ref: '#/components/schemas/IdentityUpdateGameActivity'
              required:
              - game_activity
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/self/beta-signup:
    post:
      description: Completes an avatar image upload. Must be called after the file
        upload process completes.
      operationId: identity_signupForBeta
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                company_name:
                  type: string
                company_size:
                  type: string
                goals:
                  type: string
                name:
                  type: string
                preferred_tools:
                  type: string
              required:
              - name
              - company_size
              - preferred_tools
              - goals
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/self/delete-request:
    delete:
      operationId: identity_unmarkDeletion
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
    post:
      operationId: identity_markDeletion
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/self/friends:
    get:
      operationId: identity_listFriends
      parameters:
      - in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Range is between 1 and 32 (inclusive).
        in: query
        name: limit
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListFriendsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/self/profile:
    get:
      description: Fetches the current identity's profile.
      operationId: identity_getSelfProfile
      parameters:
      - in: query
        name: watch_index
        required: false
        schema:
          $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetProfileResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
    post:
      description: Updates profile of the current identity.
      operationId: identity_updateProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account_number:
                  $ref: '#/components/schemas/AccountNumber'
                bio:
                  $ref: '#/components/schemas/Bio'
                display_name:
                  $ref: '#/components/schemas/DisplayName'
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/self/profile/validate:
    post:
      description: Validate contents of identity profile. Use to provide immediate
        feedback on profile changes before committing them.
      operationId: identity_validateProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account_number:
                  $ref: '#/components/schemas/AccountNumber'
                bio:
                  $ref: '#/components/schemas/Bio'
                display_name:
                  $ref: '#/components/schemas/DisplayName'
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/self/recent-followers:
    get:
      operationId: identity_listRecentFollowers
      parameters:
      - in: query
        name: count
        required: false
        schema:
          type: integer
      - in: query
        name: watch_index
        required: false
        schema:
          $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListRecentFollowersResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/self/recent-followers/{identity_id}/ignore:
    post:
      operationId: identity_ignoreRecentFollower
      parameters:
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/{identity_id}/follow:
    delete:
      description: Unfollows the given identity.
      operationId: identity_unfollow
      parameters:
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
    post:
      description: Follows the given identity. In order for identities to be "friends",
        the other identity has to also follow this identity.
      operationId: identity_follow
      parameters:
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/{identity_id}/followers:
    get:
      operationId: identity_listFollowers
      parameters:
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Range is between 1 and 32 (inclusive).
        in: query
        name: limit
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListFollowersResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/{identity_id}/following:
    get:
      operationId: identity_listFollowing
      parameters:
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Range is between 1 and 32 (inclusive).
        in: query
        name: limit
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListFollowingResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/{identity_id}/mutual-friends:
    get:
      operationId: identity_listMutualFriends
      parameters:
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: anchor
        required: false
        schema:
          type: string
      - description: Range is between 1 and 32 (inclusive).
        in: query
        name: limit
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityListMutualFriendsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/{identity_id}/profile:
    get:
      description: Fetches an identity profile.
      operationId: identity_getProfile
      parameters:
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      - in: query
        name: watch_index
        required: false
        schema:
          $ref: '#/components/schemas/WatchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityGetProfileResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /identity/identities/{identity_id}/report:
    post:
      description: Creates an abuse report for an identity.
      operationId: identity_report
      parameters:
      - in: path
        name: identity_id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reason:
                  type: string
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Identity
  /job/runs/cleanup:
    post:
      operationId: job_run_cleanup
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - JobRun
  /kv/entries:
    delete:
      description: Deletes a key-value entry by key.
      operationId: kv_delete
      parameters:
      - in: query
        name: key
        required: true
        schema:
          $ref: '#/components/schemas/KvKey'
      - in: query
        name: namespace_id
        required: false
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Kv
    get:
      description: Returns a specific key-value entry by key.
      operationId: kv_get
      parameters:
      - in: query
        name: key
        required: true
        schema:
          $ref: '#/components/schemas/KvKey'
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      - in: query
        name: namespace_id
        required: false
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvGetResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Kv
    put:
      description: Puts (sets or overwrites) a key-value entry by key.
      operationId: kv_put
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KvPutRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Kv
  /kv/entries/batch:
    delete:
      description: Deletes multiple key-value entries by key(s).
      operationId: kv_deleteBatch
      parameters:
      - in: query
        name: keys
        required: true
        schema:
          $ref: '#/components/schemas/KvKey'
      - in: query
        name: namespace_id
        required: false
        schema:
          format: uuid
          type: string
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Kv
    get:
      description: Gets multiple key-value entries by key(s).
      operationId: kv_getBatch
      parameters:
      - in: query
        name: keys
        required: true
        schema:
          $ref: '#/components/schemas/KvKey'
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      - in: query
        name: namespace_id
        required: false
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvGetBatchResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Kv
    put:
      description: Puts (sets or overwrites) multiple key-value entries by key(s).
      operationId: kv_putBatch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KvPutBatchRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Kv
  /kv/entries/list:
    get:
      description: Lists all keys in a directory.
      operationId: kv_list
      parameters:
      - in: query
        name: directory
        required: true
        schema:
          $ref: '#/components/schemas/KvDirectory'
      - in: query
        name: namespace_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvListResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Kv
  /matchmaker/lobbies/closed:
    put:
      description: 'If `is_closed` is `true`, the matchmaker will no longer route
        players to the lobby. Players can still

        join using the /join endpoint (this can be disabled by the developer by rejecting
        all new connections

        after setting the lobby to closed).

        Does not shutdown the lobby.


        This endpoint requires a [lobby token](/docs/general/concepts/token-types#matchmaker-lobby)
        for

        authentication, or a [development namespace token](/docs/general/concepts/token-types#namespace-development)

        for mock responses. When running on Rivet servers, you can access the given
        lobby token from the

        [`RIVET_TOKEN`](/docs/matchmaker/concepts/lobby-env) environment variable.'
      operationId: matchmaker_lobbies_setClosed
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                is_closed:
                  type: boolean
              required:
              - is_closed
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerLobbies
  /matchmaker/lobbies/create:
    post:
      description: 'Creates a custom lobby.


        When [tokenless authentication](/docs/general/concepts/tokenless-authentication/web)
        is enabled in

        your game namespace, this endpoint does not require a token to authenticate.
        Otherwise, a

        [development namespace token](/docs/general/concepts/token-types#namespace-development)
        can be used

        for mock responses and a [public namespace token](/docs/general/concepts/token-types#namespace-public)

        can be used for general authentication.'
      operationId: matchmaker_lobbies_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                captcha:
                  $ref: '#/components/schemas/CaptchaConfig'
                game_mode:
                  type: string
                lobby_config: {}
                max_players:
                  type: integer
                publicity:
                  $ref: '#/components/schemas/MatchmakerCustomLobbyPublicity'
                region:
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  type: object
                verification_data: {}
              required:
              - game_mode
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerCreateLobbyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerLobbies
  /matchmaker/lobbies/find:
    post:
      description: 'Finds a lobby based on the given criteria.

        If a lobby is not found and `prevent_auto_create_lobby` is `false`,

        a new lobby will be created.


        When [tokenless authentication](/docs/general/concepts/tokenless-authentication/web)
        is enabled in

        your game namespace, this endpoint does not require a token to authenticate.
        Otherwise, a

        [development namespace token](/docs/general/concepts/token-types#namespace-development)
        can be used

        for mock responses and a [public namespace token](/docs/general/concepts/token-types#namespace-public)

        can be used for general authentication.'
      operationId: matchmaker_lobbies_find
      parameters:
      - in: header
        name: origin
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                captcha:
                  $ref: '#/components/schemas/CaptchaConfig'
                game_modes:
                  items:
                    type: string
                  type: array
                max_players:
                  type: integer
                prevent_auto_create_lobby:
                  type: boolean
                regions:
                  items:
                    type: string
                  type: array
                tags:
                  additionalProperties:
                    type: string
                  type: object
                verification_data: {}
              required:
              - game_modes
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerFindLobbyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerLobbies
  /matchmaker/lobbies/join:
    post:
      description: 'Joins a specific lobby.

        This request will use the direct player count configured for the

        lobby group.


        When [tokenless authentication](/docs/general/concepts/tokenless-authentication/web)
        is enabled in

        your game namespace, this endpoint does not require a token to authenticate.
        Otherwise, a

        [development namespace token](/docs/general/concepts/token-types#namespace-development)
        can be used

        for mock responses and a [public namespace token](/docs/general/concepts/token-types#namespace-public)

        can be used for general authentication.'
      operationId: matchmaker_lobbies_join
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                captcha:
                  $ref: '#/components/schemas/CaptchaConfig'
                lobby_id:
                  type: string
                verification_data: {}
              required:
              - lobby_id
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerJoinLobbyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerLobbies
  /matchmaker/lobbies/list:
    get:
      description: 'Lists all open lobbies.


        When [tokenless authentication](/docs/general/concepts/tokenless-authentication/web)
        is enabled in

        your game namespace, this endpoint does not require a token to authenticate.
        Otherwise, a

        [development namespace token](/docs/general/concepts/token-types#namespace-development)
        can be used

        for mock responses and a [public namespace token](/docs/general/concepts/token-types#namespace-public)

        can be used for general authentication.'
      operationId: matchmaker_lobbies_list
      parameters:
      - in: query
        name: include_state
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerListLobbiesResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerLobbies
  /matchmaker/lobbies/ready:
    post:
      description: 'Marks the current lobby as ready to accept connections. Players
        will not be able to connect to this lobby until the lobby is flagged as ready.

        This endpoint requires a [lobby token](/docs/general/concepts/token-types#matchmaker-lobby)
        for authentication, or a [development namespace token](/docs/general/concepts/token-types#namespace-development)
        for mock responses. When running on Rivet servers, you can access the given
        lobby token from the [`RIVET_TOKEN`](/docs/matchmaker/concepts/lobby-env)
        environment variable.'
      operationId: matchmaker_lobbies_ready
      parameters: []
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerLobbies
  /matchmaker/lobbies/state:
    put:
      description: 'Sets the state JSON of the current lobby.


        This endpoint requires a [lobby token](/docs/general/concepts/token-types#matchmaker-lobby)
        for

        authentication, or a [development namespace token](/docs/general/concepts/token-types#namespace-development)

        for mock responses. When running on Rivet servers, you can access the given
        lobby token from the

        [`RIVET_TOKEN`](/docs/matchmaker/concepts/lobby-env) environment variable.'
      operationId: matchmaker_lobbies_setState
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
        required: false
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerLobbies
  /matchmaker/lobbies/{lobby_id}/state:
    get:
      description: 'Get the state of any lobby.


        This endpoint requires a [lobby token](/docs/general/concepts/token-types#matchmaker-lobby)
        for

        authentication, or a [development namespace token](/docs/general/concepts/token-types#namespace-development)

        for mock responses. When running on Rivet servers, you can access the given
        lobby token from the

        [`RIVET_TOKEN`](/docs/matchmaker/concepts/lobby-env) environment variable.'
      operationId: matchmaker_lobbies_getState
      parameters:
      - in: path
        name: lobby_id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerLobbies
  /matchmaker/players/connected:
    post:
      description: 'Validates the player token is valid and has not already been consumed
        then

        marks the player as connected.


        # Player Tokens and Reserved Slots


        Player tokens reserve a spot in the lobby until they expire. This allows for

        precise matchmaking up to exactly the lobby''s player limit, which is

        important for games with small lobbies and a high influx of players.

        By calling this endpoint with the player token, the player''s spot is marked

        as connected and will not expire. If this endpoint is never called, the

        player''s token will expire and this spot will be filled by another player.


        # Anti-Botting


        Player tokens are only issued by caling `lobbies.join`, calling `lobbies.find`,
        or

        from the `GlobalEventMatchmakerLobbyJoin` event.

        These endpoints have anti-botting measures (i.e. enforcing max player

        limits, captchas, and detecting bots), so valid player tokens provide some

        confidence that the player is not a bot.

        Therefore, it''s important to make sure the token is valid by waiting for

        this endpoint to return OK before allowing the connected socket to do

        anything else. If this endpoint returns an error, the socket should be

        disconnected immediately.


        # How to Transmit the Player Token


        The client is responsible for acquiring the player token by caling

        `lobbies.join`, calling `lobbies.find`, or from the `GlobalEventMatchmakerLobbyJoin`

        event. Beyond that, it''s up to the developer how the player token is

        transmitted to the lobby.

        If using WebSockets, the player token can be transmitted as a query

        parameter.

        Otherwise, the player token will likely be automatically sent by the client

        once the socket opens. As mentioned above, nothing else should happen until

        the player token is validated.'
      operationId: matchmaker_players_connected
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                player_token:
                  type: string
              required:
              - player_token
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerPlayers
  /matchmaker/players/disconnected:
    post:
      description: 'Marks a player as disconnected. # Ghost Players If players are
        not marked as disconnected, lobbies will result with "ghost players" that
        the matchmaker thinks exist but are no longer connected to the lobby.'
      operationId: matchmaker_players_disconnected
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                player_token:
                  type: string
              required:
              - player_token
              type: object
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerPlayers
  /matchmaker/players/statistics:
    get:
      description: Gives matchmaker statistics about the players in game.
      operationId: matchmaker_players_getStatistics
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerGetStatisticsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerPlayers
  /matchmaker/regions:
    get:
      description: 'Returns a list of regions available to this namespace.

        Regions are sorted by most optimal to least optimal. The player''s IP address

        is used to calculate the regions'' optimality.'
      operationId: matchmaker_regions_list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakerListRegionsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - MatchmakerRegions
  /module/modules/{module}/scripts/{script}/call:
    post:
      description: Makes a request to a module's script.
      operationId: module_call
      parameters:
      - in: path
        name: module
        required: true
        schema:
          type: string
      - in: path
        name: script
        required: true
        schema:
          type: string
      - in: header
        name: origin
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data: {}
                namespace_id:
                  format: uuid
                  type: string
              required:
              - data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleCallResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - Module
  /portal/games/{game_name_id}/profile:
    get:
      description: Returns a game profile.
      operationId: portal_games_getGameProfile
      parameters:
      - description: A human readable short identifier used to references resources.
          Different than a `rivet.common#Uuid` because this is intended to be human
          readable. Different than `rivet.common#DisplayName` because this should
          not include special characters and be short.
        in: path
        name: game_name_id
        required: true
        schema:
          type: string
      - description: A query parameter denoting the requests watch index.
        in: query
        name: watch_index
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalGetGameProfileResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - PortalGames
  /portal/notifications/register:
    delete:
      description: Unregister push notification for the current identity.
      operationId: portal_notifications_unregisterNotifications
      parameters:
      - description: Represents a value for which notification service to unregister.
        in: query
        name: service
        required: true
        schema:
          $ref: '#/components/schemas/PortalNotificationUnregisterService'
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - PortalNotifications
    post:
      description: Registers push notifications for the current identity.
      operationId: portal_notifications_registerNotifications
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalRegisterNotificationsRequest'
        required: true
      responses:
        '204':
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - PortalNotifications
  /servers/{ip}/info:
    get:
      operationId: provision_servers_getServerInfo
      parameters:
      - in: path
        name: ip
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionServersGetServerInfoResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
          description: ''
      security: *id001
      tags:
      - ProvisionServers
servers:
- description: Production
  url: https://api.rivet.gg
