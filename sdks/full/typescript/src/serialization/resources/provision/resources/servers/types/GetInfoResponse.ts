/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";

export const GetInfoResponse: core.serialization.ObjectSchema<
    serializers.provision.servers.GetInfoResponse.Raw,
    Rivet.provision.servers.GetInfoResponse
> = core.serialization.object({
    name: core.serialization.string(),
    serverId: core.serialization.property("server_id", core.serialization.string()),
    datacenterId: core.serialization.property("datacenter_id", core.serialization.string()),
    clusterId: core.serialization.property("cluster_id", core.serialization.string()),
    vlanIp: core.serialization.property("vlan_ip", core.serialization.string()),
    publicIp: core.serialization.property("public_ip", core.serialization.string()),
});

export declare namespace GetInfoResponse {
    interface Raw {
        name: string;
        server_id: string;
        datacenter_id: string;
        cluster_id: string;
        vlan_ip: string;
        public_ip: string;
    }
}
