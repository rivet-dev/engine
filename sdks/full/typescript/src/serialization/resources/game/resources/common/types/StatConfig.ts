/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { StatFormatMethod } from "./StatFormatMethod";
import { StatAggregationMethod } from "./StatAggregationMethod";
import { StatSortingMethod } from "./StatSortingMethod";
import { DisplayName } from "../../../../common/types/DisplayName";

export const StatConfig: core.serialization.ObjectSchema<serializers.game.StatConfig.Raw, Rivet.game.StatConfig> =
    core.serialization.object({
        recordId: core.serialization.property("record_id", core.serialization.string()),
        iconId: core.serialization.property("icon_id", core.serialization.string()),
        format: StatFormatMethod,
        aggregation: StatAggregationMethod,
        sorting: StatSortingMethod,
        priority: core.serialization.number(),
        displayName: core.serialization.property("display_name", DisplayName),
        postfixSingular: core.serialization.property("postfix_singular", core.serialization.string().optional()),
        postfixPlural: core.serialization.property("postfix_plural", core.serialization.string().optional()),
        prefixSingular: core.serialization.property("prefix_singular", core.serialization.string().optional()),
        prefixPlural: core.serialization.property("prefix_plural", core.serialization.string().optional()),
    });

export declare namespace StatConfig {
    interface Raw {
        record_id: string;
        icon_id: string;
        format: StatFormatMethod.Raw;
        aggregation: StatAggregationMethod.Raw;
        sorting: StatSortingMethod.Raw;
        priority: number;
        display_name: DisplayName.Raw;
        postfix_singular?: string | null;
        postfix_plural?: string | null;
        prefix_singular?: string | null;
        prefix_plural?: string | null;
    }
}
