/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Identifier } from "../../../../common/types/Identifier";
import { GameModeStatistics } from "./GameModeStatistics";

export const GetStatisticsResponse: core.serialization.ObjectSchema<
    serializers.matchmaker.GetStatisticsResponse.Raw,
    Rivet.matchmaker.GetStatisticsResponse
> = core.serialization.object({
    playerCount: core.serialization.property("player_count", core.serialization.number()),
    gameModes: core.serialization.property("game_modes", core.serialization.record(Identifier, GameModeStatistics)),
});

export declare namespace GetStatisticsResponse {
    interface Raw {
        player_count: number;
        game_modes: Record<Identifier.Raw, GameModeStatistics.Raw>;
    }
}
