/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../../index";
import * as Rivet from "../../../../../../../../../../api/index";
import * as core from "../../../../../../../../../../core";
import { PortRange } from "../../common/types/PortRange";
import { PortProtocol } from "../../common/types/PortProtocol";

export const LobbyGroupRuntimeDockerPort: core.serialization.ObjectSchema<
    serializers.cloud.version.matchmaker.LobbyGroupRuntimeDockerPort.Raw,
    Rivet.cloud.version.matchmaker.LobbyGroupRuntimeDockerPort
> = core.serialization.object({
    label: core.serialization.string(),
    targetPort: core.serialization.property("target_port", core.serialization.number().optional()),
    portRange: core.serialization.property("port_range", PortRange.optional()),
    proxyProtocol: core.serialization.property("proxy_protocol", PortProtocol),
});

export declare namespace LobbyGroupRuntimeDockerPort {
    interface Raw {
        label: string;
        target_port?: number | null;
        port_range?: PortRange.Raw | null;
        proxy_protocol: PortProtocol.Raw;
    }
}
