/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../../index";
import * as Rivet from "../../../../../../../../../../api/index";
import * as core from "../../../../../../../../../../core";
import { GameModeFindConfig } from "./GameModeFindConfig";
import { GameModeJoinConfig } from "./GameModeJoinConfig";
import { GameModeCreateConfig } from "./GameModeCreateConfig";

export const GameModeActions: core.serialization.ObjectSchema<
    serializers.cloud.version.matchmaker.GameModeActions.Raw,
    Rivet.cloud.version.matchmaker.GameModeActions
> = core.serialization.object({
    find: GameModeFindConfig.optional(),
    join: GameModeJoinConfig.optional(),
    create: GameModeCreateConfig.optional(),
});

export declare namespace GameModeActions {
    interface Raw {
        find?: GameModeFindConfig.Raw | null;
        join?: GameModeJoinConfig.Raw | null;
        create?: GameModeCreateConfig.Raw | null;
    }
}
