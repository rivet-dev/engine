/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Timestamp } from "../../../../common/types/Timestamp";

export const LogsPerfMark: core.serialization.ObjectSchema<
    serializers.cloud.LogsPerfMark.Raw,
    Rivet.cloud.LogsPerfMark
> = core.serialization.object({
    label: core.serialization.string(),
    ts: Timestamp,
    rayId: core.serialization.property("ray_id", core.serialization.string().optional()),
    reqId: core.serialization.property("req_id", core.serialization.string().optional()),
});

export declare namespace LogsPerfMark {
    interface Raw {
        label: string;
        ts: Timestamp.Raw;
        ray_id?: string | null;
        req_id?: string | null;
    }
}
