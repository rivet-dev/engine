/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../../index";
import * as Rivet from "../../../../../../../../../../api/index";
import * as core from "../../../../../../../../../../core";
import { LogsLobbySummary } from "../../../../../../common/types/LogsLobbySummary";
import { SvcMetrics } from "../../../../../../common/types/SvcMetrics";
import { SvcPerf } from "../../../../../../common/types/SvcPerf";

export const GetNamespaceLobbyResponse: core.serialization.ObjectSchema<
    serializers.cloud.games.namespaces.GetNamespaceLobbyResponse.Raw,
    Rivet.cloud.games.namespaces.GetNamespaceLobbyResponse
> = core.serialization.object({
    lobby: LogsLobbySummary,
    metrics: SvcMetrics.optional(),
    stdoutPresignedUrls: core.serialization.property(
        "stdout_presigned_urls",
        core.serialization.list(core.serialization.string())
    ),
    stderrPresignedUrls: core.serialization.property(
        "stderr_presigned_urls",
        core.serialization.list(core.serialization.string())
    ),
    perfLists: core.serialization.property("perf_lists", core.serialization.list(SvcPerf)),
});

export declare namespace GetNamespaceLobbyResponse {
    interface Raw {
        lobby: LogsLobbySummary.Raw;
        metrics?: SvcMetrics.Raw | null;
        stdout_presigned_urls: string[];
        stderr_presigned_urls: string[];
        perf_lists: SvcPerf.Raw[];
    }
}
