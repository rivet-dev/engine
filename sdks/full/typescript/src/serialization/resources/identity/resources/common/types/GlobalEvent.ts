/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Timestamp } from "../../../../common/types/Timestamp";
import { GlobalEventKind } from "./GlobalEventKind";
import { GlobalEventNotification } from "./GlobalEventNotification";

export const GlobalEvent: core.serialization.ObjectSchema<
    serializers.identity.GlobalEvent.Raw,
    Rivet.identity.GlobalEvent
> = core.serialization.object({
    ts: Timestamp,
    kind: GlobalEventKind,
    notification: GlobalEventNotification.optional(),
});

export declare namespace GlobalEvent {
    interface Raw {
        ts: Timestamp.Raw;
        kind: GlobalEventKind.Raw;
        notification?: GlobalEventNotification.Raw | null;
    }
}
