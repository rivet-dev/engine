/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Rivet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { PoolUpdate as admin_clusters_common$$poolUpdate } from "../../common/types/PoolUpdate";
import { admin } from "../../../../../../index";

export const UpdateDatacenterRequest: core.serialization.ObjectSchema<
    serializers.admin.clusters.UpdateDatacenterRequest.Raw,
    Rivet.admin.clusters.UpdateDatacenterRequest
> = core.serialization.object({
    pools: core.serialization.list(admin_clusters_common$$poolUpdate),
    prebakesEnabled: core.serialization.property("prebakes_enabled", core.serialization.boolean().optional()),
});

export declare namespace UpdateDatacenterRequest {
    interface Raw {
        pools: admin.clusters.PoolUpdate.Raw[];
        prebakes_enabled?: boolean | null;
    }
}
