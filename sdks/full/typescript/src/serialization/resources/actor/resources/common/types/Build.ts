/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Timestamp as common$$timestamp } from "../../../../common/types/Timestamp";
import { common } from "../../../../index";

export const Build: core.serialization.ObjectSchema<serializers.actor.Build.Raw, Rivet.actor.Build> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        createdAt: core.serialization.property("created_at", common$$timestamp),
        contentLength: core.serialization.property("content_length", core.serialization.number()),
        tags: core.serialization.record(core.serialization.string(), core.serialization.string()),
    });

export declare namespace Build {
    interface Raw {
        id: string;
        name: string;
        created_at: common.Timestamp.Raw;
        content_length: number;
        tags: Record<string, string>;
    }
}
