/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Runtime } from "./Runtime";
import { Network } from "./Network";
import { Resources } from "./Resources";
import { Lifecycle } from "./Lifecycle";

export const Actor: core.serialization.ObjectSchema<serializers.actor.Actor.Raw, Rivet.actor.Actor> =
    core.serialization.object({
        id: core.serialization.string(),
        region: core.serialization.string(),
        tags: core.serialization.unknown(),
        runtime: Runtime,
        network: Network,
        resources: Resources,
        lifecycle: Lifecycle,
        createdAt: core.serialization.property("created_at", core.serialization.number()),
        startedAt: core.serialization.property("started_at", core.serialization.number().optional()),
        destroyedAt: core.serialization.property("destroyed_at", core.serialization.number().optional()),
    });

export declare namespace Actor {
    interface Raw {
        id: string;
        region: string;
        tags?: unknown;
        runtime: Runtime.Raw;
        network: Network.Raw;
        resources: Resources.Raw;
        lifecycle: Lifecycle.Raw;
        created_at: number;
        started_at?: number | null;
        destroyed_at?: number | null;
    }
}
