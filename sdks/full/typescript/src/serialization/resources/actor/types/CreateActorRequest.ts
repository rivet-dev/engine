/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { CreateActorRuntimeRequest as actor$$createActorRuntimeRequest } from "./CreateActorRuntimeRequest";
import { CreateActorNetworkRequest as actor$$createActorNetworkRequest } from "./CreateActorNetworkRequest";
import { Resources as actor_common$$resources } from "../resources/common/types/Resources";
import { Lifecycle as actor_common$$lifecycle } from "../resources/common/types/Lifecycle";
import { actor } from "../../index";

export const CreateActorRequest: core.serialization.ObjectSchema<
    serializers.actor.CreateActorRequest.Raw,
    Rivet.actor.CreateActorRequest
> = core.serialization.object({
    datacenter: core.serialization.string(),
    tags: core.serialization.unknown(),
    runtime: actor$$createActorRuntimeRequest,
    network: actor$$createActorNetworkRequest,
    resources: actor_common$$resources,
    lifecycle: actor_common$$lifecycle.optional(),
});

export declare namespace CreateActorRequest {
    interface Raw {
        datacenter: string;
        tags?: unknown;
        runtime: actor.CreateActorRuntimeRequest.Raw;
        network: actor.CreateActorNetworkRequest.Raw;
        resources: actor.Resources.Raw;
        lifecycle?: actor.Lifecycle.Raw | null;
    }
}
