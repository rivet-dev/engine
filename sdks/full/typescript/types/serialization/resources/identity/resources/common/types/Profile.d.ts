/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { common, identity, game } from "../../../../index";
export declare const Profile: core.serialization.ObjectSchema<serializers.identity.Profile.Raw, Rivet.identity.Profile>;
export declare namespace Profile {
    interface Raw {
        identity_id: string;
        display_name: common.DisplayName.Raw;
        account_number: common.AccountNumber.Raw;
        avatar_url: string;
        is_registered: boolean;
        external: identity.ExternalLinks.Raw;
        is_admin: boolean;
        is_game_linked?: boolean | null;
        dev_state?: identity.DevState.Raw | null;
        follower_count: number;
        following_count: number;
        following: boolean;
        is_following_me: boolean;
        is_mutual_following: boolean;
        join_ts: common.Timestamp.Raw;
        bio: common.Bio.Raw;
        linked_accounts: identity.LinkedAccount.Raw[];
        groups: identity.Group.Raw[];
        games: game.StatSummary.Raw[];
        awaiting_deletion?: boolean | null;
    }
}
