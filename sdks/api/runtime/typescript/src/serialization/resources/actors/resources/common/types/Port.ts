/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { PortProtocol } from "./PortProtocol";
import { PortRouting } from "./PortRouting";

export const Port: core.serialization.ObjectSchema<serializers.actors.Port.Raw, Rivet.actors.Port> =
    core.serialization.object({
        protocol: PortProtocol,
        internalPort: core.serialization.property("internal_port", core.serialization.number().optional()),
        hostname: core.serialization.string().optional(),
        port: core.serialization.number().optional(),
        path: core.serialization.string().optional(),
        url: core.serialization.string().optional(),
        routing: PortRouting,
    });

export declare namespace Port {
    export interface Raw {
        protocol: PortProtocol.Raw;
        internal_port?: number | null;
        hostname?: string | null;
        port?: number | null;
        path?: string | null;
        url?: string | null;
        routing: PortRouting.Raw;
    }
}
