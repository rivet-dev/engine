/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { ErrorMetadata } from "./ErrorMetadata";

export const ErrorBody: core.serialization.ObjectSchema<serializers.ErrorBody.Raw, Rivet.ErrorBody> =
    core.serialization.object({
        code: core.serialization.string(),
        message: core.serialization.string(),
        rayId: core.serialization.property("ray_id", core.serialization.string()),
        documentation: core.serialization.string().optional(),
        metadata: ErrorMetadata.optional(),
    });

export declare namespace ErrorBody {
    interface Raw {
        code: string;
        message: string;
        ray_id: string;
        documentation?: string | null;
        metadata?: (ErrorMetadata.Raw | undefined) | null;
    }
}
