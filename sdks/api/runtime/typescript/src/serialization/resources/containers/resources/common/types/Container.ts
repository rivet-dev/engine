/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Id } from "../../../../common/types/Id";
import { Port } from "./Port";
import { Resources } from "../../../../builds/resources/common/types/Resources";
import { Timestamp } from "../../../../common/types/Timestamp";

export const Container: core.serialization.ObjectSchema<
    serializers.containers.Container.Raw,
    Rivet.containers.Container
> = core.serialization.object({
    id: Id,
    region: core.serialization.string(),
    tags: core.serialization.unknown(),
    build: core.serialization.string(),
    arguments: core.serialization.list(core.serialization.string()).optional(),
    environment: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    ports: core.serialization.record(core.serialization.string(), Port),
    resources: Resources,
    killTimeout: core.serialization.property("kill_timeout", core.serialization.number().optional()),
    durable: core.serialization.boolean().optional(),
    createdAt: core.serialization.property("created_at", Timestamp),
    startedAt: core.serialization.property("started_at", Timestamp.optional()),
    destroyedAt: core.serialization.property("destroyed_at", Timestamp.optional()),
});

export declare namespace Container {
    export interface Raw {
        id: Id.Raw;
        region: string;
        tags?: unknown;
        build: string;
        arguments?: string[] | null;
        environment?: Record<string, string> | null;
        ports: Record<string, Port.Raw>;
        resources: Resources.Raw;
        kill_timeout?: number | null;
        durable?: boolean | null;
        created_at: Timestamp.Raw;
        started_at?: Timestamp.Raw | null;
        destroyed_at?: Timestamp.Raw | null;
    }
}
