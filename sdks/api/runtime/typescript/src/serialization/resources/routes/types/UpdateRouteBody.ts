/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { RouteTarget } from "../resources/common/types/RouteTarget";

export const UpdateRouteBody: core.serialization.ObjectSchema<
    serializers.routes.UpdateRouteBody.Raw,
    Rivet.routes.UpdateRouteBody
> = core.serialization.object({
    hostname: core.serialization.string(),
    path: core.serialization.string(),
    stripPrefix: core.serialization.property("strip_prefix", core.serialization.boolean()),
    routeSubpaths: core.serialization.property("route_subpaths", core.serialization.boolean()),
    target: RouteTarget,
});

export declare namespace UpdateRouteBody {
    export interface Raw {
        hostname: string;
        path: string;
        strip_prefix: boolean;
        route_subpaths: boolean;
        target: RouteTarget.Raw;
    }
}
