/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { CreateActorRuntimeRequest } from "./CreateActorRuntimeRequest";
import { CreateActorNetworkRequest } from "./CreateActorNetworkRequest";
import { Resources } from "../resources/common/types/Resources";
import { Lifecycle } from "../resources/common/types/Lifecycle";

export const CreateActorRequest: core.serialization.ObjectSchema<
    serializers.actor.CreateActorRequest.Raw,
    Rivet.actor.CreateActorRequest
> = core.serialization.object({
    region: core.serialization.string().optional(),
    tags: core.serialization.unknown(),
    build: core.serialization.string().optional(),
    buildTags: core.serialization.property("build_tags", core.serialization.unknown().optional()),
    runtime: CreateActorRuntimeRequest.optional(),
    network: CreateActorNetworkRequest.optional(),
    resources: Resources.optional(),
    lifecycle: Lifecycle.optional(),
});

export declare namespace CreateActorRequest {
    interface Raw {
        region?: string | null;
        tags?: unknown;
        build?: string | null;
        build_tags?: unknown | null;
        runtime?: CreateActorRuntimeRequest.Raw | null;
        network?: CreateActorNetworkRequest.Raw | null;
        resources?: Resources.Raw | null;
        lifecycle?: Lifecycle.Raw | null;
    }
}
