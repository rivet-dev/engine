openapi: 3.0.1
info:
  title: Rivet API
  version: 0.0.1
paths:
  '/actors/{actor}':
    get:
      description: Gets a dynamic actor.
      operationId: actors_get
      tags:
        - Actors
      parameters:
        - name: actor
          in: path
          description: The id of the actor to destroy
          required: true
          schema:
            type: string
            format: uuid
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
        - name: endpoint_type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ActorsEndpointType'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsGetActorResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: &ref_0
        - BearerAuth: []
    delete:
      description: Destroy a dynamic actor.
      operationId: actors_destroy
      tags:
        - Actors
      parameters:
        - name: actor
          in: path
          description: The id of the actor to destroy
          required: true
          schema:
            type: string
            format: uuid
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
        - name: override_kill_timeout
          in: query
          description: >-
            The duration to wait for in milliseconds before killing the actor.
            This should be used to override the default kill timeout if a faster
            time is needed, say for ignoring a graceful shutdown.
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsDestroyActorResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
  /actors:
    get:
      description: >-
        Lists all actors associated with the token used. Can be filtered by tags
        in the query string.
      operationId: actors_list
      tags:
        - Actors
      parameters:
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
        - name: endpoint_type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ActorsEndpointType'
        - name: tags_json
          in: query
          required: false
          schema:
            type: string
        - name: include_destroyed
          in: query
          required: false
          schema:
            type: boolean
        - name: cursor
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsListActorsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
    post:
      description: Create a new dynamic actor.
      operationId: actors_create
      tags:
        - Actors
      parameters:
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
        - name: endpoint_type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ActorsEndpointType'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsCreateActorResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorsCreateActorRequest'
  '/actors/{actor}/upgrade':
    post:
      description: Upgrades a dynamic actor.
      operationId: actors_upgrade
      tags:
        - Actors
      parameters:
        - name: actor
          in: path
          description: The id of the actor to upgrade
          required: true
          schema:
            type: string
            format: uuid
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsUpgradeActorResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorsUpgradeActorRequest'
  /actors/upgrade:
    post:
      description: Upgrades a dynamic actor.
      operationId: actors_upgradeAll
      tags:
        - Actors
      parameters:
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsUpgradeAllActorsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorsUpgradeAllActorsRequest'
  '/builds/{build}':
    get:
      description: Get a build.
      operationId: builds_get
      tags:
        - Builds
      parameters:
        - name: build
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildsGetBuildResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
  /builds:
    get:
      description: >-
        Lists all builds of the project associated with the token used. Can be
        filtered by tags in the query string.
      operationId: builds_list
      tags:
        - Builds
      parameters:
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
        - name: tags_json
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildsListBuildsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
  '/builds/{build}/tags':
    patch:
      operationId: builds_patchTags
      tags:
        - Builds
      parameters:
        - name: build
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildsPatchBuildTagsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildsPatchBuildTagsRequest'
  /builds/prepare:
    post:
      description: Creates a new project build for the given project.
      operationId: builds_prepare
      tags:
        - Builds
      parameters:
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildsPrepareBuildResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildsPrepareBuildRequest'
  '/builds/{build}/complete':
    post:
      description: Marks an upload as complete.
      operationId: builds_complete
      tags:
        - Builds
      parameters:
        - name: build
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
  /regions:
    get:
      operationId: regions_list
      tags:
        - Regions
      parameters:
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsListRegionsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  /regions/recommend:
    get:
      operationId: regions_recommend
      tags:
        - Regions
      parameters:
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
        - name: lat
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: long
          in: query
          required: false
          schema:
            type: number
            format: double
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsRecommendRegionResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  '/actors/{actor}/logs':
    get:
      description: Returns the logs for a given actor.
      operationId: actors_logs_get
      tags:
        - ActorsLogs
      parameters:
        - name: actor
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: project
          in: query
          required: false
          schema:
            type: string
        - name: environment
          in: query
          required: false
          schema:
            type: string
        - name: stream
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ActorsLogStream'
        - name: watch_index
          in: query
          description: A query parameter denoting the requests watch index.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorsGetActorLogsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '408':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '429':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
      security: *ref_0
components:
  schemas:
    ActorsGetActorResponse:
      type: object
      properties:
        actor:
          $ref: '#/components/schemas/ActorsActor'
      required:
        - actor
    ActorsCreateActorRequest:
      type: object
      properties:
        region:
          type: string
        tags: {}
        build:
          type: string
          format: uuid
        build_tags: {}
        runtime:
          $ref: '#/components/schemas/ActorsCreateActorRuntimeRequest'
        network:
          $ref: '#/components/schemas/ActorsCreateActorNetworkRequest'
        resources:
          $ref: '#/components/schemas/ActorsResources'
        lifecycle:
          $ref: '#/components/schemas/ActorsLifecycle'
      required:
        - tags
    ActorsCreateActorRuntimeRequest:
      type: object
      properties:
        environment:
          type: object
          additionalProperties:
            type: string
        network:
          $ref: '#/components/schemas/ActorsCreateActorRuntimeNetworkRequest'
    ActorsCreateActorRuntimeNetworkRequest:
      type: object
      properties:
        endpoint_type:
          $ref: '#/components/schemas/ActorsEndpointType'
      required:
        - endpoint_type
    ActorsCreateActorNetworkRequest:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ActorsNetworkMode'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorsCreateActorPortRequest'
        wait_ready:
          type: boolean
    ActorsCreateActorPortRequest:
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/ActorsPortProtocol'
        internal_port:
          type: integer
        routing:
          $ref: '#/components/schemas/ActorsPortRouting'
      required:
        - protocol
    ActorsCreateActorResponse:
      type: object
      properties:
        actor:
          $ref: '#/components/schemas/ActorsActor'
          description: The actor that was created
      required:
        - actor
    ActorsDestroyActorResponse:
      type: object
      properties: {}
    ActorsUpgradeActorRequest:
      type: object
      properties:
        build:
          type: string
          format: uuid
        build_tags: {}
    ActorsUpgradeActorResponse:
      type: object
      properties: {}
    ActorsUpgradeAllActorsRequest:
      type: object
      properties:
        tags: {}
        build:
          type: string
          format: uuid
        build_tags: {}
      required:
        - tags
    ActorsUpgradeAllActorsResponse:
      type: object
      properties:
        count:
          type: integer
          format: int64
      required:
        - count
    ActorsListActorsResponse:
      type: object
      properties:
        actors:
          type: array
          items:
            $ref: '#/components/schemas/ActorsActor'
          description: A list of actors for the project associated with the token.
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - actors
        - pagination
    BuildsGetBuildResponse:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildsBuild'
      required:
        - build
    BuildsListBuildsResponse:
      type: object
      properties:
        builds:
          type: array
          items:
            $ref: '#/components/schemas/BuildsBuild'
          description: A list of builds for the project associated with the token.
      required:
        - builds
    BuildsPatchBuildTagsRequest:
      type: object
      properties:
        tags: {}
        exclusive_tags:
          type: array
          items:
            type: string
          description: |-
            **Deprecated**
            Removes the given tag keys from all other builds.
      required:
        - tags
    BuildsPatchBuildTagsResponse:
      type: object
      properties: {}
    BuildsPrepareBuildRequest:
      type: object
      properties:
        image_tag:
          type: string
          description: A tag given to the project build.
        image_file:
          $ref: '#/components/schemas/UploadPrepareFile'
        kind:
          $ref: '#/components/schemas/BuildsBuildKind'
        compression:
          $ref: '#/components/schemas/BuildsBuildCompression'
      required:
        - image_file
    BuildsPrepareBuildResponse:
      type: object
      properties:
        build:
          type: string
          format: uuid
        presigned_requests:
          type: array
          items:
            $ref: '#/components/schemas/UploadPresignedRequest'
      required:
        - build
        - presigned_requests
    BuildsBuildKind:
      type: string
      enum:
        - docker_image
        - oci_bundle
        - javascript
    BuildsBuildCompression:
      type: string
      enum:
        - none
        - lz4
    RegionsListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/RegionsRegion'
      required:
        - regions
    RegionsRecommendRegionResponse:
      type: object
      properties:
        region:
          $ref: '#/components/schemas/RegionsRegion'
      required:
        - region
    ActorsActor:
      type: object
      properties:
        id:
          type: string
          format: uuid
        region:
          type: string
        tags: {}
        runtime:
          $ref: '#/components/schemas/ActorsRuntime'
        network:
          $ref: '#/components/schemas/ActorsNetwork'
        resources:
          $ref: '#/components/schemas/ActorsResources'
        lifecycle:
          $ref: '#/components/schemas/ActorsLifecycle'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        started_at:
          $ref: '#/components/schemas/Timestamp'
        destroyed_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - region
        - tags
        - runtime
        - network
        - resources
        - lifecycle
        - created_at
    ActorsRuntime:
      type: object
      properties:
        build:
          type: string
          format: uuid
        arguments:
          type: array
          items:
            type: string
        environment:
          type: object
          additionalProperties:
            type: string
      required:
        - build
    ActorsLifecycle:
      type: object
      properties:
        kill_timeout:
          type: integer
          format: int64
          description: >-
            The duration to wait for in milliseconds before killing the actor.
            This should be set to a safe default, and can be overridden during a
            DELETE request if needed.
        durable:
          type: boolean
          description: >-
            If true, the actor will try to reschedule itself automatically in
            the event of a crash or a datacenter failover. The actor will not
            reschedule if it exits successfully.
    ActorsResources:
      type: object
      properties:
        cpu:
          type: integer
          description: >-
            The number of CPU cores in millicores, or 1/1000 of a core. For
            example,

            1/8 of a core would be 125 millicores, and 1 core would be 1000

            millicores.
        memory:
          type: integer
          description: The amount of memory in megabytes
      required:
        - cpu
        - memory
    ActorsNetwork:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ActorsNetworkMode'
        ports:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ActorsPort'
      required:
        - mode
        - ports
    ActorsNetworkMode:
      type: string
      enum:
        - bridge
        - host
    ActorsPort:
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/ActorsPortProtocol'
        internal_port:
          type: integer
        hostname:
          type: string
        port:
          type: integer
        path:
          type: string
        url:
          type: string
          description: >-
            Fully formed connection URL including protocol, hostname, port, and
            path, if applicable.
        routing:
          $ref: '#/components/schemas/ActorsPortRouting'
      required:
        - protocol
        - routing
    ActorsPortProtocol:
      type: string
      enum:
        - http
        - https
        - tcp
        - tcp_tls
        - udp
    ActorsPortRouting:
      type: object
      properties:
        guard:
          $ref: '#/components/schemas/ActorsGuardRouting'
        host:
          $ref: '#/components/schemas/ActorsHostRouting'
    ActorsGuardRouting:
      type: object
      properties: {}
    ActorsHostRouting:
      type: object
      properties: {}
    ActorsEndpointType:
      type: string
      enum:
        - hostname
        - path
    ActorsGetActorLogsResponse:
      type: object
      properties:
        lines:
          type: array
          items:
            type: string
          description: Sorted old to new.
        timestamps:
          type: array
          items:
            $ref: '#/components/schemas/Timestamp'
          description: Sorted old to new.
        watch:
          $ref: '#/components/schemas/WatchResponse'
      required:
        - lines
        - timestamps
        - watch
    ActorsLogStream:
      type: string
      enum:
        - std_out
        - std_err
    BuildsBuild:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          $ref: '#/components/schemas/Timestamp'
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Tags of this build
      required:
        - id
        - name
        - created_at
        - content_length
        - tags
    WatchResponse:
      type: object
      description: Provided by watchable endpoints used in blocking loops.
      properties:
        index:
          type: string
          description: |-
            Index indicating the version of the data responded.
            Pass this to `WatchQuery` to block and wait for the next response.
      required:
        - index
    Timestamp:
      type: string
      format: date-time
      description: RFC3339 timestamp
    ErrorMetadata:
      description: Unstructured metadata relating to an error. Must be manually parsed.
    ErrorBody:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        ray_id:
          type: string
        documentation:
          type: string
        metadata:
          $ref: '#/components/schemas/ErrorMetadata'
      required:
        - code
        - message
        - ray_id
    Pagination:
      type: object
      properties:
        cursor:
          type: string
    RegionsRegion:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    UploadPresignedRequest:
      type: object
      description: >-
        A presigned request used to upload files. Upload your file to the given
        URL via a PUT request.
      properties:
        path:
          type: string
          description: >-
            The name of the file to upload. This is the same as the one given in
            the upload prepare file.
        url:
          type: string
          description: The URL of the presigned request for which to upload your file to.
        byte_offset:
          type: integer
          format: int64
          description: >-
            The byte offset for this multipart chunk. Always 0 if not a
            multipart upload.
        content_length:
          type: integer
          format: int64
          description: Expected size of this upload.
      required:
        - path
        - url
        - byte_offset
        - content_length
    UploadPrepareFile:
      type: object
      description: A file being prepared to upload.
      properties:
        path:
          type: string
          description: The path/filename of the file.
        content_type:
          type: string
          description: The MIME type of the file.
        content_length:
          type: integer
          format: int64
          description: Unsigned 64 bit integer.
      required:
        - path
        - content_length
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: 'https://api.rivet.gg'
    description: Production
