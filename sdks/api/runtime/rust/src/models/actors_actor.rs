/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ActorsActor {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "region")]
    pub region: String,
    #[serde(rename = "tags", deserialize_with = "Option::deserialize")]
    pub tags: Option<serde_json::Value>,
    #[serde(rename = "runtime")]
    pub runtime: Box<crate::models::ActorsRuntime>,
    #[serde(rename = "network")]
    pub network: Box<crate::models::ActorsNetwork>,
    #[serde(rename = "resources")]
    pub resources: Box<crate::models::ActorsResources>,
    #[serde(rename = "lifecycle")]
    pub lifecycle: Box<crate::models::ActorsLifecycle>,
    /// RFC3339 timestamp
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// RFC3339 timestamp
    #[serde(rename = "started_at", skip_serializing_if = "Option::is_none")]
    pub started_at: Option<String>,
    /// RFC3339 timestamp
    #[serde(rename = "destroyed_at", skip_serializing_if = "Option::is_none")]
    pub destroyed_at: Option<String>,
}

impl ActorsActor {
    pub fn new(id: uuid::Uuid, region: String, tags: Option<serde_json::Value>, runtime: crate::models::ActorsRuntime, network: crate::models::ActorsNetwork, resources: crate::models::ActorsResources, lifecycle: crate::models::ActorsLifecycle, created_at: String) -> ActorsActor {
        ActorsActor {
            id,
            region,
            tags,
            runtime: Box::new(runtime),
            network: Box::new(network),
            resources: Box::new(resources),
            lifecycle: Box::new(lifecycle),
            created_at,
            started_at: None,
            destroyed_at: None,
        }
    }
}


