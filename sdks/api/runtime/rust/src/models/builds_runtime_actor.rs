/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BuildsRuntimeActor {
    #[serde(rename = "environment", skip_serializing_if = "Option::is_none")]
    pub environment: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "network_mode", skip_serializing_if = "Option::is_none")]
    pub network_mode: Option<crate::models::BuildsNetworkMode>,
    #[serde(rename = "ports", skip_serializing_if = "Option::is_none")]
    pub ports: Option<::std::collections::HashMap<String, crate::models::BuildsPortRequest>>,
    #[serde(rename = "resources")]
    pub resources: Box<crate::models::BuildsResources>,
    #[serde(rename = "slots")]
    pub slots: i32,
}

impl BuildsRuntimeActor {
    pub fn new(resources: crate::models::BuildsResources, slots: i32) -> BuildsRuntimeActor {
        BuildsRuntimeActor {
            environment: None,
            network_mode: None,
            ports: None,
            resources: Box::new(resources),
            slots,
        }
    }
}


