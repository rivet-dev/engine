/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RoutesRoute {
    #[serde(rename = "id")]
    pub id: String,
    /// RFC3339 timestamp
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// RFC3339 timestamp
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "hostname")]
    pub hostname: String,
    #[serde(rename = "path")]
    pub path: String,
    /// Whether to route all subpaths of this path
    #[serde(rename = "route_subpaths")]
    pub route_subpaths: bool,
    /// Whether to remove the path prefix before sending the request to the target.
    #[serde(rename = "strip_prefix")]
    pub strip_prefix: bool,
    #[serde(rename = "target")]
    pub target: Box<crate::models::RoutesRouteTarget>,
}

impl RoutesRoute {
    pub fn new(id: String, created_at: String, updated_at: String, hostname: String, path: String, route_subpaths: bool, strip_prefix: bool, target: crate::models::RoutesRouteTarget) -> RoutesRoute {
        RoutesRoute {
            id,
            created_at,
            updated_at,
            hostname,
            path,
            route_subpaths,
            strip_prefix,
            target: Box::new(target),
        }
    }
}


