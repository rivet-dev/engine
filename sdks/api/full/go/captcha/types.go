// This file was auto-generated by Fern from our API Definition.

package captcha

import (
	json "encoding/json"
	fmt "fmt"
	core "sdk/core"
)

// Methods to verify a captcha
type Config struct {
	Hcaptcha  *ConfigHcaptcha  `json:"hcaptcha,omitempty"`
	Turnstile *ConfigTurnstile `json:"turnstile,omitempty"`

	_rawJSON json.RawMessage
}

func (c *Config) UnmarshalJSON(data []byte) error {
	type unmarshaler Config
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = Config(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *Config) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

// Captcha configuration.
type ConfigHcaptcha struct {
	ClientResponse string `json:"client_response"`

	_rawJSON json.RawMessage
}

func (c *ConfigHcaptcha) UnmarshalJSON(data []byte) error {
	type unmarshaler ConfigHcaptcha
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConfigHcaptcha(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConfigHcaptcha) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

// Captcha configuration.
type ConfigTurnstile struct {
	ClientResponse string `json:"client_response"`

	_rawJSON json.RawMessage
}

func (c *ConfigTurnstile) UnmarshalJSON(data []byte) error {
	type unmarshaler ConfigTurnstile
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConfigTurnstile(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConfigTurnstile) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
