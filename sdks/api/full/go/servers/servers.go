// This file was auto-generated by Fern from our API Definition.

package servers

import (
	json "encoding/json"
	fmt "fmt"
	uuid "github.com/google/uuid"
	core "sdk/core"
)

type CreateServerRequest struct {
	Datacenter uuid.UUID                   `json:"datacenter"`
	Tags       interface{}                 `json:"tags,omitempty"`
	Runtime    *CreateServerRuntimeRequest `json:"runtime,omitempty"`
	Network    *CreateServerNetworkRequest `json:"network,omitempty"`
	Resources  *Resources                  `json:"resources,omitempty"`
	Lifecycle  *Lifecycle                  `json:"lifecycle,omitempty"`

	_rawJSON json.RawMessage
}

func (c *CreateServerRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateServerRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateServerRequest(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateServerRequest) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CreateServerResponse struct {
	// The server that was created
	Server *Server `json:"server,omitempty"`

	_rawJSON json.RawMessage
}

func (c *CreateServerResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateServerResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateServerResponse(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateServerResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type DestroyServerResponse struct {
	_rawJSON json.RawMessage
}

func (d *DestroyServerResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DestroyServerResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DestroyServerResponse(value)
	d._rawJSON = json.RawMessage(data)
	return nil
}

func (d *DestroyServerResponse) String() string {
	if len(d._rawJSON) > 0 {
		if value, err := core.StringifyJSON(d._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type GetServerResponse struct {
	Server *Server `json:"server,omitempty"`

	_rawJSON json.RawMessage
}

func (g *GetServerResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetServerResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetServerResponse(value)
	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetServerResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type ListServersResponse struct {
	// A list of servers for the game associated with the token.
	Servers []*Server `json:"servers,omitempty"`

	_rawJSON json.RawMessage
}

func (l *ListServersResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListServersResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListServersResponse(value)
	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListServersResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}
