// This file was auto-generated by Fern from our API Definition.

package pegboard

import (
	json "encoding/json"
	fmt "fmt"
	sdk "sdk"
	core "sdk/core"
)

type PrewarmImageRequest struct {
	_rawJSON json.RawMessage
}

func (p *PrewarmImageRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler PrewarmImageRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PrewarmImageRequest(value)
	p._rawJSON = json.RawMessage(data)
	return nil
}

func (p *PrewarmImageRequest) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

type ToggleClientDrainRequest struct {
	Draining        bool           `json:"draining"`
	DrainCompleteTs *sdk.Timestamp `json:"drain_complete_ts,omitempty"`

	_rawJSON json.RawMessage
}

func (t *ToggleClientDrainRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler ToggleClientDrainRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = ToggleClientDrainRequest(value)
	t._rawJSON = json.RawMessage(data)
	return nil
}

func (t *ToggleClientDrainRequest) String() string {
	if len(t._rawJSON) > 0 {
		if value, err := core.StringifyJSON(t._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}
