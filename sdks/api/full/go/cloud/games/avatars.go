// This file was auto-generated by Fern from our API Definition.

package games

import (
	json "encoding/json"
	fmt "fmt"
	uuid "github.com/google/uuid"
	cloud "sdk/cloud"
	core "sdk/core"
	upload "sdk/upload"
)

type ListGameCustomAvatarsResponse struct {
	// A list of custom avatar summaries.
	CustomAvatars []*cloud.CustomAvatarSummary `json:"custom_avatars,omitempty"`

	_rawJSON json.RawMessage
}

func (l *ListGameCustomAvatarsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListGameCustomAvatarsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListGameCustomAvatarsResponse(value)
	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListGameCustomAvatarsResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type PrepareCustomAvatarUploadRequest struct {
	// The path/filename of the custom avatar.
	Path string `json:"path"`
	// The MIME type of the custom avatar.
	Mime *string `json:"mime,omitempty"`
	// Unsigned 64 bit integer.
	ContentLength int64 `json:"content_length"`

	_rawJSON json.RawMessage
}

func (p *PrepareCustomAvatarUploadRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler PrepareCustomAvatarUploadRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PrepareCustomAvatarUploadRequest(value)
	p._rawJSON = json.RawMessage(data)
	return nil
}

func (p *PrepareCustomAvatarUploadRequest) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

type PrepareCustomAvatarUploadResponse struct {
	UploadId         uuid.UUID                `json:"upload_id"`
	PresignedRequest *upload.PresignedRequest `json:"presigned_request,omitempty"`

	_rawJSON json.RawMessage
}

func (p *PrepareCustomAvatarUploadResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler PrepareCustomAvatarUploadResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PrepareCustomAvatarUploadResponse(value)
	p._rawJSON = json.RawMessage(data)
	return nil
}

func (p *PrepareCustomAvatarUploadResponse) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}
