/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { DisplayName } from "../../../../common/types/DisplayName";
import { AccountNumber } from "../../../../common/types/AccountNumber";
import { ExternalLinks } from "./ExternalLinks";

export const Summary: core.serialization.ObjectSchema<serializers.identity.Summary.Raw, Rivet.identity.Summary> =
    core.serialization.object({
        identityId: core.serialization.property("identity_id", core.serialization.string()),
        displayName: core.serialization.property("display_name", DisplayName),
        accountNumber: core.serialization.property("account_number", AccountNumber),
        avatarUrl: core.serialization.property("avatar_url", core.serialization.string()),
        isRegistered: core.serialization.property("is_registered", core.serialization.boolean()),
        external: ExternalLinks,
        following: core.serialization.boolean(),
        isFollowingMe: core.serialization.property("is_following_me", core.serialization.boolean()),
        isMutualFollowing: core.serialization.property("is_mutual_following", core.serialization.boolean()),
    });

export declare namespace Summary {
    interface Raw {
        identity_id: string;
        display_name: DisplayName.Raw;
        account_number: AccountNumber.Raw;
        avatar_url: string;
        is_registered: boolean;
        external: ExternalLinks.Raw;
        following: boolean;
        is_following_me: boolean;
        is_mutual_following: boolean;
    }
}
