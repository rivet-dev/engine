/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Handle } from "../../common/types/Handle";
import { GameSummary } from "../../../../game/resources/common/types/GameSummary";
import { GroupSummary } from "../../../../group/resources/common/types/GroupSummary";
import { WatchResponse } from "../../../../common/types/WatchResponse";

export const ListActivitiesResponse: core.serialization.ObjectSchema<
    serializers.identity.ListActivitiesResponse.Raw,
    Rivet.identity.ListActivitiesResponse
> = core.serialization.object({
    identities: core.serialization.list(Handle),
    games: core.serialization.list(GameSummary),
    suggestedGroups: core.serialization.property("suggested_groups", core.serialization.list(GroupSummary)),
    suggestedPlayers: core.serialization.property("suggested_players", core.serialization.list(Handle)),
    watch: WatchResponse,
});

export declare namespace ListActivitiesResponse {
    export interface Raw {
        identities: Handle.Raw[];
        games: GameSummary.Raw[];
        suggested_groups: GroupSummary.Raw[];
        suggested_players: Handle.Raw[];
        watch: WatchResponse.Raw;
    }
}
