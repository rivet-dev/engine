/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { Timestamp } from "../../../../common/types/Timestamp";

export const ToggleClientDrainRequest: core.serialization.ObjectSchema<
    serializers.edgeIntercom.pegboard.ToggleClientDrainRequest.Raw,
    Rivet.edgeIntercom.pegboard.ToggleClientDrainRequest
> = core.serialization.object({
    draining: core.serialization.boolean(),
    drainCompleteTs: core.serialization.property("drain_complete_ts", Timestamp.optional()),
});

export declare namespace ToggleClientDrainRequest {
    interface Raw {
        draining: boolean;
        drain_complete_ts?: Timestamp.Raw | null;
    }
}
