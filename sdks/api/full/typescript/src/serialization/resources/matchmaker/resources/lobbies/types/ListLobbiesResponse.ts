/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { GameModeInfo } from "../../common/types/GameModeInfo";
import { RegionInfo } from "../../common/types/RegionInfo";
import { LobbyInfo } from "../../common/types/LobbyInfo";

export const ListLobbiesResponse: core.serialization.ObjectSchema<
    serializers.matchmaker.ListLobbiesResponse.Raw,
    Rivet.matchmaker.ListLobbiesResponse
> = core.serialization.object({
    gameModes: core.serialization.property("game_modes", core.serialization.list(GameModeInfo)),
    regions: core.serialization.list(RegionInfo),
    lobbies: core.serialization.list(LobbyInfo),
});

export declare namespace ListLobbiesResponse {
    interface Raw {
        game_modes: GameModeInfo.Raw[];
        regions: RegionInfo.Raw[];
        lobbies: LobbyInfo.Raw[];
    }
}
