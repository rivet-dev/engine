/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { CreateServerRuntimeRequest } from "./CreateServerRuntimeRequest";
import { CreateServerNetworkRequest } from "./CreateServerNetworkRequest";
import { Resources } from "../resources/common/types/Resources";
import { Lifecycle } from "../resources/common/types/Lifecycle";

export const CreateServerRequest: core.serialization.ObjectSchema<
    serializers.servers.CreateServerRequest.Raw,
    Rivet.servers.CreateServerRequest
> = core.serialization.object({
    datacenter: core.serialization.string(),
    tags: core.serialization.unknown(),
    runtime: CreateServerRuntimeRequest,
    network: CreateServerNetworkRequest,
    resources: Resources,
    lifecycle: Lifecycle.optional(),
});

export declare namespace CreateServerRequest {
    export interface Raw {
        datacenter: string;
        tags?: unknown;
        runtime: CreateServerRuntimeRequest.Raw;
        network: CreateServerNetworkRequest.Raw;
        resources: Resources.Raw;
        lifecycle?: Lifecycle.Raw | null;
    }
}
