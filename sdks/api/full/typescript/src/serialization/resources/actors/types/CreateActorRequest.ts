/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { EndpointType } from "../resources/common/types/EndpointType";

export const CreateActorRequest: core.serialization.ObjectSchema<
    serializers.actors.CreateActorRequest.Raw,
    Rivet.actors.CreateActorRequest
> = core.serialization.object({
    region: core.serialization.string().optional(),
    tags: core.serialization.unknown(),
    build: core.serialization.string().optional(),
    buildTags: core.serialization.property("build_tags", core.serialization.unknown().optional()),
    networkEndpointType: core.serialization.property("network_endpoint_type", EndpointType.optional()),
    waitForNetworkReady: core.serialization.property("wait_for_network_ready", core.serialization.boolean().optional()),
    killTimeout: core.serialization.property("kill_timeout", core.serialization.number().optional()),
    durable: core.serialization.boolean().optional(),
});

export declare namespace CreateActorRequest {
    export interface Raw {
        region?: string | null;
        tags?: unknown;
        build?: string | null;
        build_tags?: unknown | null;
        network_endpoint_type?: EndpointType.Raw | null;
        wait_for_network_ready?: boolean | null;
        kill_timeout?: number | null;
        durable?: boolean | null;
    }
}
