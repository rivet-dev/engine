/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";

export const GetContainerMetricsResponse: core.serialization.ObjectSchema<
    serializers.containers.GetContainerMetricsResponse.Raw,
    Rivet.containers.GetContainerMetricsResponse
> = core.serialization.object({
    containerIds: core.serialization.property("container_ids", core.serialization.list(core.serialization.string())),
    metricNames: core.serialization.property("metric_names", core.serialization.list(core.serialization.string())),
    metricAttributes: core.serialization.property(
        "metric_attributes",
        core.serialization.list(core.serialization.record(core.serialization.string(), core.serialization.string())),
    ),
    metricTypes: core.serialization.property("metric_types", core.serialization.list(core.serialization.string())),
    metricValues: core.serialization.property(
        "metric_values",
        core.serialization.list(core.serialization.list(core.serialization.number())),
    ),
});

export declare namespace GetContainerMetricsResponse {
    export interface Raw {
        container_ids: string[];
        metric_names: string[];
        metric_attributes: Record<string, string>[];
        metric_types: string[];
        metric_values: number[][];
    }
}
