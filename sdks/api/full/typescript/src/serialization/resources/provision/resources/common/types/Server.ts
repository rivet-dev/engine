/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { PoolType } from "./PoolType";

export const Server: core.serialization.ObjectSchema<serializers.provision.Server.Raw, Rivet.provision.Server> =
    core.serialization.object({
        serverId: core.serialization.property("server_id", core.serialization.string()),
        datacenterId: core.serialization.property("datacenter_id", core.serialization.string()),
        poolType: core.serialization.property("pool_type", PoolType),
        lanIp: core.serialization.property("lan_ip", core.serialization.string().optional()),
        wanIp: core.serialization.property("wan_ip", core.serialization.string().optional()),
    });

export declare namespace Server {
    export interface Raw {
        server_id: string;
        datacenter_id: string;
        pool_type: PoolType.Raw;
        lan_ip?: string | null;
        wan_ip?: string | null;
    }
}
