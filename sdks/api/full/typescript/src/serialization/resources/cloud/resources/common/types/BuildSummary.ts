/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { DisplayName } from "../../../../common/types/DisplayName";
import { Timestamp } from "../../../../common/types/Timestamp";

export const BuildSummary: core.serialization.ObjectSchema<
    serializers.cloud.BuildSummary.Raw,
    Rivet.cloud.BuildSummary
> = core.serialization.object({
    buildId: core.serialization.property("build_id", core.serialization.string()),
    uploadId: core.serialization.property("upload_id", core.serialization.string()),
    displayName: core.serialization.property("display_name", DisplayName),
    createTs: core.serialization.property("create_ts", Timestamp),
    contentLength: core.serialization.property("content_length", core.serialization.number()),
    complete: core.serialization.boolean(),
    tags: core.serialization.record(core.serialization.string(), core.serialization.string()),
});

export declare namespace BuildSummary {
    interface Raw {
        build_id: string;
        upload_id: string;
        display_name: DisplayName.Raw;
        create_ts: Timestamp.Raw;
        content_length: number;
        complete: boolean;
        tags: Record<string, string>;
    }
}
