/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../../index";
import * as Rivet from "../../../../../../../../../../api/index";
import * as core from "../../../../../../../../../../core";
import { PortRange } from "../../common/types/PortRange";
import { PortProtocol } from "../../common/types/PortProtocol";
import { ProxyKind } from "../../common/types/ProxyKind";

export const GameModeRuntimeDockerPort: core.serialization.ObjectSchema<
    serializers.cloud.version.matchmaker.GameModeRuntimeDockerPort.Raw,
    Rivet.cloud.version.matchmaker.GameModeRuntimeDockerPort
> = core.serialization.object({
    port: core.serialization.number().optional(),
    portRange: core.serialization.property("port_range", PortRange.optional()),
    protocol: PortProtocol.optional(),
    proxy: ProxyKind.optional(),
    devPort: core.serialization.property("dev_port", core.serialization.number().optional()),
    devPortRange: core.serialization.property("dev_port_range", PortRange.optional()),
    devProtocol: core.serialization.property("dev_protocol", PortProtocol.optional()),
});

export declare namespace GameModeRuntimeDockerPort {
    interface Raw {
        port?: number | null;
        port_range?: PortRange.Raw | null;
        protocol?: PortProtocol.Raw | null;
        proxy?: ProxyKind.Raw | null;
        dev_port?: number | null;
        dev_port_range?: PortRange.Raw | null;
        dev_protocol?: PortProtocol.Raw | null;
    }
}
