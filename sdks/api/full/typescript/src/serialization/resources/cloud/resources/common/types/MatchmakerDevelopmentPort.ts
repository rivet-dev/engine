/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { PortRange } from "../../version/resources/matchmaker/resources/common/types/PortRange";
import { PortProtocol } from "../../version/resources/matchmaker/resources/common/types/PortProtocol";

export const MatchmakerDevelopmentPort: core.serialization.ObjectSchema<
    serializers.cloud.MatchmakerDevelopmentPort.Raw,
    Rivet.cloud.MatchmakerDevelopmentPort
> = core.serialization.object({
    port: core.serialization.number().optional(),
    portRange: core.serialization.property("port_range", PortRange.optional()),
    protocol: PortProtocol,
});

export declare namespace MatchmakerDevelopmentPort {
    interface Raw {
        port?: number | null;
        port_range?: PortRange.Raw | null;
        protocol: PortProtocol.Raw;
    }
}
