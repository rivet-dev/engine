/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../../../index";
import * as Rivet from "../../../../../../../../../../api/index";
import * as core from "../../../../../../../../../../core";
import { GameModeIdentityRequirement } from "./GameModeIdentityRequirement";
import { GameModeVerificationConfig } from "./GameModeVerificationConfig";

export const GameModeCreateConfig: core.serialization.ObjectSchema<
    serializers.cloud.version.matchmaker.GameModeCreateConfig.Raw,
    Rivet.cloud.version.matchmaker.GameModeCreateConfig
> = core.serialization.object({
    enabled: core.serialization.boolean(),
    identityRequirement: core.serialization.property("identity_requirement", GameModeIdentityRequirement.optional()),
    verification: GameModeVerificationConfig.optional(),
    enablePublic: core.serialization.property("enable_public", core.serialization.boolean().optional()),
    enablePrivate: core.serialization.property("enable_private", core.serialization.boolean().optional()),
    maxLobbiesPerIdentity: core.serialization.property(
        "max_lobbies_per_identity",
        core.serialization.number().optional()
    ),
});

export declare namespace GameModeCreateConfig {
    interface Raw {
        enabled: boolean;
        identity_requirement?: GameModeIdentityRequirement.Raw | null;
        verification?: GameModeVerificationConfig.Raw | null;
        enable_public?: boolean | null;
        enable_private?: boolean | null;
        max_lobbies_per_identity?: number | null;
    }
}
