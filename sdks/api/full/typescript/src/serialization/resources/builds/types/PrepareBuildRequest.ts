/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { PrepareFile } from "../../upload/resources/common/types/PrepareFile";
import { BuildKind } from "./BuildKind";
import { BuildCompression } from "./BuildCompression";

export const PrepareBuildRequest: core.serialization.ObjectSchema<
    serializers.builds.PrepareBuildRequest.Raw,
    Rivet.builds.PrepareBuildRequest
> = core.serialization.object({
    imageTag: core.serialization.property("image_tag", core.serialization.string().optional()),
    imageFile: core.serialization.property("image_file", PrepareFile),
    kind: BuildKind.optional(),
    compression: BuildCompression.optional(),
});

export declare namespace PrepareBuildRequest {
    export interface Raw {
        image_tag?: string | null;
        image_file: PrepareFile.Raw;
        kind?: BuildKind.Raw | null;
        compression?: BuildCompression.Raw | null;
    }
}
