/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Rivet from "../../../../api/index";
import * as core from "../../../../core";
import { PrepareFile } from "../../upload/resources/common/types/PrepareFile";
import { Kind } from "../resources/common/types/Kind";
import { Compression } from "../resources/common/types/Compression";
import { Runtime } from "../resources/common/types/Runtime";

export const PrepareBuildRequest: core.serialization.ObjectSchema<
    serializers.builds.PrepareBuildRequest.Raw,
    Rivet.builds.PrepareBuildRequest
> = core.serialization.object({
    imageTag: core.serialization.property("image_tag", core.serialization.string().optional()),
    imageFile: core.serialization.property("image_file", PrepareFile),
    kind: Kind.optional(),
    compression: Compression.optional(),
    runtime: Runtime.optional(),
});

export declare namespace PrepareBuildRequest {
    export interface Raw {
        image_tag?: string | null;
        image_file: PrepareFile.Raw;
        kind?: Kind.Raw | null;
        compression?: Compression.Raw | null;
        runtime?: Runtime.Raw | null;
    }
}
