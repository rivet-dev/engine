/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { NetworkMode } from "./NetworkMode";
import { PortRequest } from "./PortRequest";
import { Resources } from "./Resources";

export const RuntimeActor: core.serialization.ObjectSchema<
    serializers.builds.RuntimeActor.Raw,
    Rivet.builds.RuntimeActor
> = core.serialization.object({
    environment: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    networkMode: core.serialization.property("network_mode", NetworkMode.optional()),
    ports: core.serialization.record(core.serialization.string(), PortRequest).optional(),
    resources: Resources,
    slots: core.serialization.number(),
});

export declare namespace RuntimeActor {
    export interface Raw {
        environment?: Record<string, string> | null;
        network_mode?: NetworkMode.Raw | null;
        ports?: Record<string, PortRequest.Raw> | null;
        resources: Resources.Raw;
        slots: number;
    }
}
