/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Rivet from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { PortProtocol } from "./PortProtocol";
import { PortRouting } from "./PortRouting";

export const PortRequest: core.serialization.ObjectSchema<
    serializers.builds.PortRequest.Raw,
    Rivet.builds.PortRequest
> = core.serialization.object({
    protocol: PortProtocol,
    internalPort: core.serialization.property("internal_port", core.serialization.number().optional()),
    routing: PortRouting.optional(),
});

export declare namespace PortRequest {
    export interface Raw {
        protocol: PortProtocol.Raw;
        internal_port?: number | null;
        routing?: PortRouting.Raw | null;
    }
}
