/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Datacenters } from "../resources/datacenters/client/Client";
import { Servers } from "../resources/servers/client/Client";
import { Tunnel } from "../resources/tunnel/client/Client";

export declare namespace Provision {
    export interface Options {
        environment?: core.Supplier<environments.RivetEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-API-Version header */
        xApiVersion?: "25.2.2";
        fetcher?: core.FetchFunction;
    }
}

export class Provision {
    protected _datacenters: Datacenters | undefined;
    protected _servers: Servers | undefined;
    protected _tunnel: Tunnel | undefined;

    constructor(protected readonly _options: Provision.Options = {}) {}

    public get datacenters(): Datacenters {
        return (this._datacenters ??= new Datacenters(this._options));
    }

    public get servers(): Servers {
        return (this._servers ??= new Servers(this._options));
    }

    public get tunnel(): Tunnel {
        return (this._tunnel ??= new Tunnel(this._options));
    }
}
