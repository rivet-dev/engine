/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ActorPort {
	#[serde(rename = "protocol")]
	pub protocol: crate::models::ActorPortProtocol,
	#[serde(rename = "internal_port", skip_serializing_if = "Option::is_none")]
	pub internal_port: Option<i32>,
	#[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
	pub hostname: Option<String>,
	#[serde(rename = "port", skip_serializing_if = "Option::is_none")]
	pub port: Option<i32>,
	#[serde(rename = "path", skip_serializing_if = "Option::is_none")]
	pub path: Option<String>,
	#[serde(rename = "routing")]
	pub routing: Box<crate::models::ActorPortRouting>,
}

impl ActorPort {
	pub fn new(
		protocol: crate::models::ActorPortProtocol,
		routing: crate::models::ActorPortRouting,
	) -> ActorPort {
		ActorPort {
			protocol,
			internal_port: None,
			hostname: None,
			port: None,
			path: None,
			routing: Box::new(routing),
		}
	}
}
