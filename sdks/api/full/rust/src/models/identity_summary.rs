/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

/// IdentitySummary : An identity summary.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IdentitySummary {
	#[serde(rename = "identity_id")]
	pub identity_id: uuid::Uuid,
	/// Represent a resource's readable display name.
	#[serde(rename = "display_name")]
	pub display_name: String,
	#[serde(rename = "account_number")]
	pub account_number: i32,
	/// The URL of this identity's avatar image.
	#[serde(rename = "avatar_url")]
	pub avatar_url: String,
	/// Whether or not this identity is registered with a linked account.
	#[serde(rename = "is_registered")]
	pub is_registered: bool,
	#[serde(rename = "external")]
	pub external: Box<crate::models::IdentityExternalLinks>,
	/// Whether or not the requestee's identity is following this identity.
	#[serde(rename = "following")]
	pub following: bool,
	/// Whether or not this identity is both following and is followed by the requestee's identity.
	#[serde(rename = "is_following_me")]
	pub is_following_me: bool,
	#[serde(rename = "is_mutual_following")]
	pub is_mutual_following: bool,
}

impl IdentitySummary {
	/// An identity summary.
	pub fn new(
		identity_id: uuid::Uuid,
		display_name: String,
		account_number: i32,
		avatar_url: String,
		is_registered: bool,
		external: crate::models::IdentityExternalLinks,
		following: bool,
		is_following_me: bool,
		is_mutual_following: bool,
	) -> IdentitySummary {
		IdentitySummary {
			identity_id,
			display_name,
			account_number,
			avatar_url,
			is_registered,
			external: Box::new(external),
			following,
			is_following_me,
			is_mutual_following,
		}
	}
}
