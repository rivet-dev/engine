/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CloudBootstrapResponse {
	#[serde(rename = "cluster")]
	pub cluster: crate::models::CloudBootstrapCluster,
	#[serde(rename = "access")]
	pub access: crate::models::CloudBootstrapAccess,
	#[serde(rename = "domains")]
	pub domains: Box<crate::models::CloudBootstrapDomains>,
	#[serde(rename = "origins")]
	pub origins: Box<crate::models::CloudBootstrapOrigins>,
	#[serde(rename = "captcha")]
	pub captcha: Box<crate::models::CloudBootstrapCaptcha>,
	#[serde(rename = "login_methods")]
	pub login_methods: Box<crate::models::CloudBootstrapLoginMethods>,
	#[serde(rename = "deploy_hash")]
	pub deploy_hash: String,
}

impl CloudBootstrapResponse {
	pub fn new(
		cluster: crate::models::CloudBootstrapCluster,
		access: crate::models::CloudBootstrapAccess,
		domains: crate::models::CloudBootstrapDomains,
		origins: crate::models::CloudBootstrapOrigins,
		captcha: crate::models::CloudBootstrapCaptcha,
		login_methods: crate::models::CloudBootstrapLoginMethods,
		deploy_hash: String,
	) -> CloudBootstrapResponse {
		CloudBootstrapResponse {
			cluster,
			access,
			domains: Box::new(domains),
			origins: Box::new(origins),
			captcha: Box::new(captcha),
			login_methods: Box::new(login_methods),
			deploy_hash,
		}
	}
}
