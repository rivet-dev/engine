/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

/// CloudRegionSummary : A region summary.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CloudRegionSummary {
	#[serde(rename = "region_id")]
	pub region_id: uuid::Uuid,
	/// A human readable short identifier used to references resources. Different than a `rivet.common#Uuid` because this is intended to be human readable. Different than `rivet.common#DisplayName` because this should not include special characters and be short.
	#[serde(rename = "region_name_id")]
	pub region_name_id: String,
	/// The server provider of this region.
	#[serde(rename = "provider")]
	pub provider: String,
	#[serde(rename = "universal_region")]
	pub universal_region: crate::models::CloudUniversalRegion,
	/// Represent a resource's readable display name.
	#[serde(rename = "provider_display_name")]
	pub provider_display_name: String,
	/// Represent a resource's readable display name.
	#[serde(rename = "region_display_name")]
	pub region_display_name: String,
}

impl CloudRegionSummary {
	/// A region summary.
	pub fn new(
		region_id: uuid::Uuid,
		region_name_id: String,
		provider: String,
		universal_region: crate::models::CloudUniversalRegion,
		provider_display_name: String,
		region_display_name: String,
	) -> CloudRegionSummary {
		CloudRegionSummary {
			region_id,
			region_name_id,
			provider,
			universal_region,
			provider_display_name,
			region_display_name,
		}
	}
}
