# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: common.yml

service:
  auth: true
  base-path: /actors
  audiences:
    - runtime
  endpoints:
    get:
      path: /{actor}
      method: GET
      docs: Gets a dynamic actor.
      path-parameters:
        actor:
          docs: The id of the actor to destroy
          type: uuid
      request:
        name: ListActorsRequestQuery
        query-parameters:
          project: optional<string>
          environment: optional<string>
          endpoint_type: optional<commons.EndpointType>
      response: GetActorResponse

    list:
      path: ""
      method: GET
      docs: >-
        Lists all actors associated with the token used. Can be filtered by
        tags in the query string.
      request:
        name: GetActorsRequestQuery
        query-parameters:
          project: optional<string>
          environment: optional<string>
          endpoint_type: optional<commons.EndpointType>
          tags_json: optional<string>
          include_destroyed: optional<boolean>
          cursor: optional<uuid>
      response: ListActorsResponse

    create:
      path: ""
      method: POST
      docs: Create a new dynamic actor.
      request:
        name: CreateActorRequestQuery
        body: CreateActorRequest
        query-parameters:
          project: optional<string>
          environment: optional<string>
          endpoint_type: optional<commons.EndpointType>
      response: CreateActorResponse

    destroy:
      path: /{actor}
      method: DELETE
      docs: Destroy a dynamic actor.
      path-parameters:
        actor:
          docs: The id of the actor to destroy
          type: uuid
      request:
        name: DestroyActorRequestQuery
        query-parameters:
          project: optional<string>
          environment: optional<string>
          override_kill_timeout:
            docs: >-
              The duration to wait for in milliseconds before killing the actor.
              This should be used to override the default kill timeout if a faster
              time is needed, say for ignoring a graceful shutdown.
            type: optional<long>
      response: DestroyActorResponse

    upgrade:
      path: /{actor}/upgrade
      method: POST
      docs: Upgrades a dynamic actor.
      path-parameters:
        actor:
          docs: The id of the actor to upgrade
          type: uuid
      request:
        name: UpgradeActorRequestQuery
        query-parameters:
          project: optional<string>
          environment: optional<string>
        body: UpgradeActorRequest
      response: UpgradeActorResponse

    upgradeAll:
      path: /upgrade
      method: POST
      docs: Upgrades a dynamic actor.
      request:
        name: UpgradeAllActorsRequestQuery
        query-parameters:
          project: optional<string>
          environment: optional<string>
        body: UpgradeAllActorsRequest
      response: UpgradeAllActorsResponse

types:
  GetActorResponse:
    properties:
      actor: commons.Actor

  CreateActorRequest:
    properties:
      region: optional<string>
      tags: unknown
      build: optional<uuid>
      build_tags: optional<unknown>
      runtime: optional<CreateActorRuntimeRequest>
      network: optional<CreateActorNetworkRequest>
      resources: optional<commons.Resources>
      lifecycle: optional<commons.Lifecycle>

  CreateActorRuntimeRequest:
    properties:
      # arguments: optional<list<string>>
      environment: optional<map<string, string>>

  CreateActorNetworkRequest:
    properties:
      mode: optional<commons.NetworkMode>
      ports: optional<map<string, CreateActorPortRequest>>

  CreateActorPortRequest:
    properties:
      protocol: commons.PortProtocol
      internal_port: optional<integer>
      routing: optional<commons.PortRouting>

  CreateActorResponse:
    properties:
      actor:
        docs: The actor that was created
        type: commons.Actor

  DestroyActorResponse:
    properties: {}

  UpgradeActorRequest:
    properties:
      build: optional<uuid>
      build_tags: optional<unknown>

  UpgradeActorResponse:
    properties: {}

  UpgradeAllActorsRequest:
    properties:
      tags: unknown
      build: optional<uuid>
      build_tags: optional<unknown>

  UpgradeAllActorsResponse:
    properties:
      count: long

  ListActorsResponse:
    properties:
      actors:
        docs: A list of actors for the project associated with the token.
        type: list<commons.Actor>
