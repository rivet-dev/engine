/*
 * rivet-api-public
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: developer@rivet.gg
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Actor {
	#[serde(rename = "actor_id")]
	pub actor_id: String,
	#[serde(
		rename = "connectable_ts",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub connectable_ts: Option<Option<i64>>,
	#[serde(rename = "create_ts")]
	pub create_ts: i64,
	#[serde(
		rename = "destroy_ts",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub destroy_ts: Option<Option<i64>>,
	#[serde(rename = "lifecycle")]
	pub lifecycle: Box<models::ActorLifecycle>,
	#[serde(rename = "namespace_id")]
	pub namespace_id: String,
	#[serde(rename = "runner_name_selector")]
	pub runner_name_selector: String,
	#[serde(
		rename = "start_ts",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub start_ts: Option<Option<i64>>,
	#[serde(rename = "tags")]
	pub tags: std::collections::HashMap<String, String>,
}

impl Actor {
	pub fn new(
		actor_id: String,
		create_ts: i64,
		lifecycle: models::ActorLifecycle,
		namespace_id: String,
		runner_name_selector: String,
		tags: std::collections::HashMap<String, String>,
	) -> Actor {
		Actor {
			actor_id,
			connectable_ts: None,
			create_ts,
			destroy_ts: None,
			lifecycle: Box::new(lifecycle),
			namespace_id,
			runner_name_selector,
			start_ts: None,
			tags,
		}
	}
}
