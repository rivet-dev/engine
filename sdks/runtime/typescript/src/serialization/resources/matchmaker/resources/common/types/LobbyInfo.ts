/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const LobbyInfo: core.serialization.ObjectSchema<
    serializers.matchmaker.LobbyInfo.Raw,
    Rivet.matchmaker.LobbyInfo
> = core.serialization.object({
    regionId: core.serialization.property("region_id", core.serialization.string()),
    gameModeId: core.serialization.property("game_mode_id", core.serialization.string()),
    lobbyId: core.serialization.property("lobby_id", core.serialization.string()),
    maxPlayersNormal: core.serialization.property("max_players_normal", core.serialization.number()),
    maxPlayersDirect: core.serialization.property("max_players_direct", core.serialization.number()),
    maxPlayersParty: core.serialization.property("max_players_party", core.serialization.number()),
    totalPlayerCount: core.serialization.property("total_player_count", core.serialization.number()),
    state: core.serialization.unknown().optional(),
});

export declare namespace LobbyInfo {
    interface Raw {
        region_id: string;
        game_mode_id: string;
        lobby_id: string;
        max_players_normal: number;
        max_players_direct: number;
        max_players_party: number;
        total_player_count: number;
        state?: unknown | null;
    }
}
