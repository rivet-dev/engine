/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Rivet from "../../../../../../api";
import * as core from "../../../../../../core";

export const Entry: core.serialization.ObjectSchema<serializers.kv.Entry.Raw, Rivet.kv.Entry> =
    core.serialization.object({
        key: core.serialization.lazy(async () => (await import("../../../../..")).kv.Key),
        value: core.serialization.lazy(async () => (await import("../../../../..")).kv.Value),
        deleted: core.serialization.boolean().optional(),
    });

export declare namespace Entry {
    interface Raw {
        key: serializers.kv.Key.Raw;
        value?: serializers.kv.Value.Raw;
        deleted?: boolean | null;
    }
}
