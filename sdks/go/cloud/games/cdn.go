// This file was auto-generated by Fern from our API Definition.

package games

import (
	json "encoding/json"
	fmt "fmt"
	uuid "github.com/google/uuid"
	cloud "sdk/cloud"
	core "sdk/core"
	upload "sdk/upload"
)

type CreateGameCdnSiteRequest struct {
	// Represent a resource's readable display name.
	DisplayName string `json:"display_name"`
	// A list of files preparing to upload.
	Files []*upload.PrepareFile `json:"files,omitempty"`

	_rawJSON json.RawMessage
}

func (c *CreateGameCdnSiteRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateGameCdnSiteRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateGameCdnSiteRequest(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateGameCdnSiteRequest) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CreateGameCdnSiteResponse struct {
	SiteId            uuid.UUID                  `json:"site_id"`
	UploadId          uuid.UUID                  `json:"upload_id"`
	PresignedRequests []*upload.PresignedRequest `json:"presigned_requests,omitempty"`

	_rawJSON json.RawMessage
}

func (c *CreateGameCdnSiteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateGameCdnSiteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateGameCdnSiteResponse(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateGameCdnSiteResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ListGameCdnSitesResponse struct {
	// A list of CDN site summaries.
	Sites []*cloud.CdnSiteSummary `json:"sites,omitempty"`

	_rawJSON json.RawMessage
}

func (l *ListGameCdnSitesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListGameCdnSitesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListGameCdnSitesResponse(value)
	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListGameCdnSitesResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}
