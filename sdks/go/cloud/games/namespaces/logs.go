// This file was auto-generated by Fern from our API Definition.

package namespaces

import (
	json "encoding/json"
	fmt "fmt"
	cloud "sdk/cloud"
	core "sdk/core"
	time "time"
)

type ListNamespaceLobbiesRequest struct {
	// Returns lobbies created before this timestamp.
	BeforeCreateTs *time.Time `json:"-"`
}

type GetNamespaceLobbyResponse struct {
	Lobby   *cloud.LogsLobbySummary `json:"lobby,omitempty"`
	Metrics *cloud.SvcMetrics       `json:"metrics,omitempty"`
	// **Deprecated**
	// A list of URLs.
	StdoutPresignedUrls []string `json:"stdout_presigned_urls,omitempty"`
	// **Deprecated**
	// A list of URLs.
	StderrPresignedUrls []string `json:"stderr_presigned_urls,omitempty"`
	// **Deprecated**
	// A list of service performance summaries.
	PerfLists []*cloud.SvcPerf `json:"perf_lists,omitempty"`

	_rawJSON json.RawMessage
}

func (g *GetNamespaceLobbyResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetNamespaceLobbyResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetNamespaceLobbyResponse(value)
	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetNamespaceLobbyResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type ListNamespaceLobbiesResponse struct {
	// A list of lobby log summaries.
	Lobbies []*cloud.LogsLobbySummary `json:"lobbies,omitempty"`

	_rawJSON json.RawMessage
}

func (l *ListNamespaceLobbiesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListNamespaceLobbiesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListNamespaceLobbiesResponse(value)
	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListNamespaceLobbiesResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}
