// This file was auto-generated by Fern from our API Definition.

package identity

import (
	json "encoding/json"
	fmt "fmt"
	uuid "github.com/google/uuid"
	core "sdk/core"
)

// **Deprecated**
// Identity configuration for a given version.
type Config struct {
	// **Deprecated**
	DisplayNames []string `json:"display_names,omitempty"`
	// **Deprecated**
	Avatars []uuid.UUID `json:"avatars,omitempty"`
	// **Deprecated**
	CustomDisplayNames []*CustomDisplayName `json:"custom_display_names,omitempty"`
	// **Deprecated**
	CustomAvatars []*CustomAvatar `json:"custom_avatars,omitempty"`

	_rawJSON json.RawMessage
}

func (c *Config) UnmarshalJSON(data []byte) error {
	type unmarshaler Config
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = Config(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *Config) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CustomAvatar struct {
	UploadId uuid.UUID `json:"upload_id"`

	_rawJSON json.RawMessage
}

func (c *CustomAvatar) UnmarshalJSON(data []byte) error {
	type unmarshaler CustomAvatar
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CustomAvatar(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CustomAvatar) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type CustomDisplayName struct {
	DisplayName string `json:"display_name"`

	_rawJSON json.RawMessage
}

func (c *CustomDisplayName) UnmarshalJSON(data []byte) error {
	type unmarshaler CustomDisplayName
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CustomDisplayName(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CustomDisplayName) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
