// This file was auto-generated by Fern from our API Definition.

package portal

import (
	json "encoding/json"
	fmt "fmt"
	sdk "sdk"
	game "sdk/common/game"
	core "sdk/core"
)

type NotificationRegisterFirebaseService struct {
	AccessKey string `json:"access_key"`

	_rawJSON json.RawMessage
}

func (n *NotificationRegisterFirebaseService) UnmarshalJSON(data []byte) error {
	type unmarshaler NotificationRegisterFirebaseService
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*n = NotificationRegisterFirebaseService(value)
	n._rawJSON = json.RawMessage(data)
	return nil
}

func (n *NotificationRegisterFirebaseService) String() string {
	if len(n._rawJSON) > 0 {
		if value, err := core.StringifyJSON(n._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}

type NotificationRegisterService struct {
	Firebase *NotificationRegisterFirebaseService `json:"firebase,omitempty"`

	_rawJSON json.RawMessage
}

func (n *NotificationRegisterService) UnmarshalJSON(data []byte) error {
	type unmarshaler NotificationRegisterService
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*n = NotificationRegisterService(value)
	n._rawJSON = json.RawMessage(data)
	return nil
}

func (n *NotificationRegisterService) String() string {
	if len(n._rawJSON) > 0 {
		if value, err := core.StringifyJSON(n._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}

type GetSuggestedGamesResponse struct {
	// A list of game summaries.
	Games []*game.Summary    `json:"games,omitempty"`
	Watch *sdk.WatchResponse `json:"watch,omitempty"`

	_rawJSON json.RawMessage
}

func (g *GetSuggestedGamesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetSuggestedGamesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetSuggestedGamesResponse(value)
	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetSuggestedGamesResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}
