// This file was auto-generated by Fern from our API Definition.

package auth

import (
	json "encoding/json"
	fmt "fmt"
	uuid "github.com/google/uuid"
	core "sdk/core"
)

type RefreshIdentityTokenRequest struct {
	// When `true`, the current identity for the provided cookie will be logged out and a new identity will be returned.
	Logout *bool `json:"logout,omitempty"`

	_rawJSON json.RawMessage
}

func (r *RefreshIdentityTokenRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler RefreshIdentityTokenRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = RefreshIdentityTokenRequest(value)
	r._rawJSON = json.RawMessage(data)
	return nil
}

func (r *RefreshIdentityTokenRequest) String() string {
	if len(r._rawJSON) > 0 {
		if value, err := core.StringifyJSON(r._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}

type RefreshIdentityTokenResponse struct {
	// A JSON Web Token.
	// Slightly modified to include a description prefix and use Protobufs of
	// JSON.
	Token string `json:"token"`
	// Token expiration time (in milliseconds).
	Exp        string    `json:"exp"`
	IdentityId uuid.UUID `json:"identity_id"`

	_rawJSON json.RawMessage
}

func (r *RefreshIdentityTokenResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler RefreshIdentityTokenResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = RefreshIdentityTokenResponse(value)
	r._rawJSON = json.RawMessage(data)
	return nil
}

func (r *RefreshIdentityTokenResponse) String() string {
	if len(r._rawJSON) > 0 {
		if value, err := core.StringifyJSON(r._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}
