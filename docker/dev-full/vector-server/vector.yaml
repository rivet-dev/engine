# See production config at ee/infra/tf/vector/vector.tf

data_dir: /var/lib/vector

api:
  enabled: true
  address: 0.0.0.0:8686
  playground: false

sources:
  vector:
    type: vector
    address: 0.0.0.0:6000
  
  tcp_json:
    type: socket
    mode: tcp
    address: 0.0.0.0:6100
    decoding:
      codec: json
  
  vector_metrics:
    type: internal_metrics
  
  vector_logs:
    type: internal_logs

transforms:
  actors:
    type: filter
    inputs:
      - vector
      - tcp_json
    condition:
      type: vrl
      source: .source == "actors"
  
  job_run:
    type: filter
    inputs:
      - vector
      - tcp_json
    condition:
      type: vrl
      source: .source == "job_run"
  
  pegboard:
    type: filter
    inputs:
      - vector
    condition:
      type: vrl
      source: .source == "pegboard_manager" || .source == "pegboard_v8_isolate_runner"
  
  pegboard_container_runner:
    type: filter
    inputs:
      - vector
    condition:
      type: vrl
      source: .source == "pegboard_container_runner"
      
  clickhouse_dynamic_events_filter:
    type: filter
    inputs:
      - vector
    condition:
      type: vrl
      source: .source == "clickhouse"
  
  clickhouse_dynamic_events_transform:
    type: remap
    inputs:
      - clickhouse_dynamic_events_filter
    source: |
      # Extract and store metadata
      __database = .database
      __table = .table
      __columns = .columns
      
      # Create a new object with just the columns data
      . = {
        "__database": __database,
        "__table": __table,
        # By default insert namespace column since most tables include this
        "namespace": "rivet"
      }
      
      # Merge in the column data that should be inserted
      . = merge!(., __columns)

sinks:
  prom_exporter:
    type: prometheus_exporter
    inputs:
      - vector
      - vector_metrics
    address: 0.0.0.0:9598
  
  console:
    type: console
    inputs:
      - vector_logs
    encoding:
      codec: text
  
  clickhouse_actor_logs:
    type: clickhouse
    inputs:
      - actors
    compression: gzip
    database: db_pegboard_actor_log
    endpoint: http://clickhouse:8123
    table: actor_logs2
    auth:
      strategy: basic
      user: vector
      password: vector
    batch:
      timeout_secs: 1.0
  
  clickhouse_job_run_logs:
    type: clickhouse
    inputs:
      - job_run
    compression: gzip
    database: db_job_log
    endpoint: http://clickhouse:8123
    table: run_logs
    auth:
      strategy: basic
      user: vector
      password: vector
    batch:
      timeout_secs: 1.0

  pegboard_logs:
    type: "file"
    inputs: ["pegboard"]
    path: "/var/log/vector/pegboard/%Y-%m-%d.log"
    encoding:
      codec: "text"
    
  pegboard_container_runner_logs:
    type: "file"
    inputs: ["pegboard_container_runner"]
    path: "/var/log/vector/pegboard_container_runner/%Y-%m-%d.log"
    encoding:
      codec: "text"
      
  clickhouse_dynamic_events:
    type: clickhouse
    inputs:
      - clickhouse_dynamic_events_transform
    compression: gzip
    endpoint: http://clickhouse:8123
    database: "{{ __database }}"
    table: "{{ __table }}"
    auth:
      strategy: basic
      user: vector
      password: vector
    batch:
      timeout_secs: 1.0

