syntax = "proto3";

package rivet.backend.cluster;

import "proto/common.proto";

message Cluster {
    rivet.common.Uuid cluster_id = 1;
    string name_id = 2;
    int64 create_ts = 3;
    // Unset for the default cluster.
    optional rivet.common.Uuid owner_team_id = 4;
}

enum Provider {
    LINODE = 0;
}

message Datacenter {
    rivet.common.Uuid datacenter_id = 1;
    rivet.common.Uuid cluster_id = 2;
    string name_id = 3;
    string display_name = 4;
    int64 create_ts = 11;

    Provider provider = 5;
    string provider_datacenter_id = 6;
    optional string provider_api_token = 7;

    repeated Pool pools = 8;
    BuildDeliveryMethod build_delivery_method = 9;
    bool prebakes_enabled = 12;
}

message Pool {
    PoolType pool_type = 1;
    // See docs on failover (/docs/packages/cluster/SERVER_PROVISIONING.md#creating-a-new-server)
    repeated Hardware hardware = 2;
    uint32 desired_count = 3;
    uint32 min_count = 6;
    uint32 max_count = 4;
    // Server drain timeout In ms
    uint64 drain_timeout = 5;
}

enum PoolType {
    JOB = 0;
    GG = 1;
    ATS = 2;
}

message Hardware {
    string provider_hardware = 1;
}

enum BuildDeliveryMethod {
    TRAFFIC_SERVER = 0;
    S3_DIRECT = 1;
}

message Server {
    rivet.common.Uuid server_id = 1;
    rivet.common.Uuid cluster_id = 2;
    rivet.common.Uuid datacenter_id = 3;
    PoolType pool_type = 4;
    optional string vlan_ip = 5;
    optional string public_ip = 6;

    optional int64 cloud_destroy_ts = 7;

    // TODO: Add the rest of the sql columns
}

enum TlsState {
    CREATING = 0;
    ACTIVE = 1;
    RENEWING = 2;
}

message ServerFilter {
	bool filter_server_ids = 1;
	repeated rivet.common.Uuid server_ids = 2;

	bool filter_cluster_ids = 3;
	repeated rivet.common.Uuid cluster_ids = 4;

	bool filter_datacenter_ids = 5;
	repeated rivet.common.Uuid datacenter_ids = 6;

	bool filter_pool_types = 7;
	repeated PoolType pool_types = 8;

	bool filter_public_ips = 9;
	repeated string public_ips = 10;
}
