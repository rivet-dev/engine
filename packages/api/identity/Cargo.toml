[package]
name = "api-identity"
version = "0.0.1"
edition = "2021"
authors = ["Rivet Gaming, LLC <developer@rivet.gg>"]
license = "Apache-2.0"

[dependencies]
rivet-convert = { path = "../../common/convert" }
api-helper = { path = "../../common/api-helper/build" }
async-trait = "0.1"
chirp-client = { path = "../../common/chirp/client" }
rivet-operation = { path = "../../common/operation/core" }
futures-util = "0.3"
http = "0.2"
hyper = { version = "0.14", features = ["server", "http1", "stream", "tcp"] }
lazy_static = "1.4"
prost = "0.10"
rivet-api = { path = "../../../sdks/full/rust" }
rivet-cache = { path = "../../common/cache/build" }
rivet-claims = { path = "../../common/claims" }
rivet-health-checks = { path = "../../common/health-checks" }
rivet-pools = { path = "../../common/pools" }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
tokio = { version = "1.40" }
tracing = "0.1"
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "fmt",
    "json",
    "ansi",
] }
url = "2.2.2"
util-game-user = { package = "rivet-util-game-user", path = "../../services/game-user/util" }
util-mm = { package = "rivet-util-mm", path = "../../services/mm/util" }
util-nsfw = { package = "rivet-util-nsfw", path = "../../services/nsfw/util" }
uuid = { version = "1", features = ["v4"] }

cdn-namespace-get = { path = "../../services/cdn/ops/namespace-get" }
game-get = { path = "../../services/game/ops/get" }
game-namespace-get = { path = "../../services/game/ops/namespace-get" }
game-namespace-resolve-url = { path = "../../services/game/ops/namespace-resolve-url" }
game-resolve-namespace-id = { path = "../../services/game/ops/resolve-namespace-id" }
game-user-create = { path = "../../services/game-user/ops/create" }
game-user-get = { path = "../../services/game-user/ops/get" }
game-user-link-create = { path = "../../services/game-user/ops/link-create" }
game-user-link-get = { path = "../../services/game-user/ops/link-get" }
game-user-recent-session-list = { path = "../../services/game-user/ops/recent-session-list" }
game-user-recommend = { path = "../../services/game-user/ops/recommend" }
identity-config-version-get = { path = "../../services/identity-config/ops/version-get" }
job-run = { path = "../../services/job-run" }
mm-config-lobby-group-resolve-version = { path = "../../services/mm-config/ops/lobby-group-resolve-version" }
mm-config-version-get = { path = "../../services/mm-config/ops/version-get" }
mm-lobby-get = { path = "../../services/mm/ops/lobby-get" }
region-get = { path = "../../services/region/ops/get" }
team-recommend = { path = "../../services/team/ops/recommend" }
token-create = { path = "../../services/token/ops/create" }
token-get = { path = "../../services/token/ops/get" }
token-revoke = { path = "../../services/token/ops/revoke" }
upload-prepare = { path = "../../services/upload/ops/prepare" }
user-avatar-upload-complete = { path = "../../services/user/ops/avatar-upload-complete" }
user-follow-list = { path = "../../services/user-follow/ops/list" }
user-follow-request-list = { path = "../../services/user-follow/ops/request-list" }
user-follow-toggle = { path = "../../services/user-follow/ops/toggle" }
user-get = { path = "../../services/user/ops/get" }
user-identity-get = { path = "../../services/user-identity/ops/get" }
user-mutual-friend-list = { path = "../../services/user/ops/mutual-friend-list" }
user-pending-delete-toggle = { path = "../../services/user/ops/pending-delete-toggle" }
user-profile-validate = { path = "../../services/user/ops/profile-validate" }
user-search = { path = "../../services/user/ops/search" }
rivet-config = { version = "0.1.0", path = "../../common/config" }
rivet-env = { version = "0.1.0", path = "../../common/env" }

[dev-dependencies]
rivet-connection = { path = "../../common/connection" }
rivet-identity = { path = "../../common/smithy-output/api-identity/rust" }
util-mm = { package = "rivet-util-mm", path = "../../services/mm/util" }
regex = "1.4"
rand = "0.8"

cdn-namespace-domain-create = { path = "../../services/cdn/ops/namespace-domain-create" }
cloud-namespace-token-development-create = { path = "../../services/cloud/ops/namespace-token-development-create" }
faker-build = { path = "../../services/faker/ops/build" }
faker-game = { path = "../../services/faker/ops/game" }
faker-game-namespace = { path = "../../services/faker/ops/game-namespace" }
faker-game-version = { path = "../../services/faker/ops/game-version" }
faker-region = { path = "../../services/faker/ops/region" }
faker-user = { path = "../../services/faker/ops/user" }
