use clickhouse_user_query::{Property, PropertyType, Schema};
use once_cell::sync::Lazy;

/// Schema for the http_requests analytics table
///
/// Excludes namespace as it's automatically provided by the system
pub static HTTP_REQUESTS_SCHEMA: Lazy<Schema> = Lazy::new(|| {
	Schema::new(vec![
		Property::new("request_id".to_string(), false, PropertyType::String).unwrap(),
		Property::new("client_ip".to_string(), false, PropertyType::String).unwrap(),
		Property::new(
			"client_request_body_bytes".to_string(),
			false,
			PropertyType::Number,
		)
		.unwrap(),
		Property::new(
			"client_request_host".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap()
		.with_group_by(true),
		Property::new(
			"client_request_method".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap()
		.with_group_by(true),
		Property::new(
			"client_request_path".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap()
		.with_group_by(true),
		Property::new(
			"client_request_protocol".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new(
			"client_request_referer".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new(
			"client_request_scheme".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new(
			"client_request_uri".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new(
			"client_request_user_agent".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new("client_src_port".to_string(), false, PropertyType::Number).unwrap(),
		Property::new(
			"client_x_requested_with".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new(
			"guard_datacenter_id".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap()
		.with_group_by(true),
		Property::new(
			"guard_response_body_bytes".to_string(),
			false,
			PropertyType::Number,
		)
		.unwrap(),
		Property::new(
			"guard_response_content_type".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new(
			"guard_response_status".to_string(),
			false,
			PropertyType::Number,
		)
		.unwrap()
		.with_group_by(true),
		Property::new("service_ip".to_string(), false, PropertyType::String).unwrap(),
		Property::new(
			"service_response_duration_ms".to_string(),
			false,
			PropertyType::Number,
		)
		.unwrap(),
		Property::new(
			"service_response_http_expires".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new(
			"service_response_http_last_modified".to_string(),
			false,
			PropertyType::String,
		)
		.unwrap(),
		Property::new(
			"service_response_status".to_string(),
			false,
			PropertyType::Number,
		)
		.unwrap()
		.with_group_by(true),
		Property::new("service_actor_id".to_string(), false, PropertyType::String)
			.unwrap()
			.with_group_by(true),
	])
	.unwrap()
});
