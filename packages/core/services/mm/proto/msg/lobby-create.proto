syntax = "proto3";

package rivet.backend.pkg.mm.msg.lobby_create;

import "resources/legacy/proto/common.proto";
import "resources/legacy/proto/backend/matchmaker.proto";
import "resources/legacy/proto/backend/job.proto";

/// name = "msg-mm-lobby-create"
/// parameters = [
/// 	{ name = "lobby_id" },
/// ]
message Message {
	reserved 5;

	rivet.common.Uuid lobby_id = 1;

	// The namespace this lobby is created in.
	rivet.common.Uuid namespace_id = 2;

	// The lobby group to create this lobby from.
	//
	// The version ID correlated with this lobby
	// group may be different than the version ID
	// associated with the namespace in the rare case
	// of a race condition with a lobby seek occurring
	// at the same time as a new namespace version is
	// set.
	rivet.common.Uuid lobby_group_id = 3;

	// The region to create the lobby in.
	//
	// This must be present in the lobby group's confic.
	rivet.common.Uuid region_id = 4;

	// Ray ID of the API request that created this lobby.
	optional rivet.common.Uuid create_ray_id = 6;

	// If a lobby row was preemptively inserted for this lobby.
	bool preemptively_created = 7;

	// The user (if any) that triggered this lobby's creation (either by /find or /create).
	optional rivet.common.Uuid creator_user_id = 8;
	// If this is a custom lobby created by a user.
	bool is_custom = 9;
	// Publicity of the lobby. Private lobbies do not show up in /list. Defaults to
	// public when not set.
	optional rivet.backend.matchmaker.Lobby.Publicity publicity = 10;

	// Extra lobby config provided by the user in /create. Sent to the lobby as an env var.
	optional string lobby_config_json = 11;

	map<string, string> tags = 13;

	// User configured player count that overrides the config.
	optional uint32 dynamic_max_players = 12;

	// Extra parameters for the job run
	repeated rivet.backend.job.Parameter parameters = 14;
}

