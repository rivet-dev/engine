# Create nats user
if ! id -u "nats" &>/dev/null; then
	useradd -r -s /bin/false nats
fi

# Create required dirs
mkdir -p /etc/nats /var/log/nats /usr/local/bin

# Download and install NATS binary
curl -sfL "https://github.com/nats-io/nats-server/releases/download/v__VERSION__/nats-server-v__VERSION__-linux-amd64.zip" -o /tmp/nats-server.zip
unzip -qo /tmp/nats-server.zip -d /tmp/nats-server
mv /tmp/nats-server/nats-server-v__VERSION__-linux-amd64/nats-server /usr/local/bin/nats-server
chmod +x /usr/local/bin/nats-server
rm -rf /tmp/nats-server /tmp/nats-server.zip

# Write config
cat << 'EOF' > /etc/nats/server.conf
log_file: "/var/log/nats/log"
logtime: true
# debug: true

authorization {
  user: "__USERNAME__"
  password: "__PASSWORD__"
}

cluster {
  name: rivet
  listen: 0.0.0.0:4248

  authorization {
    user: "__USERNAME__"
    password: "__PASSWORD__"
  }

  routes = [
    # dynamically generated by rivet_fetch_nats_routes.sh
  ]
}
EOF

# Change owner
chown -R nats:nats /etc/nats /var/log/nats /etc/nats/server.conf

cat << EOF > /etc/systemd/system/nats.service
[Unit]
Description=NATS Server
After=network.target

[Service]
User=nats
Group=nats
ExecStart=/usr/local/bin/nats-server -c /etc/nats/server.conf
Restart=always
RestartSec=5

# Real time service
CPUSchedulingPolicy=fifo
# High CPU priority
CPUSchedulingPriority=90

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable nats
# Start will be handled after rivet_fetch_nats_routes.service runs
