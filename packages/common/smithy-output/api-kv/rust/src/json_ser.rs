// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_put_input(
	object: &mut aws_smithy_json::serialize::JsonObjectWriter,
	input: &crate::input::PutInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
	if let Some(var_1) = &input.key {
		object.key("key").string(var_1.as_str());
	}
	if let Some(var_2) = &input.namespace_id {
		object.key("namespace_id").string(var_2.as_str());
	}
	if let Some(var_3) = &input.value {
		object.key("value").document(var_3);
	}
	Ok(())
}

pub fn serialize_structure_crate_input_put_batch_input(
	object: &mut aws_smithy_json::serialize::JsonObjectWriter,
	input: &crate::input::PutBatchInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
	if let Some(var_4) = &input.entries {
		let mut array_5 = object.key("entries").start_array();
		for item_6 in var_4 {
			{
				let mut object_7 = array_5.value().start_object();
				crate::json_ser::serialize_structure_crate_model_put_entry(&mut object_7, item_6)?;
				object_7.finish();
			}
		}
		array_5.finish();
	}
	if let Some(var_8) = &input.namespace_id {
		object.key("namespace_id").string(var_8.as_str());
	}
	Ok(())
}

pub fn serialize_structure_crate_model_put_entry(
	object: &mut aws_smithy_json::serialize::JsonObjectWriter,
	input: &crate::model::PutEntry,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
	if let Some(var_9) = &input.key {
		object.key("key").string(var_9.as_str());
	}
	if let Some(var_10) = &input.value {
		object.key("value").document(var_10);
	}
	Ok(())
}
