// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// Operation shape for `VerifyCustomHostname`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`verify_custom_hostname`](crate::client::Client::verify_custom_hostname).
///
/// See [`crate::client::fluent_builders::VerifyCustomHostname`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct VerifyCustomHostname {
	_private: (),
}
impl VerifyCustomHostname {
	/// Creates a new builder-style object to manufacture [`VerifyCustomHostnameInput`](crate::input::VerifyCustomHostnameInput)
	pub fn builder() -> crate::input::verify_custom_hostname_input::Builder {
		crate::input::verify_custom_hostname_input::Builder::default()
	}
	/// Creates a new `VerifyCustomHostname` operation.
	pub fn new() -> Self {
		Self { _private: () }
	}
}
impl aws_smithy_http::response::ParseStrictResponse for VerifyCustomHostname {
	type Output = std::result::Result<
		crate::output::VerifyCustomHostnameOutput,
		crate::error::VerifyCustomHostnameError,
	>;
	fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
		if !response.status().is_success() && response.status().as_u16() != 200 {
			crate::operation_deser::parse_verify_custom_hostname_error(response)
		} else {
			crate::operation_deser::parse_verify_custom_hostname_response(response)
		}
	}
}
