// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct TraefikConfigOutput {
	#[allow(missing_docs)] // documentation missing in model
	pub http: std::option::Option<crate::model::TraefikHttpNullified>,
}
impl TraefikConfigOutput {
	#[allow(missing_docs)] // documentation missing in model
	pub fn http(&self) -> std::option::Option<&crate::model::TraefikHttpNullified> {
		self.http.as_ref()
	}
}
impl std::fmt::Debug for TraefikConfigOutput {
	fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
		let mut formatter = f.debug_struct("TraefikConfigOutput");
		formatter.field("http", &self.http);
		formatter.finish()
	}
}
/// See [`TraefikConfigOutput`](crate::output::TraefikConfigOutput)
pub mod traefik_config_output {
	/// A builder for [`TraefikConfigOutput`](crate::output::TraefikConfigOutput)
	#[non_exhaustive]
	#[derive(std::default::Default, std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
	pub struct Builder {
		pub(crate) http: std::option::Option<crate::model::TraefikHttpNullified>,
	}
	impl Builder {
		#[allow(missing_docs)] // documentation missing in model
		pub fn http(mut self, input: crate::model::TraefikHttpNullified) -> Self {
			self.http = Some(input);
			self
		}
		#[allow(missing_docs)] // documentation missing in model
		pub fn set_http(
			mut self,
			input: std::option::Option<crate::model::TraefikHttpNullified>,
		) -> Self {
			self.http = input;
			self
		}
		/// Consumes the builder and constructs a [`TraefikConfigOutput`](crate::output::TraefikConfigOutput)
		pub fn build(self) -> crate::output::TraefikConfigOutput {
			crate::output::TraefikConfigOutput { http: self.http }
		}
	}
}
impl TraefikConfigOutput {
	/// Creates a new builder-style object to manufacture [`TraefikConfigOutput`](crate::output::TraefikConfigOutput)
	pub fn builder() -> crate::output::traefik_config_output::Builder {
		crate::output::traefik_config_output::Builder::default()
	}
}
